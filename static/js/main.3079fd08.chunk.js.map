{"version":3,"sources":["Components/MagicDeckPreviewCard.tsx","Components/CommanderDecklists.tsx","Components/Decklist.tsx","Components/CommanderDecklistsPage.tsx","Components/RecipePage.tsx","Components/ModernDecks.tsx","Components/ModernDecklistsPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MagicDeckPreviewCard","props","arguments","length","undefined","deckname","previewCard","description","_useState","useState","_useState2","_slicedToArray","previewUrl","setPreviewUrl","http","XMLHttpRequest","onreadystatechange","this","readyState","status","txt","responseText","obj","JSON","parse","hasOwnProperty","image_uris","normal","card_faces","open","send","React","createElement","Card","CardContent","Typography","variant","color","gutterBottom","CardMedia","component","image","alt","sx","textAlign","fontSize","CommanderDecks","Grid","container","overflow","item","xs","display","gridTemplateColumns","md","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","defineProperty","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Decklist","list","setList","_useState3","_useState4","data","setData","_ProcessDecklist","_asyncToGenerator","_callee","decklist","lines","_context","console","log","split","concat","apply","useEffect","ProcessDecklist","fetch","headers","Content-Type","Accept","out","text","List","map","index","ListItem","CommanderDecklistsPage","document","title","Box","height","RecipePage","ModernDecks","ModernDecklistsPage","theme","createTheme","palette","mode","App","_React$useState","_React$useState2","openGames","setOpenGames","_React$useState3","_React$useState4","openMagic","setMagic","BrowserRouter","CssBaseline","ThemeProvider","AppBar","position","width","ml","Toolbar","noWrap","Drawer","flexShrink","& .MuiDrawer-paper","minHeight","boxSizing","anchor","ListItemButton","to","Link","onClick","ExpandLess","ExpandMore","Collapse","in","disablePadding","ListItemIcon","ListItemText","primary","paddingLeft","flexGrow","p","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"6ZAiBO,SAASA,IAMd,IALAC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CACrBG,SAAU,MACVC,YAAa,eACbC,YAAa,sCACdC,EAEmCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC5BI,EAAO,IAAIC,eAoBf,OAnBAD,EAAKE,mBAAqB,WACxB,GAAuB,GAAnBC,KAAKC,YAAkC,KAAfD,KAAKE,OAAe,CAC9C,IAAIC,EAAMH,KAAKI,aACXC,EAAMC,KAAKC,MAAMJ,GACjBE,EAAIG,eAAe,cACrBZ,EAAcS,EAAII,WAAWC,QAE7Bd,EAAcS,EAAIM,WAAW,GAAGF,WAAWC,UAKjDb,EAAKe,KACH,MACA,8CAAgD5B,EAAMK,aACtD,GAEFQ,EAAKgB,OAGHC,IAAAC,cAACC,IAAI,KACHF,IAAAC,cAACE,IAAW,KACVH,IAAAC,cAACG,IAAU,CAACC,QAAQ,KAAKC,MAAM,iBAAiBC,cAAY,GACzDrC,EAAMI,UAET0B,IAAAC,cAACO,IAAS,CAACC,UAAU,MAAMC,MAAO7B,EAAY8B,IAAKzC,EAAMI,WACzD0B,IAAAC,cAACG,IAAU,CAACQ,GAAI,CAAEC,UAAW,SAAUC,SAAU,IAAML,UAAU,OAC9DvC,EAAMM,eClDV,SAASuC,IACd,OACEf,IAAAC,cAACe,IAAI,CAACC,WAAS,EAACL,GAAI,CAAEM,SAAU,WAC9BlB,IAAAC,cAACe,IAAI,CACHG,MAAI,EACJC,GAAI,GACJC,QAAQ,OACRT,GAAI,CAAEU,oBAAqB,CAAEC,GAAI,yBAEjCvB,IAAAC,cAAChC,EAAoB,CACnBK,SAAS,kBACTC,YAAY,+BAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,8BAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,iBACVC,YAAY,oBAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,aACVC,YAAY,YAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,gCAGdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,aACVC,YAAY,UAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,cACVC,YAAY,WAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,gBACVC,YAAY,2BAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,mBAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,UACVC,YAAY,SAGdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,cACVC,YAAY,wBAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,aACVC,YAAY,WAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,gBAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,iBACVC,YAAY,oBAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,oBACVC,YAAY,YAGdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,aAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,gBACVC,YAAY,WAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,oBACVC,YAAY,0BAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,aACVC,YAAY,wBAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,eAGdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,gBACVC,YAAY,4BAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,UAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,iBACVC,YAAY,YAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,iBACVC,YAAY,0BAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,mBACVC,YAAY,4BAGdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,mBACVC,YAAY,wBAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,iBACVC,YAAY,2BAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,kBACVC,YAAY,iCAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,mBACVC,YAAY,UAEdyB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,mBACVC,YAAY,uDCtItBiD,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAhC,eAAAoC,EAAAH,OAAAG,gBAAA,SAAAvC,EAAAwC,EAAAC,GAAAzC,EAAAwC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAnD,EAAAwC,EAAAE,GAAA,OAAAN,OAAAG,eAAAvC,EAAAwC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAtD,EAAAwC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAnD,EAAAwC,EAAAE,GAAA,OAAA1C,EAAAwC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAA3B,OAAA4B,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAArE,EAAAsE,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAxE,EAAAsE,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAArB,EAAAsB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAlD,OAAA,IAAAkF,EAAAzC,OAAA0C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA5C,GAAAG,EAAAkC,KAAAO,EAAAlC,KAAA+B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAAyB,EAAAzB,UAAAD,OAAA4B,OAAAY,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,QAAA,SAAAC,GAAAjC,EAAAd,EAAA+C,EAAA,SAAAd,GAAA,OAAA3E,KAAA0F,QAAAD,EAAAd,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAjD,EAAA5C,KAAA,WAAA+C,MAAA,SAAA0C,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAuB,EAAAtB,KAAA,KAAAuB,EAAAD,EAAAvB,IAAA5B,EAAAoD,EAAApD,MAAA,OAAAA,GAAA,iBAAAA,GAAAJ,EAAAkC,KAAA9B,EAAA,WAAA6C,EAAAG,QAAAhD,EAAAqD,SAAAC,KAAA,SAAAtD,GAAAkD,EAAA,OAAAlD,EAAAgD,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAAhD,GAAAsD,KAAA,SAAAC,GAAAH,EAAApD,MAAAuD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAf,EAAAd,GAAA,iBAAA6B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAd,EAAA,OAAA+B,IAAA,IAAApC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAAgC,EAAArC,EAAAqC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAArC,GAAA,GAAAsC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,GAAA,YAAAtC,EAAAmB,OAAAnB,EAAAwC,KAAAxC,EAAAyC,MAAAzC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAA0C,kBAAA1C,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA2C,OAAA,SAAA3C,EAAAK,KAAA6B,EAAA,gBAAAN,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAAtB,KAAA,IAAA4B,EAAAlC,EAAA4C,KAAA,6BAAAhB,EAAAvB,MAAAG,EAAA,gBAAA/B,MAAAmD,EAAAvB,IAAAuC,KAAA5C,EAAA4C,MAAA,UAAAhB,EAAAtB,OAAA4B,EAAA,YAAAlC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAkC,EAAAF,EAAArC,GAAA,IAAA6C,EAAA7C,EAAAmB,SAAAkB,EAAAxD,SAAAgE,GAAA,QAAAhI,IAAAsG,EAAA,OAAAnB,EAAAqC,SAAA,eAAAQ,GAAAR,EAAAxD,SAAAiE,SAAA9C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAxF,EAAA0H,EAAAF,EAAArC,GAAA,UAAAA,EAAAmB,SAAA,WAAA0B,IAAA7C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAAF,EAAA,aAAArC,EAAA,IAAAoB,EAAAzB,EAAAgB,EAAAkB,EAAAxD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAAtB,KAAA,OAAAN,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAqC,SAAA,KAAA7B,EAAA,IAAAwC,EAAApB,EAAAvB,IAAA,OAAA2C,IAAAJ,MAAA5C,EAAAqC,EAAAY,YAAAD,EAAAvE,MAAAuB,EAAAkD,KAAAb,EAAAc,QAAA,WAAAnD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxF,GAAAmF,EAAAqC,SAAA,KAAA7B,GAAAwC,GAAAhD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAqC,SAAA,KAAA7B,GAAA,SAAA4C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3H,KAAAiI,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA1B,EAAA0B,EAAAQ,YAAA,GAAAlC,EAAAtB,KAAA,gBAAAsB,EAAAvB,IAAAiD,EAAAQ,WAAAlC,EAAA,SAAA3B,EAAAN,GAAAjE,KAAAiI,WAAA,EAAAJ,OAAA,SAAA5D,EAAAuB,QAAAkC,EAAA1H,WAAAqI,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA1D,KAAAyD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAApJ,QAAA,KAAAuJ,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAApJ,QAAA,GAAAyD,EAAAkC,KAAAyD,EAAAG,GAAA,OAAAjB,EAAAzE,MAAAuF,EAAAG,GAAAjB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAzE,WAAA5D,EAAAqI,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAA3D,WAAA5D,EAAA+H,MAAA,UAAAnC,EAAArC,UAAAsC,EAAApC,EAAA0C,EAAA,eAAAvC,MAAAiC,EAAAtB,cAAA,IAAAd,EAAAoC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA2D,YAAAlF,EAAAwB,EAAA1B,EAAA,qBAAAf,EAAAoG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAAE,QAAAxG,EAAAyG,KAAA,SAAAJ,GAAA,OAAAnG,OAAAwG,eAAAxG,OAAAwG,eAAAL,EAAA5D,IAAA4D,EAAAM,UAAAlE,EAAAxB,EAAAoF,EAAAtF,EAAA,sBAAAsF,EAAAlG,UAAAD,OAAA4B,OAAAiB,GAAAsD,GAAArG,EAAA4G,MAAA,SAAAxE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAjD,WAAAc,EAAAmC,EAAAjD,UAAAU,EAAA,kBAAApD,OAAAuC,EAAAoD,gBAAApD,EAAA6G,MAAA,SAAAtF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAAyD,SAAA,IAAAC,EAAA,IAAA3D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAArD,EAAAoG,oBAAA5E,GAAAuF,IAAA9B,OAAAnB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAApD,MAAAuG,EAAA9B,UAAAjC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAAlD,OAAAwD,EAAA8B,EAAA,mDAAA/C,EAAAgH,KAAA,SAAAC,GAAA,IAAAC,EAAAhH,OAAA+G,GAAAD,EAAA,WAAA1G,KAAA4G,EAAAF,EAAArB,KAAArF,GAAA,OAAA0G,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAArK,QAAA,KAAA2D,EAAA0G,EAAAI,MAAA,GAAA9G,KAAA4G,EAAA,OAAAjC,EAAAzE,MAAAF,EAAA2E,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAjF,EAAA8C,SAAAd,EAAA7B,UAAA,CAAAoG,YAAAvE,EAAA8D,MAAA,SAAAuB,GAAA,GAAA5J,KAAA6J,KAAA,EAAA7J,KAAAwH,KAAA,EAAAxH,KAAA8G,KAAA9G,KAAA+G,WAAA5H,EAAAa,KAAAkH,MAAA,EAAAlH,KAAA2G,SAAA,KAAA3G,KAAAyF,OAAA,OAAAzF,KAAA2E,SAAAxF,EAAAa,KAAAiI,WAAAzC,QAAA2C,IAAAyB,EAAA,QAAAb,KAAA/I,KAAA,MAAA+I,EAAAe,OAAA,IAAAnH,EAAAkC,KAAA7E,KAAA+I,KAAAP,OAAAO,EAAAgB,MAAA,MAAA/J,KAAA+I,QAAA5J,IAAA6K,KAAA,WAAAhK,KAAAkH,MAAA,MAAA+C,EAAAjK,KAAAiI,WAAA,GAAAG,WAAA,aAAA6B,EAAArF,KAAA,MAAAqF,EAAAtF,IAAA,OAAA3E,KAAAkK,MAAAlD,kBAAA,SAAAmD,GAAA,GAAAnK,KAAAkH,KAAA,MAAAiD,EAAA,IAAA7F,EAAAtE,KAAA,SAAAoK,EAAAC,EAAAC,GAAA,OAAApE,EAAAtB,KAAA,QAAAsB,EAAAvB,IAAAwF,EAAA7F,EAAAkD,KAAA6C,EAAAC,IAAAhG,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAxF,KAAAmL,EAAA,QAAA7B,EAAAzI,KAAAiI,WAAA/I,OAAA,EAAAuJ,GAAA,IAAAA,EAAA,KAAAb,EAAA5H,KAAAiI,WAAAQ,GAAAvC,EAAA0B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA7H,KAAA6J,KAAA,KAAAU,EAAA5H,EAAAkC,KAAA+C,EAAA,YAAA4C,EAAA7H,EAAAkC,KAAA+C,EAAA,iBAAA2C,GAAAC,EAAA,IAAAxK,KAAA6J,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA9H,KAAA6J,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAAvK,KAAA6J,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,6CAAAzG,KAAA6J,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAd,OAAA,SAAArC,EAAAD,GAAA,QAAA8D,EAAAzI,KAAAiI,WAAA/I,OAAA,EAAAuJ,GAAA,IAAAA,EAAA,KAAAb,EAAA5H,KAAAiI,WAAAQ,GAAA,GAAAb,EAAAC,QAAA7H,KAAA6J,MAAAlH,EAAAkC,KAAA+C,EAAA,eAAA5H,KAAA6J,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA7F,GAAA,aAAAA,IAAA6F,EAAA5C,QAAAlD,MAAA8F,EAAA1C,aAAA0C,EAAA,UAAAvE,EAAAuE,IAAArC,WAAA,UAAAlC,EAAAtB,OAAAsB,EAAAvB,MAAA8F,GAAAzK,KAAAyF,OAAA,OAAAzF,KAAAwH,KAAAiD,EAAA1C,WAAAjD,GAAA9E,KAAA0K,SAAAxE,IAAAwE,SAAA,SAAAxE,EAAA8B,GAAA,aAAA9B,EAAAtB,KAAA,MAAAsB,EAAAvB,IAAA,gBAAAuB,EAAAtB,MAAA,aAAAsB,EAAAtB,KAAA5E,KAAAwH,KAAAtB,EAAAvB,IAAA,WAAAuB,EAAAtB,MAAA5E,KAAAkK,KAAAlK,KAAA2E,IAAAuB,EAAAvB,IAAA3E,KAAAyF,OAAA,SAAAzF,KAAAwH,KAAA,kBAAAtB,EAAAtB,MAAAoD,IAAAhI,KAAAwH,KAAAQ,GAAAlD,GAAA6F,OAAA,SAAA5C,GAAA,QAAAU,EAAAzI,KAAAiI,WAAA/I,OAAA,EAAAuJ,GAAA,IAAAA,EAAA,KAAAb,EAAA5H,KAAAiI,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA/H,KAAA0K,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA9C,IAAA8F,MAAA,SAAA/C,GAAA,QAAAY,EAAAzI,KAAAiI,WAAA/I,OAAA,EAAAuJ,GAAA,IAAAA,EAAA,KAAAb,EAAA5H,KAAAiI,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAQ,WAAA,aAAAlC,EAAAtB,KAAA,KAAAiG,EAAA3E,EAAAvB,IAAAwD,EAAAP,GAAA,OAAAiD,GAAA,UAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAzH,KAAA2G,SAAA,CAAAxD,SAAAkC,EAAAiD,GAAAf,aAAAE,WAAA,SAAAzH,KAAAyF,SAAAzF,KAAA2E,SAAAxF,GAAA2F,IAAAvC,EAMO,SAASwI,EAAS/L,GAAsB,IAAAO,EACrBC,mBAAmB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCyL,EAAIvL,EAAA,GAAEwL,EAAOxL,EAAA,GAAAyL,EACI1L,qBAAe2L,EAAAzL,YAAAwL,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEU,SAAAG,IAY7B,OAZ6BA,EAAAC,YAAAjJ,IAAA0G,KAA9B,SAAAwC,IAAA,IAAAC,EAAAC,EAAAjD,EAAA,OAAAnG,IAAAuB,KAAA,SAAA8H,GAAA,cAAAA,EAAA9B,KAAA8B,EAAAnE,MAAA,OAKE,IAJU,yBACVoE,QAAQC,IAAIT,GACRK,EAAqB,GACrBC,EAAQN,EAAKU,MAAM,MACdrD,EAAI,EAAGA,EAAIiD,EAAMxM,OAAQuJ,IAChCgD,EAAWA,EAASM,OAAOL,EAAMjD,IACjCmD,QAAQC,IAAIH,EAAMjD,IAGF,OADlBmD,QAAQC,IAAIJ,GACZR,EAAQQ,GAAUE,EAAA1E,OAAA,SACXwE,GAAQ,wBAAAE,EAAA3B,SAAAwB,OAChBQ,MAAAhM,KAAAf,WAqBD,OAnBAgN,oBAAU,WACJb,GAjBc,WAEUE,EAAAU,MAAAhM,KAAAf,WAgB1BiN,IAED,CAACd,IAEJa,oBAAU,WACRE,MAAM,cAAgBnN,EAAMyM,SAAW,OAAQ,CAC7CW,QAAS,CACPC,eAAgB,OAChBC,OAAQ,UAETjG,KAAK,SAACkG,GAAG,OACVA,EAAIC,OAAOnG,KAAK,SAACkG,GACflB,EAAQkB,SAMZzL,IAAAC,cAACe,IAAI,CAACC,WAAS,EAACL,GAAI,CAAEM,SAAU,WAC9BlB,IAAAC,cAACe,IAAI,CACHG,MAAI,EACJC,GAAI,GACJC,QAAQ,OACRT,GAAI,CAAEU,oBAAqB,CAAEC,GAAI,aAEjCvB,IAAAC,cAAC0L,IAAI,KACFzB,EAAK0B,IAAI,SAACF,EAAMG,GAAK,OACpB7L,IAAAC,cAAC6L,IAAQ,CAAC/J,IAAK8J,GAAQH,QChD5B,SAASK,IAId,OAHAZ,oBAAU,WACRa,SAASC,MAAQ,mBAChB,IAEDjM,IAAAC,cAACiM,IAAG,KACFlM,IAAAC,cAACe,IAAI,CAACC,WAAS,GACbjB,IAAAC,cAACe,IAAI,CACHG,MAAI,EACJC,GAAI,GACJC,QAAQ,OACRT,GAAI,CAAEU,oBAAqB,CAAEC,GAAI,WAAa4K,OAAQ,SAEtDnM,IAAAC,cAACc,EAAc,MACff,IAAAC,cAACgK,EAAQ,CAACU,SAAS,aCjBtB,SAASyB,IAId,OAHAjB,oBAAU,WACRa,SAASC,MAAQ,WAChB,IACIjM,IAAAC,cAACiM,IAAG,KAAC,WCJP,SAASG,IACd,OACErM,IAAAC,cAACe,IAAI,CAACC,WAAS,EAACL,GAAI,CAAEM,SAAU,WAC9BlB,IAAAC,cAACe,IAAI,CACHG,MAAI,EACJC,GAAI,GACJC,QAAQ,OACRT,GAAI,CAAEU,oBAAqB,CAAEC,GAAI,qBAEjCvB,IAAAC,cAAChC,EAAoB,CACnBK,SAAS,UACTC,YAAY,oBACZC,YAAY,6DAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,oBACZC,YAAY,yFAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,cACVC,YAAY,oBACZC,YAAY,wEAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,UACVC,YAAY,gBACZC,YAAY,wEAGdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,gBACVC,YAAY,yBACZC,YAAY,iGAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,WACVC,YAAY,UACZC,YAAY,gFAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,UACVC,YAAY,UACZC,YAAY,iBAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,eACVC,YAAY,mBACZC,YAAY,kHAGdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,aACVC,YAAY,6BACZC,YAAY,6CAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,SACVC,YAAY,eACZC,YAAY,+FAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,aACVC,YAAY,oBACZC,YAAY,kGAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,qBACVC,YAAY,eACZC,YAAY,4GAGdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,iBACVC,YAAY,kBACZC,YAAY,sGAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,mBACVC,YAAY,uBACZC,YAAY,sIAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,aACVC,YAAY,+BACZC,YAAY,kHAEdwB,IAAAC,cAAChC,EAAoB,CACnBK,SAAU,mBACVC,YAAY,mBACZC,YAAY,sHCvFf,SAAS8N,IAId,OAHAnB,oBAAU,WACRa,SAASC,MAAQ,gBAChB,IAEDjM,IAAAC,cAACiM,IAAG,KACFlM,IAAAC,cAACe,IAAI,CAACC,WAAS,GACbjB,IAAAC,cAACe,IAAI,CACHG,MAAI,EACJC,GAAI,GACJC,QAAQ,OACRT,GAAI,CAAEU,oBAAqB,CAAEC,GAAI,WAAa4K,OAAQ,SAEtDnM,IAAAC,cAACoM,EAAW,MACZrM,IAAAC,cAACgK,EAAQ,CAACU,SAAS,aCQ7B,IAAM4B,EAAQC,YAAY,CAAEC,QAAS,CAAEC,KAAM,WA4G9BC,MA1Gf,WAAe,IAAAC,EACqB5M,IAAMtB,UAAS,GAAMmO,EAAAjO,YAAAgO,EAAA,GAAhDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACAhN,IAAMtB,UAAS,GAAMuO,EAAArO,YAAAoO,EAAA,GAA5CE,EAASD,EAAA,GAAEE,EAAQF,EAAA,GAW1B,OAHA9B,oBAAU,WACRa,SAASC,MAAQ,mBAChB,IAEDjM,IAAAC,cAACmN,IAAa,KACZpN,IAAAC,cAACiM,IAAG,CAAC7K,QAAS,QACZrB,IAAAC,cAACoN,IAAW,MAEZrN,IAAAC,cAACqN,IAAa,CAACf,MAAOA,GACpBvM,IAAAC,cAACsN,IAAM,CACLC,SAAS,QACT5M,GAAI,CACF6M,MAAK,eAAAxC,OAAiB,IAAG,OACzByC,GAAE,GAAAzC,OAAK,IAAG,QAGZjL,IAAAC,cAAC0N,IAAO,KACN3N,IAAAC,cAACG,IAAU,CAACC,QAAQ,KAAKuN,QAAM,EAACnN,UAAU,OAAM,6BAKpDT,IAAAC,cAAC4N,IAAM,CACLjN,GAAI,CACF6M,MAAO,IACPK,WAAY,EACZC,qBAAsB,CACpBN,MAAO,IACPO,UAAW,QACXC,UAAW,eAGf5N,QAAQ,YACR6N,OAAO,QAEPlO,IAAAC,cAAC0N,IAAO,KACN3N,IAAAC,cAACG,IAAU,CAACC,QAAQ,KAAKuN,QAAM,EAACnN,UAAU,OAAM,cAIlDT,IAAAC,cAAC0L,IAAI,KACH3L,IAAAC,cAACkO,IAAc,CAACC,GAAI,WAAY3N,UAAW4N,KAAM,WAGjDrO,IAAAC,cAACkO,IAAc,CAACG,QAnDJ,WACtBvB,GAAcD,KAkDsC,QAEvCA,EAAY9M,IAAAC,cAACsO,IAAU,MAAMvO,IAAAC,cAACuO,IAAU,OAE3CxO,IAAAC,cAACwO,IAAQ,CAACC,GAAI5B,GACZ9M,IAAAC,cAAC0L,IAAI,KACF,CAAC,cAAe,UAAUC,IAAI,SAACF,EAAMG,GAAK,OACzC7L,IAAAC,cAAC6L,IAAQ,CAAC/J,IAAK2J,EAAMiD,gBAAc,GACjC3O,IAAAC,cAACkO,IAAc,KACbnO,IAAAC,cAAC2O,IAAY,MACb5O,IAAAC,cAAC4O,IAAY,CAACC,QAASpD,UAMjC1L,IAAAC,cAACkO,IAAc,CAACG,QA/DJ,WACtBnB,GAAUD,KA8D0C,cAEvCA,EAAYlN,IAAAC,cAACsO,IAAU,MAAMvO,IAAAC,cAACuO,IAAU,OAE3CxO,IAAAC,cAACwO,IAAQ,CAACC,GAAIxB,GACZlN,IAAAC,cAAC0L,IAAI,KACH3L,IAAAC,cAAC6L,IAAQ,CAAClL,GAAI,CAAEmO,YAAa,QAC3B/O,IAAAC,cAACkO,IAAc,CAACC,GAAI,aAAc3N,UAAW4N,KAAM,cAKrDrO,IAAAC,cAAC6L,IAAQ,CAAClL,GAAI,CAAEmO,YAAa,QAC3B/O,IAAAC,cAACkO,IAAc,CAACC,GAAI,UAAW3N,UAAW4N,KAAM,eAQ1DrO,IAAAC,cAACiM,IAAG,CAACzL,UAAU,OAAOG,GAAI,CAAEoO,SAAU,EAAGC,EAAG,IAC1CjP,IAAAC,cAAC0N,IAAO,MACR3N,IAAAC,cAACiP,IAAM,KACLlP,IAAAC,cAACkP,IAAK,CAACC,KAAK,IAAIC,QAASrP,IAAAC,cAAC8L,EAAsB,QAChD/L,IAAAC,cAACkP,IAAK,CAACC,KAAK,aAAaC,QAASrP,IAAAC,cAAC8L,EAAsB,QACzD/L,IAAAC,cAACkP,IAAK,CAACC,KAAK,UAAUC,QAASrP,IAAAC,cAACqM,EAAmB,QACnDtM,IAAAC,cAACkP,IAAK,CAACC,KAAK,WAAWC,QAASrP,IAAAC,cAACmM,EAAU,cCjH1CkD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnK,KAAAkK,EAAAE,KAAA,WAAqBpK,KAAK,SAAAqK,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCHDW,IAASC,WACpBnE,SAASoE,eAAe,SAErBC,OACHrQ,IAAAC,cAACD,IAAMsQ,WAAU,KACftQ,IAAAC,cAAC0M,EAAG,QAOR2C","file":"static/js/main.3079fd08.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface decklistProps {\r\n  deckname: string;\r\n  previewCard: string;\r\n  description?: string;\r\n  file?: string;\r\n}\r\n\r\nexport function MagicDeckPreviewCard(\r\n  props: decklistProps = {\r\n    deckname: \"oof\",\r\n    previewCard: \"Gone Missing\",\r\n    description: \"Damn I forgot to describe this one\",\r\n  }\r\n) {\r\n  const [previewUrl, setPreviewUrl] = useState(\"\");\r\n  var http = new XMLHttpRequest();\r\n  http.onreadystatechange = function () {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      var txt = this.responseText;\r\n      var obj = JSON.parse(txt);\r\n      if (obj.hasOwnProperty(\"image_uris\")) {\r\n        setPreviewUrl(obj.image_uris.normal);\r\n      } else {\r\n        setPreviewUrl(obj.card_faces[0].image_uris.normal);\r\n      }\r\n    }\r\n  };\r\n\r\n  http.open(\r\n    \"GET\",\r\n    \"https://api.scryfall.com/cards/named?fuzzy=\" + props.previewCard,\r\n    true\r\n  );\r\n  http.send();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n          {props.deckname}\r\n        </Typography>\r\n        <CardMedia component=\"img\" image={previewUrl} alt={props.deckname} />\r\n        <Typography sx={{ textAlign: \"center\", fontSize: 18 }} component=\"div\">\r\n          {props.description}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React from \"react\";\r\nexport function CommanderDecks() {\r\n  return (\r\n    <Grid container sx={{ overflow: \"scroll\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr 1fr\" } }}\r\n      >\r\n        <MagicDeckPreviewCard\r\n          deckname=\"White Hatebears\"\r\n          previewCard=\"Thalia Guardian of Thraben\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Blue Tappers\"}\r\n          previewCard=\"Aboshan, Cephalid Emperor\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Black Instants\"}\r\n          previewCard=\"Toshiro Umezawa\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Red Devils\"}\r\n          previewCard=\"Zurzoth\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Green Stompy\"}\r\n          previewCard=\"Selvala, heart of the wilds\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WU Control\"}\r\n          previewCard=\"Kwain\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UB Mischief\"}\r\n          previewCard=\"Yuriko\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BR Group Slug\"}\r\n          previewCard=\"Tor Wauki, the younger\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"RG Artifacts\"}\r\n          previewCard=\"Meria, Scholar\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"GW 1/1s\"}\r\n          previewCard=\"Bess\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WB Lifegain\"}\r\n          previewCard=\"Karlov of the ghost\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UR Wizards\"}\r\n          previewCard=\"Adeliz\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BG Squirrels\"}\r\n          previewCard=\"Chatterfang\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"RW Gold Golems\"}\r\n          previewCard=\"General Ferrous\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"GU Frog Self-Mill\"}\r\n          previewCard=\"Grolnok\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Bant Flicker\"}\r\n          previewCard=\"Lagrella\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Esper Zombies\"}\r\n          previewCard=\"Varina\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Grixis 40k Precon\"}\r\n          previewCard=\"Abbadon the despoiler\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Jund Value\"}\r\n          previewCard=\"Slimefoot and squee\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Naya Go-Wide\"}\r\n          previewCard=\"Kitt Kanto\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Mardu Legends\"}\r\n          previewCard=\"Dihada, Bender of wills\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Temur Snakes\"}\r\n          previewCard=\"Xyris\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Abzan Keywords\"}\r\n          previewCard=\"Kathril\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Jeskai Voltron\"}\r\n          previewCard=\"Elsha of the infinite\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Sultai Recursion\"}\r\n          previewCard=\"Muldrotha the gravetide\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"5 Colour Legends\"}\r\n          previewCard=\"Sisay, weatherlight\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WUBR Artifacts\"}\r\n          previewCard=\"Breya, etherium shaper\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Colourless Kozi\"}\r\n          previewCard=\"Kozilek the great distortion\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Black Reanimator\"}\r\n          previewCard=\"Junji\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Land Destruction\"}\r\n          previewCard=\"Hazezon, shaper of sand\"\r\n        ></MagicDeckPreviewCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Drawer, Grid, List, ListItem, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport White from \"../decklists/White.txt\";\r\ninterface decklistProps {\r\n  decklist: string;\r\n}\r\n\r\nexport function Decklist(props: decklistProps) {\r\n  const [list, setList] = useState<string[]>([]);\r\n  const [data, setData] = useState<any>();\r\n\r\n  async function ProcessDecklist(): Promise<string[]> {\r\n    let txt = \"../decklists/White.txt\";\r\n    console.log(data);\r\n    let decklist: string[] = [];\r\n    let lines = data.split(\"\\n\");\r\n    for (let i = 0; i < lines.length; i++) {\r\n      decklist = decklist.concat(lines[i]);\r\n      console.log(lines[i]);\r\n    }\r\n    console.log(decklist);\r\n    setList(decklist);\r\n    return decklist;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      ProcessDecklist();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/decklists/\" + props.decklist + \".txt\", {\r\n      headers: {\r\n        \"Content-Type\": \"text\",\r\n        Accept: \"text\",\r\n      },\r\n    }).then((out) =>\r\n      out.text().then((out) => {\r\n        setData(out);\r\n      })\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Grid container sx={{ overflow: \"scroll\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr\" } }}\r\n      >\r\n        <List>\r\n          {list.map((text, index) => (\r\n            <ListItem key={index}>{text}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React, { useEffect } from \"react\";\r\nimport { CommanderDecks } from \"./CommanderDecklists\";\r\nimport { Decklist } from \"./Decklist\";\r\n\r\nexport function CommanderDecklistsPage() {\r\n  useEffect(() => {\r\n    document.title = \"Commander Decks\";\r\n  }, []);\r\n  return (\r\n    <Box>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          display=\"grid\"\r\n          sx={{ gridTemplateColumns: { md: \"3fr 2fr\" }, height: \"88vh\" }}\r\n        >\r\n          <CommanderDecks></CommanderDecks>\r\n          <Decklist decklist=\"White\"></Decklist>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nexport function RecipePage() {\r\n  useEffect(() => {\r\n    document.title = \"Recipes\";\r\n  }, []);\r\n  return <Box>Recipes</Box>;\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React from \"react\";\r\nexport function ModernDecks() {\r\n  return (\r\n    <Grid container sx={{ overflow: \"scroll\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr\" } }}\r\n      >\r\n        <MagicDeckPreviewCard\r\n          deckname=\"Goblins\"\r\n          previewCard=\"Goblin Bushwacker\"\r\n          description=\"Use low cost Goblins to quickly overwhelm your opponent.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Izzet Delver\"}\r\n          previewCard=\"Delver of Secrets\"\r\n          description=\"Flip Delver of Secrets into an early flying threat, then follow up with burn spells.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BR Vampires\"}\r\n          previewCard=\"Stromkirk Captain\"\r\n          description=\"Play a steady stream of vampires, that only get stronger in number.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Elfball\"}\r\n          previewCard=\"Elvish Mystic\"\r\n          description=\"Play an elf, make some mana. Play another elf, make some more mana.\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BG Saprolings\"}\r\n          previewCard=\"Slimefoot the stowaway\"\r\n          description=\"Sticky saprolings are hard to wipe off the board. Follow up with a Mycoloth to end the game.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UG Frogs\"}\r\n          previewCard=\"Grolnok\"\r\n          description=\"Attack with frogs, and gain massive card advantage from the croak counters.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WG Cats\"}\r\n          previewCard=\"Kaheera\"\r\n          description=\"Cute cats <3\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Mardu Allies\"}\r\n          previewCard=\"Kalastria Healer\"\r\n          description=\"Rally abilities strengthen your position with each ally played. Play March From the Tomb for up to 16 damage.\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WU Control\"}\r\n          previewCard=\"Approach of the second sun\"\r\n          description=\"Stall until you can cast Approach twice.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"B Tron\"}\r\n          previewCard=\"Urza's Tower\"\r\n          description=\"Get those Urza lands out fast, and play a big spell like Torment of Hailfire or Sheoldred.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WR Control\"}\r\n          previewCard=\"Nahiri, harbinger\"\r\n          description=\"Kill all their creatures until you can turn a token into Emrakul with Indomitable Creativity.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Temur Titan's Nest\"}\r\n          previewCard=\"Titan's Nest\"\r\n          description=\"All your cards effectively gain delve. Cheat mana costs and keep playing more cards than your opponent.\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Electrobalance\"}\r\n          previewCard=\"Restore Balance\"\r\n          description=\"Combo into casting Restore Balance and leave your opponent with nothing, and yourself with a 9/7.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Aetherflux Storm\"}\r\n          previewCard=\"Aetherflux Reservoir\"\r\n          description=\"Make your artifacts cost nothing, then cast them to draw another one. With Aetherflux out, reach 50 life and blast your opponent.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Scapeshift\"}\r\n          previewCard=\"Valakut, the molten pinnacle\"\r\n          description=\"Cast Scapeshift and bring in 6-7 Mountains and Valakut for 18-21 damage. Another Valakut means double damage.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Enduring Renewal\"}\r\n          previewCard=\"Enduring Renewal\"\r\n          description=\"With Enduring Renewal out, cast a 0/0 or self-sacrificing goblin for a huge storm count, then Grapeshot to end.\"\r\n        ></MagicDeckPreviewCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Decklist } from \"./Decklist\";\r\nimport { ModernDecks } from \"./ModernDecks\";\r\n\r\nexport function ModernDecklistsPage() {\r\n  useEffect(() => {\r\n    document.title = \"Modern Decks\";\r\n  }, []);\r\n  return (\r\n    <Box>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          display=\"grid\"\r\n          sx={{ gridTemplateColumns: { md: \"3fr 2fr\" }, height: \"88vh\" }}\r\n        >\r\n          <ModernDecks></ModernDecks>\r\n          <Decklist decklist=\"White\"></Decklist>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\n\nimport \"./App.css\";\nimport {\n  AppBar,\n  Box,\n  Collapse,\n  CssBaseline,\n  Drawer,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  ThemeProvider,\n  Toolbar,\n  Typography,\n  createTheme,\n} from \"@mui/material\";\n\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { CommanderDecklistsPage } from \"./Components/CommanderDecklistsPage\";\nimport { RecipePage } from \"./Components/RecipePage\";\nimport { Link } from \"react-router-dom\";\nimport { ModernDecklistsPage } from \"./Components/ModernDecklistsPage\";\n\nconst theme = createTheme({ palette: { mode: \"light\" } });\n\nfunction App() {\n  const [openGames, setOpenGames] = React.useState(false);\n  const [openMagic, setMagic] = React.useState(false);\n  const changeOpenGames = () => {\n    setOpenGames(!openGames);\n  };\n\n  const changeOpenMagic = () => {\n    setMagic(!openMagic);\n  };\n  useEffect(() => {\n    document.title = \"Morx's Stuff :)\";\n  }, []);\n  return (\n    <BrowserRouter>\n      <Box display={\"flex\"}>\n        <CssBaseline />\n\n        <ThemeProvider theme={theme}>\n          <AppBar\n            position=\"fixed\"\n            sx={{\n              width: `calc(100% - ${240}px)`,\n              ml: `${240}px`,\n            }}\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                This is always here wow\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            sx={{\n              width: 240,\n              flexShrink: 0,\n              \"& .MuiDrawer-paper\": {\n                width: 240,\n                minHeight: \"100vh\",\n                boxSizing: \"border-box\",\n              },\n            }}\n            variant=\"permanent\"\n            anchor=\"left\"\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                Where Go?\n              </Typography>\n            </Toolbar>\n            <List>\n              <ListItemButton to={\"/Recipes\"} component={Link}>\n                Recipes\n              </ListItemButton>\n              <ListItemButton onClick={changeOpenGames}>\n                Games\n                {openGames ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openGames}>\n                <List>\n                  {[\"Forty Frogs\", \"Shapez\"].map((text, index) => (\n                    <ListItem key={text} disablePadding>\n                      <ListItemButton>\n                        <ListItemIcon></ListItemIcon>\n                        <ListItemText primary={text} />\n                      </ListItemButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </Collapse>\n              <ListItemButton onClick={changeOpenMagic}>\n                Magic Decks\n                {openMagic ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openMagic}>\n                <List>\n                  <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                    <ListItemButton to={\"/Commander\"} component={Link}>\n                      Commander\n                    </ListItemButton>\n                  </ListItem>\n\n                  <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                    <ListItemButton to={\"/Modern\"} component={Link}>\n                      Modern\n                    </ListItemButton>\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Drawer>\n          <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n            <Toolbar />\n            <Routes>\n              <Route path=\"/\" element={<CommanderDecklistsPage />} />\n              <Route path=\"/Commander\" element={<CommanderDecklistsPage />} />\n              <Route path=\"/Modern\" element={<ModernDecklistsPage />} />\n              <Route path=\"/Recipes\" element={<RecipePage />} />\n            </Routes>\n          </Box>\n        </ThemeProvider>\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}