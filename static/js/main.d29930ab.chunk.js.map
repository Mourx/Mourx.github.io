{"version":3,"sources":["Components/MagicDeckPreviewCard.tsx","Components/CommanderDecklists.tsx","Components/Decklist.tsx","Components/CommanderDecklistsPage.tsx","Components/RecipePage.tsx","Components/ModernDecks.tsx","Components/ModernDecklistsPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MagicDeckPreviewCard","props","_useState","useState","_useState2","_slicedToArray","previewUrl","setPreviewUrl","http","XMLHttpRequest","onreadystatechange","this","readyState","status","txt","responseText","obj","JSON","parse","hasOwnProperty","image_uris","normal","card_faces","open","previewCard","send","React","createElement","Card","CardContent","Typography","variant","color","gutterBottom","deckname","CardMedia","component","image","alt","sx","textAlign","fontSize","description","Button","onClick","functions","setDecklist","file","setOpenDialog","CommanderDecks","Grid","container","overflow","item","xs","display","gridTemplateColumns","md","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","defineProperty","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Decklist","list","setList","_useState3","_useState4","data","setData","_useState5","_useState6","_ProcessDecklist","_asyncToGenerator","_callee","decklist","lines","_context","console","log","split","concat","apply","arguments","useEffect","ProcessDecklist","fetch","headers","Content-Type","Accept","out","text","Box","map","index","ListItem","disablePadding","onMouseEnter","str","parts","newrl","setImageUrl","src","style","maxWidth","maxHeight","CommanderDecklistsPage","dialogOpen","setDialogOpen","document","title","Dialog","fullWidth","RecipePage","ModernDecks","ModernDecklistsPage","theme","createTheme","palette","mode","App","_React$useState","_React$useState2","openGames","setOpenGames","_React$useState3","_React$useState4","openMagic","setMagic","BrowserRouter","CssBaseline","ThemeProvider","AppBar","position","width","ml","Toolbar","noWrap","Drawer","flexShrink","& .MuiDrawer-paper","minHeight","boxSizing","anchor","List","ListItemButton","to","Link","ExpandLess","ExpandMore","Collapse","in","ListItemIcon","ListItemText","primary","paddingLeft","flexGrow","p","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d29930ab.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface decklistProps {\r\n  deckname: string;\r\n  previewCard: string;\r\n  description?: string;\r\n  file?: string;\r\n  functions: {\r\n    setOpenDialog: any;\r\n    setDecklist: any;\r\n  };\r\n}\r\n\r\nexport function MagicDeckPreviewCard(props: decklistProps) {\r\n  const [previewUrl, setPreviewUrl] = useState(\"\");\r\n  var http = new XMLHttpRequest();\r\n  http.onreadystatechange = function () {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      var txt = this.responseText;\r\n      var obj = JSON.parse(txt);\r\n      if (obj.hasOwnProperty(\"image_uris\")) {\r\n        setPreviewUrl(obj.image_uris.normal);\r\n      } else {\r\n        setPreviewUrl(obj.card_faces[0].image_uris.normal);\r\n      }\r\n    }\r\n  };\r\n\r\n  http.open(\r\n    \"GET\",\r\n    \"https://api.scryfall.com/cards/named?fuzzy=\" + props.previewCard,\r\n    true\r\n  );\r\n  http.send();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n          {props.deckname}\r\n        </Typography>\r\n        <CardMedia component=\"img\" image={previewUrl} alt={props.deckname} />\r\n        <Typography sx={{ textAlign: \"center\", fontSize: 18 }} component=\"div\">\r\n          {props.description}\r\n        </Typography>\r\n        <Button\r\n          onClick={() => {\r\n            props.functions.setDecklist(props.file);\r\n            props.functions.setOpenDialog(true);\r\n          }}\r\n        >\r\n          {\" \"}\r\n          View Decklist\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React from \"react\";\r\n\r\ninterface CommanderDecksProps {\r\n  setOpenDialog: any;\r\n  setDecklist: any;\r\n}\r\n\r\nexport function CommanderDecks(props: CommanderDecksProps) {\r\n  return (\r\n    <Grid container sx={{ overflow: \"scroll\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr 1fr\" } }}\r\n      >\r\n        <MagicDeckPreviewCard\r\n          deckname=\"White Hatebears\"\r\n          previewCard=\"Thalia Guardian of Thraben\"\r\n          file=\"White\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Blue Tappers\"}\r\n          previewCard=\"Aboshan, Cephalid Emperor\"\r\n          file=\"Blue\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Black Instants\"}\r\n          previewCard=\"Toshiro Umezawa\"\r\n          file=\"Black\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Red Devils\"}\r\n          previewCard=\"Zurzoth\"\r\n          file=\"Red\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Green Stompy\"}\r\n          previewCard=\"Selvala, heart of the wilds\"\r\n          file=\"Green\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WU Control\"}\r\n          previewCard=\"Kwain\"\r\n          file=\"Azorius\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UB Mischief\"}\r\n          previewCard=\"Yuriko\"\r\n          file=\"Dimir\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BR Group Slug\"}\r\n          previewCard=\"Tor Wauki, the younger\"\r\n          file=\"Rakdos\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"RG Artifacts\"}\r\n          previewCard=\"Meria, Scholar\"\r\n          file=\"Gruul\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"GW 1/1s\"}\r\n          previewCard=\"Bess\"\r\n          file=\"Selesnya\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WB Lifegain\"}\r\n          previewCard=\"Karlov of the ghost\"\r\n          file=\"Orzhov\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UR Wizards\"}\r\n          previewCard=\"Adeliz\"\r\n          file=\"Izzet\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BG Squirrels\"}\r\n          previewCard=\"Chatterfang\"\r\n          file=\"Goglari\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"RW Gold Golems\"}\r\n          previewCard=\"General Ferrous\"\r\n          file=\"Boros\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"GU Frog Self-Mill\"}\r\n          previewCard=\"Grolnok\"\r\n          file=\"Simic\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Bant Flicker\"}\r\n          previewCard=\"Lagrella\"\r\n          file=\"Bant\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Esper Zombies\"}\r\n          previewCard=\"Varina\"\r\n          file=\"Esper\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Grixis 40k Precon\"}\r\n          previewCard=\"Abbadon the despoiler\"\r\n          file=\"Abbaddon\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Jund Value\"}\r\n          previewCard=\"Slimefoot and squee\"\r\n          file=\"Jund\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Naya Go-Wide\"}\r\n          previewCard=\"Kitt Kanto\"\r\n          file=\"Naya\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Mardu Legends\"}\r\n          previewCard=\"Dihada, Bender of wills\"\r\n          file=\"Mardu\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Temur Snakes\"}\r\n          previewCard=\"Xyris\"\r\n          file=\"Temur\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Abzan Keywords\"}\r\n          previewCard=\"Kathril\"\r\n          file=\"Abzan\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Jeskai Voltron\"}\r\n          previewCard=\"Elsha of the infinite\"\r\n          file=\"Jeskai\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Sultai Recursion\"}\r\n          previewCard=\"Muldrotha the gravetide\"\r\n          file=\"Sultai\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"5 Colour Legends\"}\r\n          previewCard=\"Sisay, weatherlight\"\r\n          file=\"Sisay\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WUBR Artifacts\"}\r\n          previewCard=\"Breya, etherium shaper\"\r\n          file=\"Breya\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Colourless Kozi\"}\r\n          previewCard=\"Kozilek the great distortion\"\r\n          file=\"Nono\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Black Reanimator\"}\r\n          previewCard=\"Junji\"\r\n          file=\"Junji\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Land Destruction\"}\r\n          previewCard=\"Hazezon, shaper of sand\"\r\n          file=\"Hazezon\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Drawer, Grid, List, ListItem, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface decklistProps {\r\n  decklist: string;\r\n}\r\n\r\nexport function Decklist(props: decklistProps) {\r\n  const [list, setList] = useState<string[]>([]);\r\n  const [data, setData] = useState<any>();\r\n  const [previewUrl, setPreviewUrl] = useState(\"\");\r\n\r\n  async function ProcessDecklist(): Promise<string[]> {\r\n    let txt = \"../decklists/White.txt\";\r\n    console.log(data);\r\n    let decklist: string[] = [];\r\n    let lines = data.split(\"\\n\");\r\n    for (let i = 0; i < lines.length; i++) {\r\n      decklist = decklist.concat(lines[i]);\r\n      console.log(lines[i]);\r\n    }\r\n    console.log(decklist);\r\n    setList(decklist);\r\n    return decklist;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      ProcessDecklist();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/decklists/\" + props.decklist + \".txt\", {\r\n      headers: {\r\n        \"Content-Type\": \"text\",\r\n        Accept: \"text\",\r\n      },\r\n    }).then((out) =>\r\n      out.text().then((out) => {\r\n        setData(out);\r\n      })\r\n    );\r\n  });\r\n\r\n  function setImageUrl(str: string): any {\r\n    let parts = str.split(\" \");\r\n    let newrl = \"\";\r\n    for (let i = 1; i < parts.length; i++) {\r\n      newrl = newrl.concat(parts[i] + \" \");\r\n    }\r\n\r\n    var http = new XMLHttpRequest();\r\n    http.onreadystatechange = function () {\r\n      if (this.readyState == 4 && this.status == 200) {\r\n        var txt = this.responseText;\r\n        var obj = JSON.parse(txt);\r\n        if (obj.hasOwnProperty(\"image_uris\")) {\r\n          setPreviewUrl(obj.image_uris.normal);\r\n        } else {\r\n          setPreviewUrl(obj.card_faces[0].image_uris.normal);\r\n        }\r\n      }\r\n    };\r\n\r\n    http.open(\r\n      \"GET\",\r\n      \"https://api.scryfall.com/cards/named?fuzzy=\" + newrl,\r\n      true\r\n    );\r\n    http.send();\r\n\r\n    console.log(newrl);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Grid\r\n        container\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr\" } }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          display=\"grid\"\r\n          sx={{ gridTemplateColumns: { md: \"1fr 1fr\" } }}\r\n        >\r\n          {list.map((text, index) => (\r\n            <ListItem\r\n              disablePadding\r\n              key={index}\r\n              onMouseEnter={() => {\r\n                setImageUrl(text);\r\n              }}\r\n            >\r\n              {text}\r\n            </ListItem>\r\n          ))}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <img\r\n            src={previewUrl}\r\n            style={{\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"100%\",\r\n            }}\r\n          ></img>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Dialog, Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CommanderDecks } from \"./CommanderDecklists\";\r\nimport { Decklist } from \"./Decklist\";\r\n\r\nexport function CommanderDecklistsPage() {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [decklist, setDecklist] = useState(\"\");\r\n  useEffect(() => {\r\n    document.title = \"Commander Decks\";\r\n  }, []);\r\n  return (\r\n    <Box>\r\n      <Grid container>\r\n        <CommanderDecks\r\n          setDecklist={setDecklist}\r\n          setOpenDialog={setDialogOpen}\r\n        ></CommanderDecks>\r\n      </Grid>\r\n      <Dialog open={dialogOpen} fullWidth maxWidth=\"lg\">\r\n        <Decklist decklist={decklist}></Decklist>\r\n        <Button\r\n          onClick={() => {\r\n            setDialogOpen(false);\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nexport function RecipePage() {\r\n  useEffect(() => {\r\n    document.title = \"Recipes\";\r\n  }, []);\r\n  return <Box>Recipes</Box>;\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React from \"react\";\r\n\r\ninterface ModernDecksProps {\r\n  setOpenDialog: any;\r\n  setDecklist: any;\r\n}\r\n\r\nexport function ModernDecks(props: ModernDecksProps) {\r\n  return (\r\n    <Grid container sx={{ overflow: \"scroll\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr\" } }}\r\n      >\r\n        <MagicDeckPreviewCard\r\n          deckname=\"Goblins\"\r\n          previewCard=\"Goblin Bushwacker\"\r\n          description=\"Use low cost Goblins to quickly overwhelm your opponent.\"\r\n          file=\"Goblins\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Izzet Delver\"}\r\n          previewCard=\"Delver of Secrets\"\r\n          description=\"Flip Delver of Secrets into an early flying threat, then follow up with burn spells.\"\r\n          file=\"Delver\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BR Vampires\"}\r\n          previewCard=\"Stromkirk Captain\"\r\n          description=\"Play a steady stream of vampires, that only get stronger in number.\"\r\n          file=\"Vampires\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Elfball\"}\r\n          previewCard=\"Elvish Mystic\"\r\n          description=\"Play an elf, make some mana. Play another elf, make some more mana.\"\r\n          file=\"Elves\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BG Saprolings\"}\r\n          previewCard=\"Slimefoot the stowaway\"\r\n          description=\"Sticky saprolings are hard to wipe off the board. Follow up with a Mycoloth to end the game.\"\r\n          file=\"Saprolings\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UG Frogs\"}\r\n          previewCard=\"Grolnok\"\r\n          description=\"Attack with frogs, and gain massive card advantage from the croak counters.\"\r\n          file=\"Frogs\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WG Cats\"}\r\n          previewCard=\"Kaheera\"\r\n          description=\"Cute cats <3\"\r\n          file=\"Cats\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Mardu Allies\"}\r\n          previewCard=\"Kalastria Healer\"\r\n          description=\"Rally abilities strengthen your position with each ally played. Play March From the Tomb for up to 16 damage.\"\r\n          file=\"Allies\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WU Control\"}\r\n          previewCard=\"Approach of the second sun\"\r\n          description=\"Stall until you can cast Approach twice.\"\r\n          file=\"Approach\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"B Tron\"}\r\n          previewCard=\"Urza's Tower\"\r\n          description=\"Get those Urza lands out fast, and play a big spell like Torment of Hailfire or Sheoldred.\"\r\n          file=\"Tron\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WR Control\"}\r\n          previewCard=\"Nahiri, harbinger\"\r\n          description=\"Kill all their creatures until you can turn a token into Emrakul with Indomitable Creativity.\"\r\n          file=\"Emrakul\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Sultai Titan's Nest\"}\r\n          previewCard=\"Titan's Nest\"\r\n          description=\"All your cards effectively gain delve. Cheat mana costs and keep playing more cards than your opponent.\"\r\n          file=\"Titan's Nest\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Electrobalance\"}\r\n          previewCard=\"Restore Balance\"\r\n          description=\"Combo into casting Restore Balance and leave your opponent with nothing, and yourself with a 9/7.\"\r\n          file=\"Electrobalance\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Aetherflux Storm\"}\r\n          previewCard=\"Aetherflux Reservoir\"\r\n          description=\"Make your artifacts cost nothing, then cast them to draw another one. With Aetherflux out, reach 50 life and blast your opponent.\"\r\n          file=\"Aetherflux\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Scapeshift\"}\r\n          previewCard=\"Valakut, the molten pinnacle\"\r\n          description=\"Cast Scapeshift and bring in 6-7 Mountains and Valakut for 18-21 damage. Another Valakut means double damage.\"\r\n          file=\"Scapeshift\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Enduring Renewal\"}\r\n          previewCard=\"Enduring Renewal\"\r\n          description=\"With Enduring Renewal out, cast a 0/0 or self-sacrificing goblin for a huge storm count, then Grapeshot to end.\"\r\n          file=\"Renewal\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Button, Dialog, Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Decklist } from \"./Decklist\";\r\nimport { ModernDecks } from \"./ModernDecks\";\r\n\r\nexport function ModernDecklistsPage() {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [decklist, setDecklist] = useState(\"\");\r\n  useEffect(() => {\r\n    document.title = \"Modern Decks\";\r\n  }, []);\r\n  return (\r\n    <Box>\r\n      <Grid container>\r\n        <ModernDecks\r\n          setDecklist={setDecklist}\r\n          setOpenDialog={setDialogOpen}\r\n        ></ModernDecks>\r\n      </Grid>\r\n      <Dialog open={dialogOpen} fullWidth maxWidth=\"lg\">\r\n        <Decklist decklist={decklist}></Decklist>\r\n        <Button\r\n          onClick={() => {\r\n            setDialogOpen(false);\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\n\nimport \"./App.css\";\nimport {\n  AppBar,\n  Box,\n  Collapse,\n  CssBaseline,\n  Drawer,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  ThemeProvider,\n  Toolbar,\n  Typography,\n  createTheme,\n} from \"@mui/material\";\n\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { CommanderDecklistsPage } from \"./Components/CommanderDecklistsPage\";\nimport { RecipePage } from \"./Components/RecipePage\";\nimport { Link } from \"react-router-dom\";\nimport { ModernDecklistsPage } from \"./Components/ModernDecklistsPage\";\n\nconst theme = createTheme({ palette: { mode: \"light\" } });\n\nfunction App() {\n  const [openGames, setOpenGames] = React.useState(false);\n  const [openMagic, setMagic] = React.useState(false);\n  const changeOpenGames = () => {\n    setOpenGames(!openGames);\n  };\n\n  const changeOpenMagic = () => {\n    setMagic(!openMagic);\n  };\n  useEffect(() => {\n    document.title = \"Morx's Stuff :)\";\n  }, []);\n  return (\n    <BrowserRouter>\n      <Box display={\"flex\"}>\n        <CssBaseline />\n\n        <ThemeProvider theme={theme}>\n          <AppBar\n            position=\"fixed\"\n            sx={{\n              width: `calc(100% - ${240}px)`,\n              ml: `${240}px`,\n            }}\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                This is always here wow\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            sx={{\n              width: 240,\n              flexShrink: 0,\n              \"& .MuiDrawer-paper\": {\n                width: 240,\n                minHeight: \"100vh\",\n                boxSizing: \"border-box\",\n              },\n            }}\n            variant=\"permanent\"\n            anchor=\"left\"\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                Where Go?\n              </Typography>\n            </Toolbar>\n            <List>\n              <ListItemButton to={\"/Recipes\"} component={Link}>\n                Recipes\n              </ListItemButton>\n              <ListItemButton onClick={changeOpenGames}>\n                Games\n                {openGames ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openGames}>\n                <List>\n                  {[\"Forty Frogs\", \"Shapez\"].map((text, index) => (\n                    <ListItem key={text} disablePadding>\n                      <ListItemButton>\n                        <ListItemIcon></ListItemIcon>\n                        <ListItemText primary={text} />\n                      </ListItemButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </Collapse>\n              <ListItemButton onClick={changeOpenMagic}>\n                Magic Decks\n                {openMagic ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openMagic}>\n                <List>\n                  <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                    <ListItemButton to={\"/Commander\"} component={Link}>\n                      Commander\n                    </ListItemButton>\n                  </ListItem>\n\n                  <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                    <ListItemButton to={\"/Modern\"} component={Link}>\n                      Modern\n                    </ListItemButton>\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Drawer>\n          <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n            <Toolbar />\n            <Routes>\n              <Route path=\"/\" element={<CommanderDecklistsPage />} />\n              <Route path=\"/Commander\" element={<CommanderDecklistsPage />} />\n              <Route path=\"/Modern\" element={<ModernDecklistsPage />} />\n              <Route path=\"/Recipes\" element={<RecipePage />} />\n            </Routes>\n          </Box>\n        </ThemeProvider>\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}