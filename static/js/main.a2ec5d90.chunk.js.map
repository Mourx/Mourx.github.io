{"version":3,"sources":["Components/Magic/MagicDeckPreviewCard.tsx","Components/Magic/CommanderDecklists.tsx","Components/Magic/Decklist.tsx","Components/Magic/CommanderDecklistsPage.tsx","Components/Recipes/RecipeCard.tsx","Components/RecipePage.tsx","Components/Magic/ModernDecks.tsx","Components/Magic/ModernDecklistsPage.tsx","Components/MainPage.tsx","Components/B.tsx","Components/Santryl/HistoryPage.tsx","Components/Dnd/DndRules.tsx","Components/theme.tsx","Components/Santryl/Faith.tsx","Components/Btv/BtvRules.tsx","Components/Recipes/AubergineMeatballs.tsx","Components/Recipes/BlackBeanBurgers.tsx","Components/Recipes/ButternutSquashPasta.tsx","Components/Recipes/CreamyMushroomPasta.tsx","Components/Recipes/DoubleBeanAndRoastedPepperChilli.tsx","Components/Recipes/DutchBoerenKoolStamppot.tsx","Components/Recipes/Falafels.tsx","Components/Recipes/GreenRisotto.tsx","Components/Recipes/HalloumiSpinachCurry.tsx","Components/Recipes/HarissaPasta.tsx","Components/Recipes/HeartyLentilStew.tsx","Components/Recipes/JewelledMoutzentra.tsx","Components/Recipes/KungPaoCauliflower.tsx","Components/Recipes/LentilShepherdsPie.tsx","Components/Recipes/MapuTofu.tsx","Components/Recipes/MinnestroneSoup.tsx","Components/Recipes/NamKhao.tsx","Components/Recipes/PastaBake.tsx","Components/Recipes/PotatoLentilSoup.tsx","Components/Recipes/PuffPastryVegetableTart.tsx","Components/Recipes/Quesadillas.tsx","Components/Recipes/RedKidneyBeanCurry.tsx","Components/Recipes/WinterQuinoaSalad.tsx","Components/Recipes/VegetableJambalaya.tsx","Components/Recipes/VegetableEnchiladas.tsx","Components/Recipes/SweetPotatoTortilla.tsx","Components/Recipes/SweetPotatoChilli.tsx","Components/Recipes/VeganKofta.tsx","Components/Recipes/SweetTofu.tsx","Components/Recipes/SpringPilau.tsx","Components/Recipes/SpinachPaneerPulao.tsx","Components/Recipes/SausagePotatoKaleSoup.tsx","Components/Recipes/Samosas.tsx","Components/Recipes/RedLentilCurry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MagicDeckPreviewCard","props","_useState","useState","_useState2","_slicedToArray","previewUrl","setPreviewUrl","http","XMLHttpRequest","onreadystatechange","this","readyState","status","txt","responseText","obj","JSON","parse","hasOwnProperty","image_uris","normal","card_faces","open","previewCard","send","React","createElement","Card","CardContent","Typography","variant","color","gutterBottom","deckname","CardMedia","component","image","alt","sx","textAlign","fontSize","description","Button","onClick","functions","setDecklist","file","setOpenDialog","CommanderDecks","Grid","container","overflow","item","xs","display","gridTemplateColumns","md","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","defineProperty","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Decklist","list","setList","_useState3","_useState4","data","setData","_useState5","_useState6","_ProcessDecklist","_asyncToGenerator","_callee","decklist","lines","_context","console","log","split","concat","apply","arguments","setImageUrl","str","parts","newrl","useEffect","ProcessDecklist","fetch","headers","Content-Type","Accept","out","text","Box","direction","justifyContent","alignItems","height","map","index","ListItem","disablePadding","onMouseEnter","src","style","maxWidth","maxHeight","CommanderDecklistsPage","dialogOpen","setDialogOpen","document","title","Dialog","fullWidth","RecipeCard","recipeName","previewimg","href","url","RecipePage","ModernDecks","ModernDecklistsPage","MainPage","B","Fragment","HistoryPage","DndRulesPage","paddingLeft","theme","createTheme","palette","mode","typography","fontFamily","FaithPage","BtvRulesPage","AubergineMeatballs","BlackBeanBurgers","ButternutSquashPasta","CreamyMushroomPasta","DoubleBeanAndRoastedPepperChilli","DutchBoerenKoolStamppot","Falafels","GreenRisotto","HalloumiSpinachCurry","HarissaPasta","HeartyLentilStew","JewelledMoutzentra","KungPaoCauliflower","LentilShepherdsPie","MapuTofu","MinnestroneSoup","NamKhao","PastaBake","PotatoLentilSoup","PuffPastryVegetableTart","Quesadillas","RedKidneyBeanCurry","WinterQuinoaSalad","VegetableJambalaya","VegetableEnchiladas","SweetPotatoTortilla","SweetPotatoChilli","VeganKofta","SweetTofu","SpringPilau","SpinachPaneerPulao","SausagePotatoKaleSoup","Samosas","RedLentilCurry","App","_React$useState","_React$useState2","openGames","setOpenGames","_React$useState3","_React$useState4","openMagic","setMagic","_React$useState5","_React$useState6","openTTRPG","setTTRPG","_React$useState7","_React$useState8","openDnd","setDnd","_React$useState9","_React$useState10","openBtv","setBtv","_React$useState11","_React$useState12","openSantryl","setSantryl","BrowserRouter","CssBaseline","ThemeProvider","AppBar","position","width","ml","Toolbar","noWrap","Drawer","flexShrink","& .MuiDrawer-paper","minHeight","boxSizing","anchor","List","ListItemButton","to","Link","ExpandLess","ExpandMore","Collapse","in","ListItemIcon","ListItemText","flexGrow","p","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a2ec5d90.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface decklistProps {\r\n  deckname: string;\r\n  previewCard: string;\r\n  description?: string;\r\n  file?: string;\r\n  functions: {\r\n    setOpenDialog: any;\r\n    setDecklist: any;\r\n  };\r\n}\r\n\r\nexport function MagicDeckPreviewCard(props: decklistProps) {\r\n  const [previewUrl, setPreviewUrl] = useState(\"\");\r\n  var http = new XMLHttpRequest();\r\n  http.onreadystatechange = function () {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      var txt = this.responseText;\r\n      var obj = JSON.parse(txt);\r\n      if (obj.hasOwnProperty(\"image_uris\")) {\r\n        setPreviewUrl(obj.image_uris.normal);\r\n      } else {\r\n        setPreviewUrl(obj.card_faces[0].image_uris.normal);\r\n      }\r\n    }\r\n  };\r\n\r\n  http.open(\r\n    \"GET\",\r\n    \"https://api.scryfall.com/cards/named?fuzzy=\" + props.previewCard,\r\n    true\r\n  );\r\n  http.send();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n          {props.deckname}\r\n        </Typography>\r\n        <CardMedia component=\"img\" image={previewUrl} alt={props.deckname} />\r\n        <Typography sx={{ textAlign: \"center\", fontSize: 18 }} component=\"div\">\r\n          {props.description}\r\n        </Typography>\r\n        <Button\r\n          onClick={() => {\r\n            props.functions.setDecklist(props.file);\r\n            props.functions.setOpenDialog(true);\r\n          }}\r\n        >\r\n          {\" \"}\r\n          View Decklist\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React from \"react\";\r\n\r\ninterface CommanderDecksProps {\r\n  setOpenDialog: any;\r\n  setDecklist: any;\r\n}\r\n\r\nexport function CommanderDecks(props: CommanderDecksProps) {\r\n  return (\r\n    <Grid container sx={{ overflow: \"scroll\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr 1fr\" } }}\r\n      >\r\n        <MagicDeckPreviewCard\r\n          deckname=\"White Hatebears\"\r\n          previewCard=\"Thalia Guardian of Thraben\"\r\n          file=\"White\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Blue Tappers\"}\r\n          previewCard=\"Aboshan, Cephalid Emperor\"\r\n          file=\"Blue\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Black Instants\"}\r\n          previewCard=\"Toshiro Umezawa\"\r\n          file=\"Black\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Red Devils\"}\r\n          previewCard=\"Zurzoth\"\r\n          file=\"Red\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Green Stompy\"}\r\n          previewCard=\"Selvala, heart of the wilds\"\r\n          file=\"Green\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WU Control\"}\r\n          previewCard=\"Kwain\"\r\n          file=\"Azorius\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UB Mischief\"}\r\n          previewCard=\"Yuriko\"\r\n          file=\"Dimir\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BR Group Slug\"}\r\n          previewCard=\"Tor Wauki, the younger\"\r\n          file=\"Rakdos\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"RG Artifacts\"}\r\n          previewCard=\"Meria, Scholar\"\r\n          file=\"Gruul\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"GW 1/1s\"}\r\n          previewCard=\"Bess\"\r\n          file=\"Selesnya\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WB Lifegain\"}\r\n          previewCard=\"Karlov of the ghost\"\r\n          file=\"Orzhov\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UR Wizards\"}\r\n          previewCard=\"Adeliz\"\r\n          file=\"Izzet\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BG Squirrels\"}\r\n          previewCard=\"Chatterfang\"\r\n          file=\"Goglari\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"RW Gold Golems\"}\r\n          previewCard=\"General Ferrous\"\r\n          file=\"Boros\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"GU Frog Self-Mill\"}\r\n          previewCard=\"Grolnok\"\r\n          file=\"Simic\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Bant Flicker\"}\r\n          previewCard=\"Lagrella\"\r\n          file=\"Bant\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Esper Zombies\"}\r\n          previewCard=\"Varina\"\r\n          file=\"Esper\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Grixis 40k Precon\"}\r\n          previewCard=\"Abbadon the despoiler\"\r\n          file=\"Abbaddon\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Jund Value\"}\r\n          previewCard=\"Slimefoot and squee\"\r\n          file=\"Jund\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Naya Go-Wide\"}\r\n          previewCard=\"Kitt Kanto\"\r\n          file=\"Naya\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Mardu Legends\"}\r\n          previewCard=\"Dihada, Bender of wills\"\r\n          file=\"Mardu\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Temur Snakes\"}\r\n          previewCard=\"Xyris\"\r\n          file=\"Temur\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Abzan Keywords\"}\r\n          previewCard=\"Kathril\"\r\n          file=\"Abzan\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Jeskai Voltron\"}\r\n          previewCard=\"Elsha of the infinite\"\r\n          file=\"Jeskai\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Sultai Recursion\"}\r\n          previewCard=\"Muldrotha the gravetide\"\r\n          file=\"Sultai\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"5 Colour Legends\"}\r\n          previewCard=\"Sisay, weatherlight\"\r\n          file=\"Sisay\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WUBR Artifacts\"}\r\n          previewCard=\"Breya, etherium shaper\"\r\n          file=\"Breya\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Colourless Kozi\"}\r\n          previewCard=\"Kozilek the great distortion\"\r\n          file=\"Nono\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Black Reanimator\"}\r\n          previewCard=\"Junji\"\r\n          file=\"Junji\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Land Destruction\"}\r\n          previewCard=\"Hazezon, shaper of sand\"\r\n          file=\"Hazezon\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Drawer, Grid, List, ListItem, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface decklistProps {\r\n  decklist: string;\r\n}\r\n\r\nexport function Decklist(props: decklistProps) {\r\n  const [list, setList] = useState<string[]>([]);\r\n  const [data, setData] = useState<any>();\r\n  const [previewUrl, setPreviewUrl] = useState(\"\");\r\n\r\n  async function ProcessDecklist(): Promise<string[]> {\r\n    console.log(data);\r\n    let decklist: string[] = [];\r\n    let lines = data.split(\"\\n\");\r\n    for (let i = 0; i < lines.length; i++) {\r\n      decklist = decklist.concat(lines[i]);\r\n      console.log(lines[i]);\r\n    }\r\n    console.log(decklist);\r\n    setList(decklist);\r\n    return decklist;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      ProcessDecklist();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/decklists/\" + props.decklist + \".txt\", {\r\n      headers: {\r\n        \"Content-Type\": \"text\",\r\n        Accept: \"text\",\r\n      },\r\n    }).then((out) =>\r\n      out.text().then((out) => {\r\n        setData(out);\r\n      })\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (list[0]) {\r\n      console.log(list);\r\n      setImageUrl(list[0]);\r\n    }\r\n  }, [list]);\r\n  function setImageUrl(str: string): any {\r\n    let parts = str.split(\" \");\r\n    let newrl = \"\";\r\n    for (let i = 1; i < parts.length; i++) {\r\n      newrl = newrl.concat(parts[i] + \" \");\r\n    }\r\n\r\n    var http = new XMLHttpRequest();\r\n    http.onreadystatechange = function () {\r\n      if (this.readyState == 4 && this.status == 200) {\r\n        var txt = this.responseText;\r\n        var obj = JSON.parse(txt);\r\n        if (obj.hasOwnProperty(\"image_uris\")) {\r\n          setPreviewUrl(obj.image_uris.normal);\r\n        } else {\r\n          setPreviewUrl(obj.card_faces[0].image_uris.normal);\r\n        }\r\n      }\r\n    };\r\n\r\n    http.open(\r\n      \"GET\",\r\n      \"https://api.scryfall.com/cards/named?fuzzy=\" + newrl,\r\n      true\r\n    );\r\n    http.send();\r\n\r\n    console.log(newrl);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Grid\r\n        container\r\n        display=\"grid\"\r\n        sx={{\r\n          direction: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          gridTemplateColumns: { md: \"1fr 1fr\" },\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          display=\"grid\"\r\n          sx={{\r\n            height: \"fit-content\",\r\n            gridTemplateColumns: { md: \"1fr 1fr 1fr\" },\r\n          }}\r\n        >\r\n          {list.map((text, index) => (\r\n            <ListItem\r\n              disablePadding\r\n              key={index}\r\n              onMouseEnter={() => {\r\n                setImageUrl(text);\r\n              }}\r\n            >\r\n              <Typography>{text}</Typography>\r\n            </ListItem>\r\n          ))}\r\n        </Grid>\r\n        <Grid item>\r\n          <img\r\n            src={previewUrl}\r\n            style={{\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"100%\",\r\n            }}\r\n          ></img>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Dialog, Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CommanderDecks } from \"./CommanderDecklists\";\r\nimport { Decklist } from \"./Decklist\";\r\n\r\nexport function CommanderDecklistsPage() {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [decklist, setDecklist] = useState(\"\");\r\n  useEffect(() => {\r\n    document.title = \"Commander Decks\";\r\n  }, []);\r\n  return (\r\n    <Box>\r\n      <Grid container>\r\n        <CommanderDecks\r\n          setDecklist={setDecklist}\r\n          setOpenDialog={setDialogOpen}\r\n        ></CommanderDecks>\r\n      </Grid>\r\n      <Dialog open={dialogOpen} fullWidth maxWidth=\"lg\">\r\n        <Decklist decklist={decklist}></Decklist>\r\n        <Button\r\n          onClick={() => {\r\n            setDialogOpen(false);\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Link,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface recipeProps {\r\n  recipeName: string;\r\n  previewimg?: string;\r\n  url: string;\r\n  description?: string;\r\n}\r\n\r\nexport function RecipeCard(props: recipeProps) {\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n          {props.recipeName}\r\n        </Typography>\r\n        <CardMedia\r\n          component=\"img\"\r\n          image={props.previewimg}\r\n          alt={props.recipeName}\r\n        />\r\n        <Typography sx={{ textAlign: \"center\", fontSize: 18 }} component=\"div\">\r\n          {props.description}\r\n        </Typography>\r\n        <Button href={props.url}>View Recipe</Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { Box, Grid, Typography } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport { RecipeCard } from \"./Recipes/RecipeCard\";\r\n\r\nexport function RecipePage() {\r\n  useEffect(() => {\r\n    document.title = \"Recipes\";\r\n  }, []);\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Recipes</Typography>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          display=\"grid\"\r\n          sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr 1fr 1fr\" } }}\r\n        >\r\n          <RecipeCard\r\n            recipeName=\"Aubergine Meatballs\"\r\n            previewimg=\"/recipeThumbnails/AubergineMeatballs.jpg\"\r\n            url=\"/Recipes/AubergineMeatballs\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Black Bean Burgers\"\r\n            previewimg=\"/recipeThumbnails/BlackBeanBurgers.jpg\"\r\n            url=\"/Recipes/BlackBeanBurgers\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Butternut Squash Pasta\"\r\n            previewimg=\"/recipeThumbnails/ButternutSquashPasta.jpg\"\r\n            url=\"/Recipes/ButternutSquashPasta\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Creamy Mushroom Pasta\"\r\n            previewimg=\"/recipeThumbnails/CreamyMushroomPasta.jpg\"\r\n            url=\"/Recipes/CreamyMushroomPasta\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Double Bean And Roasted Pepper Chilli\"\r\n            previewimg=\"/recipeThumbnails/DoubleBeanAndRoastedPepperChilli.jpg\"\r\n            url=\"/Recipes/DoubleBeanAndRoastedPepperChilli\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Dutch Boeren Kool Stamppot\"\r\n            previewimg=\"/recipeThumbnails/DutchBoerenKoolStamppot.jpg\"\r\n            url=\"/Recipes/DutchBoerenKoolStamppot\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Falafels\"\r\n            previewimg=\"/recipeThumbnails/Falafels.jpg\"\r\n            url=\"/Recipes/Falafels\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"GreenRisotto\"\r\n            previewimg=\"/recipeThumbnails/GreenRisotto.jpg\"\r\n            url=\"/Recipes/GreenRisotto\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Halloumi Spinach Curry\"\r\n            previewimg=\"/recipeThumbnails/HalloumiSpinachCurry.jpg\"\r\n            url=\"/Recipes/HalloumiSpinachCurry\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Harissa Pasta\"\r\n            previewimg=\"/recipeThumbnails/HarissaPasta.jpg\"\r\n            url=\"/Recipes/HarissaPasta\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Hearty Lentil Stew\"\r\n            previewimg=\"/recipeThumbnails/HeartyLentilStew.jpg\"\r\n            url=\"/Recipes/HeartyLentilStew\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Jewelled Moutzentra\"\r\n            previewimg=\"/recipeThumbnails/JewelledMoutzentra.jpg\"\r\n            url=\"/Recipes/JewelledMoutzentra\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Kung Pao Cauliflower\"\r\n            previewimg=\"/recipeThumbnails/KungPaoCauliflower.jpg\"\r\n            url=\"/Recipes/KungPaoCauliflower\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Lentil Shepherds Pie\"\r\n            previewimg=\"/recipeThumbnails/LentilShepherdsPie.jpg\"\r\n            url=\"/Recipes/LentilShepherdsPie\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Mapu Tofu\"\r\n            previewimg=\"/recipeThumbnails/MapuTofu.jpg\"\r\n            url=\"/Recipes/MapuTofu\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Minnestrone Soup\"\r\n            previewimg=\"/recipeThumbnails/MinnestroneSoup.jpg\"\r\n            url=\"/Recipes/MinnestroneSoup\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Nam Khao\"\r\n            previewimg=\"/recipeThumbnails/NamKhao.jpg\"\r\n            url=\"/Recipes/NamKhao\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Pasta Bake\"\r\n            previewimg=\"/recipeThumbnails/PastaBake.jpg\"\r\n            url=\"/Recipes/PastaBake\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Potato Lentil Soup\"\r\n            previewimg=\"/recipeThumbnails/PotatoLentilSoup.jpg\"\r\n            url=\"/Recipes/PotatoLentilSoup\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Puff Pastry Vegetable Tart\"\r\n            previewimg=\"/recipeThumbnails/PuffPastryVegetableTart.jpg\"\r\n            url=\"/Recipes/PuffPastryVegetableTart\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Quesadillas\"\r\n            previewimg=\"/recipeThumbnails/Quesadillas.jpg\"\r\n            url=\"/Recipes/Quesadillas\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Red Kidney Bean Curry\"\r\n            previewimg=\"/recipeThumbnails/RedKidneyBeanCurry.jpg\"\r\n            url=\"/Recipes/RedKidneyBeanCurry\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Red Lentil Curry\"\r\n            previewimg=\"/recipeThumbnails/RedLentilCurry.jpg\"\r\n            url=\"/Recipes/RedLentilCurry\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Samosas\"\r\n            previewimg=\"/recipeThumbnails/Samosas.jpg\"\r\n            url=\"/Recipes/Samosas\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Sausage Potato Kale Soup\"\r\n            previewimg=\"/recipeThumbnails/SausagePotatoKaleSoup.jpg\"\r\n            url=\"/Recipes/SausagePotatoKaleSoup\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Spinach Paneer Pulao\"\r\n            previewimg=\"/recipeThumbnails/SpinachPaneerPulao.jpg\"\r\n            url=\"/Recipes/SpinachPaneerPulao\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Spring Pilau\"\r\n            previewimg=\"/recipeThumbnails/SpringPilau.jpg\"\r\n            url=\"/Recipes/SpringPilau\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Sweet Potato Chilli\"\r\n            previewimg=\"/recipeThumbnails/SweetPotatoChilli.jpg\"\r\n            url=\"/Recipes/SweetPotatoChilli\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Sweet Potato Tortilla\"\r\n            previewimg=\"/recipeThumbnails/SweetPotatoTortilla.jpg\"\r\n            url=\"/Recipes/SweetPotatoTortilla\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Sweet Tofu\"\r\n            previewimg=\"/recipeThumbnails/SweetTofu.jpg\"\r\n            url=\"/Recipes/SweetTofu\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Vegan Kofta\"\r\n            previewimg=\"/recipeThumbnails/VeganKofta.jpg\"\r\n            url=\"/Recipes/VeganKofta\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Vegetable Enchiladas\"\r\n            previewimg=\"/recipeThumbnails/VegetableEnchiladas.jpg\"\r\n            url=\"/Recipes/VegetableEnchiladas\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Vegetable Jambalaya\"\r\n            previewimg=\"/recipeThumbnails/VegetableJambalaya.jpg\"\r\n            url=\"/Recipes/VegetableJambalaya\"\r\n          ></RecipeCard>\r\n          <RecipeCard\r\n            recipeName=\"Winter Quinoa Salad\"\r\n            previewimg=\"/recipeThumbnails/WinterQuinoaSalad.jpg\"\r\n            url=\"/Recipes/WinterQuinoaSalad\"\r\n          ></RecipeCard>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React from \"react\";\r\n\r\ninterface ModernDecksProps {\r\n  setOpenDialog: any;\r\n  setDecklist: any;\r\n}\r\n\r\nexport function ModernDecks(props: ModernDecksProps) {\r\n  return (\r\n    <Grid container sx={{ overflow: \"scroll\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr\" } }}\r\n      >\r\n        <MagicDeckPreviewCard\r\n          deckname=\"Goblins\"\r\n          previewCard=\"Goblin Bushwacker\"\r\n          description=\"Use low cost Goblins to quickly overwhelm your opponent.\"\r\n          file=\"Goblins\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Izzet Delver\"}\r\n          previewCard=\"Delver of Secrets\"\r\n          description=\"Flip Delver of Secrets into an early flying threat, then follow up with burn spells.\"\r\n          file=\"Delver\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BR Vampires\"}\r\n          previewCard=\"Stromkirk Captain\"\r\n          description=\"Play a steady stream of vampires, that only get stronger in number.\"\r\n          file=\"Vampires\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Elfball\"}\r\n          previewCard=\"Elvish Mystic\"\r\n          description=\"Play an elf, make some mana. Play another elf, make some more mana.\"\r\n          file=\"Elves\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BG Saprolings\"}\r\n          previewCard=\"Slimefoot the stowaway\"\r\n          description=\"Sticky saprolings are hard to wipe off the board. Follow up with a Mycoloth to end the game.\"\r\n          file=\"Saprolings\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UG Frogs\"}\r\n          previewCard=\"Grolnok\"\r\n          description=\"Attack with frogs, and gain massive card advantage from the croak counters.\"\r\n          file=\"Frogs\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WG Cats\"}\r\n          previewCard=\"Kaheera\"\r\n          description=\"Cute cats <3\"\r\n          file=\"Cats\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Mardu Allies\"}\r\n          previewCard=\"Kalastria Healer\"\r\n          description=\"Rally abilities strengthen your position with each ally played. Play March From the Tomb for up to 16 damage.\"\r\n          file=\"Allies\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WU Control\"}\r\n          previewCard=\"Approach of the second sun\"\r\n          description=\"Stall until you can cast Approach twice.\"\r\n          file=\"Approach\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"B Tron\"}\r\n          previewCard=\"Urza's Tower\"\r\n          description=\"Get those Urza lands out fast, and play a big spell like Torment of Hailfire or Sheoldred.\"\r\n          file=\"Tron\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WR Control\"}\r\n          previewCard=\"Nahiri, harbinger\"\r\n          description=\"Kill all their creatures until you can turn a token into Emrakul with Indomitable Creativity.\"\r\n          file=\"Emrakul\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Sultai Titan's Nest\"}\r\n          previewCard=\"Titan's Nest\"\r\n          description=\"All your cards effectively gain delve. Cheat mana costs and keep playing more cards than your opponent.\"\r\n          file=\"Titan's Nest\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Electrobalance\"}\r\n          previewCard=\"Restore Balance\"\r\n          description=\"Combo into casting Restore Balance and leave your opponent with nothing, and yourself with a 9/7.\"\r\n          file=\"Electrobalance\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Aetherflux Storm\"}\r\n          previewCard=\"Aetherflux Reservoir\"\r\n          description=\"Make your artifacts cost nothing, then cast them to draw another one. With Aetherflux out, reach 50 life and blast your opponent.\"\r\n          file=\"Aetherflux\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Scapeshift\"}\r\n          previewCard=\"Valakut, the molten pinnacle\"\r\n          description=\"Cast Scapeshift and bring in 6-7 Mountains and Valakut for 18-21 damage. Another Valakut means double damage.\"\r\n          file=\"Scapeshift\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Enduring Renewal\"}\r\n          previewCard=\"Enduring Renewal\"\r\n          description=\"With Enduring Renewal out, cast a 0/0 or self-sacrificing goblin for a huge storm count, then Grapeshot to end.\"\r\n          file=\"Renewal\"\r\n          functions={props}\r\n        ></MagicDeckPreviewCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Button, Dialog, Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Decklist } from \"./Decklist\";\r\nimport { ModernDecks } from \"./ModernDecks\";\r\n\r\nexport function ModernDecklistsPage() {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [decklist, setDecklist] = useState(\"\");\r\n  useEffect(() => {\r\n    document.title = \"Modern Decks\";\r\n  }, []);\r\n  return (\r\n    <Box>\r\n      <Grid container>\r\n        <ModernDecks\r\n          setDecklist={setDecklist}\r\n          setOpenDialog={setDialogOpen}\r\n        ></ModernDecks>\r\n      </Grid>\r\n      <Dialog open={dialogOpen} fullWidth maxWidth=\"lg\">\r\n        <Decklist decklist={decklist}></Decklist>\r\n        <Button\r\n          onClick={() => {\r\n            setDialogOpen(false);\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function MainPage() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Hello welcome to my new website</Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport function B() {\r\n  return (\r\n    <>\r\n      <br />\r\n      &emsp;&emsp;\r\n    </>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { B } from \"../B\";\r\n\r\nexport function HistoryPage() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">History of Santryl</Typography>{\" \"}\r\n      <Typography>\r\n        Santryl's history started when the six ancient Gods agreed on a\r\n        collective experiment. Together, they blew apart the planes of an empty\r\n        world, and oversaw the resultant patches of life. Together with the\r\n        Giants, their first creations, they tended the new planes.\r\n      </Typography>\r\n      <Typography variant=\"h2\">Formation</Typography>\r\n      <Typography>\r\n        One of the earliest continents to emerge after the planar separation,\r\n        Santryl was the result of the Giants pulling together parts of the\r\n        broken world and forging them into one landmass. From there they oversaw\r\n        the gradual introduction of other species by the Gods, and supervised\r\n        the development of the landscapes, ensuring good conditions for the new\r\n        cultures to thrive. The Giants were proactive in these cultures for\r\n        centuries, before leaving them to their own devices. They retreated to\r\n        High Mount, and took residence deep in the caverns below. They remained\r\n        available for counsel, and occasionally stirred to quell wars, but their\r\n        interventions became fewer as the years went by.\r\n        <B></B>Now they seldom leave their caverns, claiming their role as\r\n        complete. They entrust the Dwarves with their locations, and whilst they\r\n        don't encourage visitors, they will still willingly give advice to those\r\n        that seek it.\r\n      </Typography>\r\n      <Typography>\r\n        <B></B> The remaining species, most prominently the Dwarves, Elves,\r\n        Humans, Rana, and various Goblinoids, settled into their respective\r\n        cultures.\r\n        <B></B>The Dwarves remained in High Mount, the mountains they claim to\r\n        be the centre of the world. There they built citadels and towers, halls\r\n        and towns, mines and excavations. They mostly keep to themselves, and\r\n        have managed to maintain neutrality through the continent's various\r\n        wars.\r\n        <B></B> The Elves split in two; Some wanted to roam free the lands of\r\n        Santryl, and became renowned wanderers, sharing stories and wisdom from\r\n        across the continent. The others settled in the south west of Santryl,\r\n        claiming lands for their own.\r\n        <B></B>The Humans mostly stuck together, and together with the\r\n        Halflings, built an industrious empire on the various metals in the\r\n        north. What metals they didn't have access to they traded from the\r\n        Dwarves, all to further their crafts and inventions. In the last century\r\n        they have managed to build ships capable of travelling the great seas,\r\n        and have been sending expeditionary forces off to seek new riches.\r\n        <B></B>The Rana found a natural wonder: hot springs in the east, that\r\n        are looked after by a lone Giant. Keeping their existence a secret, the\r\n        Rana tend to the alpine forest with great care and caution. They welcome\r\n        those that are deemed capable of showing restraint and wisdom, and\r\n        reject those that they suspect would lead to the destruction of the\r\n        springs.\r\n        <B></B>The Goblinoids, numerous in their variations, spread out across\r\n        Santryl. Though diverse in their forms, they remain singular in their\r\n        roles as menaces to whichever culture happens to reside nearby. The\r\n        lowly Goblin sticks to their pack, looting and scavenging for anything\r\n        they can get their hands on. The Rock Goblin, hidden in the mountains,\r\n        disrupt excavation sites and gnaw on the gemstones that decorate Dwarven\r\n        architecture. The Hobgoblin fights to lead their warband, warring mostly\r\n        with other Hobgoblin bands for something they've since forgotten about.\r\n        The Bugbear, wisest of all Goblinoids, makes themself available for\r\n        hire, as protection from threats on the road, such as other pesky\r\n        Goblinoids.\r\n      </Typography>\r\n      <Typography variant=\"h2\">Today's Nations</Typography>{\" \"}\r\n      <Typography>\r\n        In the thousands of years since the formation of Santryl as a continent,\r\n        various cultures have come and gone, each warring and replacing one\r\n        another. The spread of each species has stayed mostly consistent, but as\r\n        time progresses, the more secluded species like the Rana drift into\r\n        rumour, and the Giants into myth and legend. Now there remains four main\r\n        nations in Santryl: The Unvariant Empire, The Galls, High Mount, and the\r\n        Croaking conclave.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { B } from \"../B\";\r\n\r\nexport function DndRulesPage() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Rule Differences</Typography>\r\n\r\n      <Typography variant=\"h2\">Combat Actions</Typography>\r\n      <Typography>\r\n        All characters may take the following Combat Actions. Unless specified,\r\n        each Combat Action is taken as an Action.\r\n      </Typography>\r\n      <Typography>\r\n        <br></br>\r\n      </Typography>\r\n      <Box>\r\n        <Typography variant=\"h4\">Embolden</Typography>\r\n        <Typography>\r\n          You reassure your allies. Choose up to three creatures that can hear\r\n          you within 60ft. Those creatures gain 1 level of Resolve until the end\r\n          of their next turn.\r\n        </Typography>\r\n        <Typography variant=\"h4\">Feint</Typography>\r\n        <Typography>\r\n          You pretend to attack from a certain angle, confusing the enemy at the\r\n          cost of damage. Feint is a Special Attack Action that replaces one\r\n          Melee Attack. When you Feint, make a Sleight of Hand (Dexterity) check\r\n          with Advantage, with the DC of the check equal to the target's AC.\r\n          <B></B> If you succeed, choose a weapon you hold with the Light\r\n          property. You count as having hit the target with an attack with that\r\n          weapon, but instead of rolling damage, you deal 1 damage.\r\n          <B></B> If you have any additional damage effects (such as Divine\r\n          Smite or Sneak Attack), roll their damage as normal.\r\n        </Typography>\r\n        <Typography variant=\"h4\">Tackle</Typography>\r\n        <Typography>\r\n          You charge head first at an enemy in an attempt to knock them down.\r\n          Choose target creature within 5ft. You make an Athletics check\r\n          contested by that creature's Athletics or Acrobatics check (target\r\n          chooses). If you started your turn in a different location, you gain\r\n          +1 to your Athletics check for each 5ft moved. If the target is larger\r\n          than you, it gains Advantage on its check. If the target is smaller\r\n          than you, you gain Advantage on your check.\r\n          <B></B>On a success, you and the target are knocked Prone, your speed\r\n          becomes 0 until your next turn, and the target takes Bludgeoning\r\n          damage equal to the difference in the contested skill checks, to a\r\n          maximum of your Athletics Modifier.\r\n        </Typography>\r\n        <Typography variant=\"h4\">Taunt</Typography>\r\n        <Typography>\r\n          You shout a taunt at an enemy creature within 30ft that can hear you.\r\n          That creature must make a Charisma Saving Throw. The DC is equal to\r\n          your Passive Intimidation (10 + Intimidation Modifier). <B></B>On a\r\n          failure, on that creature's next turn, if that creature makes any\r\n          attacks or uses any harmful magical effects, it must target or\r\n          endeavour to affect you if possible.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Typography variant=\"h2\">Combat Skill Checks</Typography>\r\n      <Typography>\r\n        A creature may be able to use their skills to help in combat. As an\r\n        action, they can attempt to use any skill that will affect a creature,\r\n        positively or negatively. <B></B>Alternatively, as a Bonus Action, they\r\n        can attempt to use any skill in order to gain information.<B></B>\r\n        <Typography sx={{ paddingLeft: 4 }}>\r\n          • <em>Example</em>: An Action is required for an attempt to intimidate\r\n          an enemy into being frightened, or to traverse difficult obstacles\r\n          (not Difficult Terrain) using Acrobatics.\r\n        </Typography>\r\n        <Typography sx={{ paddingLeft: 4 }}>\r\n          •<em>Example:</em> A Bonus Action is required for an attempt to use\r\n          history knowledge, or perception, to tell what kind of creature and/or\r\n          weaknesses they are fighting.\r\n        </Typography>\r\n      </Typography>\r\n      <Typography>\r\n        <br></br>\r\n      </Typography>\r\n\r\n      <Typography variant=\"h2\">Constitution</Typography>\r\n      <Typography>\r\n        Do not add your Constitution Modifier to your Hit Points Total. Instead,\r\n        all characters gain the maximum amount of Hit Points at each level.\r\n        <B></B>You may use your Constitution Modifier in place of your Dexterity\r\n        Modifier when determining your Base Armour Class.\r\n        <B></B>\r\n        Constitution now also interacts with Exhaustion (see below).\r\n      </Typography>\r\n\r\n      <Typography variant=\"h2\">Critical Hits</Typography>\r\n      <Typography>\r\n        When you score a critical hit, you roll twice as many damage dice as\r\n        normal.\r\n      </Typography>\r\n\r\n      <Typography variant=\"h2\">Currency</Typography>\r\n      <Typography>\r\n        In Santryl, currency is more standardised across the continent. Mundane\r\n        equipment and tools rarely sell above 75g, and magic items generally sit\r\n        in the 300-500g range for low-medium power items. As such, treasure\r\n        gained is likely to be lower in coinage than in other areas.<B></B> This\r\n        will also increase the relative value of gemstones for spell components\r\n        (notably Revivify), and increase the importance of good currency\r\n        management. This also allows for the earlier purchasing of non-magical\r\n        amour such as Platemail. <B></B>A good value of reward for finishing\r\n        tasks, missions, and quests is around 10 x Combined Player Level for the\r\n        whole party.\r\n      </Typography>\r\n\r\n      <Typography variant=\"h2\">Exhaustion and Resolve</Typography>\r\n      <Typography>\r\n        When a creature suffers Exhaustion, it subtracts 1 from any d20 roll\r\n        made per level of Exhaustion. One level of exhaustion is removed on a\r\n        Long Rest. <B></B>When a creature gains Resolve, it adds 1 to any d20\r\n        roll made per level of Resolve. All levels of Resolve are lost after any\r\n        rest. <B></B>The maximum amount of Exhaustion a creature can have is\r\n        equal to 5 + 5 times its Constitution Modifier. Should it have suffer\r\n        more Exhaustion, it immediately drops to 0 Hit Points. Creatures that\r\n        would make Death Saving Throws as a result of this do so at\r\n        disadvantage. <B></B>It is possible to suffer maximum Exhaustion whilst\r\n        having levels of Resolve. They may mitigate each other, but do not\r\n        cancel out.\r\n      </Typography>\r\n\r\n      <Typography variant=\"h2\">Flanking</Typography>\r\n      <Typography>\r\n        If a creature is within 5ft of an enemy creature, and has a friendly\r\n        creature also within 5ft of the enemy creature, if they are not within\r\n        5ft of each other, they get +2 to Melee Attacks and Contested Ability\r\n        Checks against the enemy creature.\r\n      </Typography>\r\n\r\n      <Typography variant=\"h2\">Healing Potions</Typography>\r\n      <Typography>\r\n        Healing Potions may be used as an Action for their full healing.\r\n        Additionally, as a Bonus Action, a creature may use the potion on\r\n        themselves. When used this way, only heal for the amount rolled, without\r\n        any other listed bonuses.\r\n      </Typography>\r\n\r\n      <Typography variant=\"h2\">Spell Scroll Casting</Typography>\r\n      <Typography>\r\n        Any creature may attempt to cast any spell from a scroll. To do this,\r\n        they must make an Arcana check, the DC of which is 10 + Spell Level.\r\n        <Typography sx={{ paddingLeft: 4 }}>\r\n          • If the creature has any Spell Slots, they have advantage on this\r\n          check.<br></br> • If the creature knows this Spell, they add their\r\n          Proficiency Bonus. <em>(even if already proficient in Arcana)</em>\r\n          <br></br> • If the creature has this Spell prepared, and it is of 3rd\r\n          level or lower, they automatically pass the check.\r\n        </Typography>\r\n        When casting a spell this way, the creature uses their Intelligence as\r\n        their Spellcasting Ability. If the result of the Arcana check is 10\r\n        higher than the DC, the scroll is preserved. Otherwise, the scroll is\r\n        consumed upon use. Scrolls are consumed on a failed attempt, as the\r\n        magic escapes its binding.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nexport const theme = createTheme({\r\n  palette: { mode: \"light\" },\r\n  typography: { fontFamily: \"liberation serif\", fontSize: 14 },\r\n});\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { B } from \"../B\";\r\n\r\nexport function FaithPage() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Faith and Religion</Typography>{\" \"}\r\n      <Typography>\r\n        After creating the world, the ancient gods took a largely hands-off role\r\n        in the continued development of cultures, and although they continued\r\n        overseeing aspects of life and death, they did not interact with mortals\r\n        aside from a few miraculous interventions. They became known as the\r\n        Natural Pantheon.\r\n        <B></B>Below them are the Civil Pantheon, Gods that oversee the more\r\n        civilised parts of life. Created alongside the developing cultures of\r\n        the world, these Gods wield lesser power than their forefathers, but are\r\n        much more familiar with the mortals, offering more occasional\r\n        appearances and influence on the world.\r\n        <B></B>Every now and then a creature with god-like power walks the\r\n        world, and are occasionally elevated to a godhood of sorts. Named the\r\n        Rogue Gods, they have no implicit domain, and are much more self-serving\r\n        and present in the world's affairs.\r\n      </Typography>\r\n      <Typography variant=\"h2\">The Natural Pantheon</Typography>\r\n      <Typography>\r\n        Six Entities from far beyond, the Natural Pantheon created Santryl long\r\n        ago.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Day, Crol'rim</Typography>\r\n      <Typography>\r\n        Crol'rim is perhaps the most trusted of the Natural Gods, His domain\r\n        that of the Day, where most denizens spend their waking hours. He rarely\r\n        interacts with mortals, but has been known to monitor those that worship\r\n        and preach for His cause, making sure any disbelievers are punished for\r\n        their lack of piety.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Death, Ish'per</Typography>\r\n      <Typography>\r\n        Next is Ish'Per, God of Death. Unlike Spri'eek, Ish'per waits, watching,\r\n        curiously stalking those It will soon claim, and will regularly check up\r\n        upon those who have passed through to another plane. Though It holds no\r\n        domain in the physical plane, It is believed to influence events and\r\n        delay deaths It deems unjust.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Entropy, Tual'ven</Typography>\r\n      <Typography>\r\n        All things come to a slow end, and Tual'ven is waiting there ready.\r\n        Whilst Ish'per governs those whose physical form dies, Tual'ven watches\r\n        for the moment that a concept, a memory, an ideal stops existing, the\r\n        impetus removed from the world. It is said He collects these that fade\r\n        away, but is loathe to share.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Life, Spri'eek</Typography>\r\n      <Typography>\r\n        Held in the highest regard by the denizens of Santryl, the God of Life\r\n        Spri'eek oversees the bloom of life across the world. They tend to each\r\n        new life with the utmost care, but then let it fend for itself once\r\n        born. Life, the giving of it, is Their responsibility, and anything\r\n        after does not concern Them.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Night, Den'wyt</Typography>\r\n      <Typography>\r\n        The God of Night, Den'wyt, is the most absent of Her Pantheon. The night\r\n        comes with Her darkness, and She cares not to govern those that work\r\n        beneath it, instead considering it a fitting challenge for mortals. Any\r\n        who try, try on their own fortune, alone.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Planes, Zak'zar</Typography>\r\n      <Typography>\r\n        Zak'zar is the most present of the Natural Gods, for Their power is\r\n        required each time planar travel is achieved. They are revered by the\r\n        Gnomes of Gnome Island, and those wise enough to ask Their blessing when\r\n        travelling through. Zak'zar care not, really, who travels, unless they\r\n        intend on travelling to Their palace, but those are few who know or try\r\n        such a feat.\r\n      </Typography>\r\n      <Typography variant=\"h2\">The Civic Pantheon</Typography>\r\n      <Typography variant=\"h4\">God of Bargains, Deel</Typography>\r\n      <Typography>\r\n        With his name almost becoming synonymous with trades and deals, Deel\r\n        watches over every bargain and agreement made between mortals. From\r\n        gambling agreements to wedding vows, Deel ensures either side pays up or\r\n        serves the consequences. For obvious reasons he can't actually attend\r\n        every follow up, but he appears often enough to hold respect in the\r\n        mortals' minds.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Disaster, Ohn</Typography>\r\n      <Typography>\r\n        Ohn oversees the prevention and allowance of natural disasters. Storms,\r\n        eruptions, quakes, all must be given a chance to occur, and whilst Ohn\r\n        does not hold malice for those afflicted, there may be a bias as to\r\n        which are more deserving of the ensuing chaos.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Home, Chelt</Typography>\r\n      <Typography>\r\n        No matter the size of the abode, if someone cares for it, Chelt makes it\r\n        a home. Certain protections are afforded those in their homes, such as a\r\n        minor defence against vampiric beings, and a quiet trust that the storms\r\n        won't break through in the night.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Justice, Scayl</Typography>\r\n      <Typography>\r\n        Where Deel ensures bargains are upheld, Scayl looks to make sure they\r\n        are fair, or justified in being unfair. From reparations, to punishment,\r\n        Scayl sees prisoner and warmonger alike.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Roads, Pave</Typography>\r\n      <Typography>\r\n        Pave is the god of travel, roads, and in-betweens. Any passage is his\r\n        domain, as are straits, fords, bridges, and tunnels. He makes sure no\r\n        monsters lurk too near to the major routes, and aids those accosted upon\r\n        them.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of Seas, Bow'Tee</Typography>\r\n      <Typography>\r\n        Upon the waves, sailors find little respite, as Bow'Tee cares more for\r\n        the monsters than they do the more civilised creatures. Large beasts\r\n        roam the oceans, feeding on those unfortunate enough to fall in. Luckily\r\n        for sailors, Pave ensures that Bow'Tee does not go too far in sinking\r\n        ships.\r\n      </Typography>\r\n      <Typography variant=\"h4\">God of War, Agres</Typography>\r\n      <Typography>\r\n        Since creatures have had thoughts of self, they have had thoughts of\r\n        war. Agres watches over, regulates, and often incites violence between\r\n        factions on Santryl.\r\n      </Typography>\r\n      <Typography variant=\"h2\">The Rogue Gods</Typography>\r\n      <Typography>\r\n        Mortals that attained god-like powers, or enacted forbidden rituals to\r\n        attain godhood, the Rogue Gods each have their own agenda.\r\n      </Typography>\r\n      <Typography variant=\"h4\">Kinnos, Machine Spirit</Typography>\r\n      <Typography>\r\n        Manifested by fanatical belief in Gallia, Kinnos is the source of any\r\n        and all autonomous mechanical marvels. From robotic underlings to\r\n        vehicles of war, Kinnos is their. Despite claims from their followers,\r\n        it is unclear if Kinnos supports the aggressive use of machines, their\r\n        signs being mostly apathetic if asked.\r\n      </Typography>\r\n      <Typography variant=\"h4\">The Platinum Lady</Typography>\r\n      <Typography>\r\n        Progenitor of the Dragonborn, the Platinum Lady came from the cosmos,\r\n        landing aeons ago in a comet. Now she wields power matching that of\r\n        higher gods, she seeks mainly to maintain whatever order she finds upon\r\n        her lands.\r\n      </Typography>\r\n      <Typography variant=\"h4\">Rat Master Onchus</Typography>\r\n      <Typography>\r\n        Born from the festering filth of Gallia's underground sewage systems,\r\n        Onchus was a Rat King that ascended mortality after reaching a size too\r\n        large to sustain. His favourite blessings include toxic deluges and\r\n        hordes of vermin. His offspring, the Ratfolk, lay in wait in the\r\n        shadows, committing acts of violence and watching the blame get placed\r\n        on the Goblins.\r\n      </Typography>\r\n      <Typography variant=\"h2\">The Giants</Typography>\r\n      <Typography>\r\n        Though not gods themselves, the giants were granted magic and power from\r\n        their creators, that they could supervise the development of Santryl.\r\n        Many giants have chosen to leave the living behind, but a few remain\r\n        vigilant and watchful.\r\n      </Typography>\r\n      <Typography variant=\"h4\">Olgrath</Typography>\r\n      <Typography>\r\n        Hidden away in the hot springs known as Olgrath's Baths, Olgrath has a\r\n        particular attachment to the natural state, and casts her influence to\r\n        maintain the health of the various foliage in Santryl. Knowing that her\r\n        life would be threatened if her location was common knowledge, she hides\r\n        deep within the Croaking Conclave, and trusts them with tasks to help\r\n        restore balance where it is needed.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { B } from \"../B\";\r\n\r\nexport function BtvRulesPage() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Basic Rules</Typography>\r\n      <Typography>\r\n        In Beyond The Veil, the world has characters that each have access to\r\n        The Veil, a source of magical power. Most characters can only access a\r\n        small amount of power, with those rare few who can freely use the magic\r\n        ascending to effective god-hood. <B></B>In this world, it is not just\r\n        scholars and priests that utilise in magic; no successful swordsman or\r\n        archer is without their magical guidance or enhanced weaponry. From\r\n        defensive wards to elemental explosions, magic forms an integral part in\r\n        combat. <B></B>Some choose not to weaponise their magic, however, with\r\n        many - such as minstrels and chanters, using their connection to The\r\n        Veil to impress others, gaining their favour, or in more sinister cases\r\n        charm them out of their wealth.\r\n      </Typography>\r\n      <Typography variant=\"h2\">Gameplay</Typography>\r\n      <Typography>\r\n        The game is played by two types of players.\r\n        <B></B>• The Game Master (GM), whose job it is to narrate and act out\r\n        the environment, world, and people within.\r\n        <B></B>• The Player, who assumes the role of one character within the\r\n        world.\r\n        <br></br> The game is usually played with 1 GM and 3-4 Players.\r\n      </Typography>\r\n      <Typography variant=\"h2\">Attributes</Typography>\r\n      <Typography>\r\n        Each character in Beyond the Veil has 5 Attributes:\r\n      </Typography>\r\n      <Typography variant=\"h4\">Power</Typography>\r\n      <Typography>\r\n        Power represents the physical strength of a character. It affects things\r\n        such as melee weapon attacks, lifting or moving heavy objects, or\r\n        engaging in physical contest with an enemy.\r\n      </Typography>\r\n      <Typography variant=\"h4\">Dexterity</Typography>\r\n      <Typography>\r\n        Dexterity represents the physical speed and accuracy of a character. It\r\n        affects things such as ranged weapon attacks, dodging dangerous effects,\r\n        and disarming traps.\r\n      </Typography>\r\n      <Typography variant=\"h4\">Knowledge</Typography>\r\n      <Typography>\r\n        Knowledge represents all the knowledge a characters has about the world.\r\n        It affects things such as skill checks, magical attacks, and\r\n        identification of the unknown.\r\n      </Typography>\r\n      <Typography variant=\"h4\">Focus</Typography>\r\n      <Typography>\r\n        Focus represents a character's strength of mind. It affects things such\r\n        as magical defences, morale, and rest benefits.\r\n      </Typography>\r\n      <Typography variant=\"h4\">Will</Typography>\r\n      <Typography>\r\n        Will represents a character's strength of ego or likeability. It affects\r\n        things such as social interactions, resisting magical charms, and\r\n        empowering others.\r\n      </Typography>\r\n      <Typography variant=\"h3\">Attribute Values</Typography>\r\n      <Typography>\r\n        Each Attribute has a value. This can be negative or positive. Characters\r\n        start with a set of Attribute Vales, that will increase in as they gain\r\n        levels. During gameplay, various things may ask a character to use or\r\n        add an Attribute Value for an attack, skill, or similar action.\r\n      </Typography>\r\n      <Typography variant=\"h2\">Levels</Typography>\r\n      <Typography>\r\n        To represent a character's power and experience, each character has a\r\n        Level. Most characters start at Level 1, and gain experience as they\r\n        defeat enemies or accomplish goals.<br></br> When a character gains a\r\n        level, they will gain a benefit based on their class.<br></br> Levels\r\n        range from 1 to 10, with later levels being slower to increase from than\r\n        earlier levels.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function AubergineMeatballs() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Aubergine Meatballs</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>1 Onion<br></br>2 Large\r\n        Aubergines<br></br>4 Cloves of Garlic<br></br>\r\n        Handful of Parsley<br></br>\r\n        175g White Bread<br></br>\r\n        200g Tinned Green Lentils<br></br>\r\n        30g Parmesan<br></br>\r\n        1/2 Tsp Chilli Flakes<br></br>\r\n        800g Tinned Chopped Tomatoes<br></br>\r\n        150g Mozzarella<br></br>\r\n        Handful of Basil<br></br>\r\n        Salt<br></br>\r\n        Pepper<br></br>\r\n        Olive Oil<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Heat your oven to 200°C. <br></br>\r\n        Finely slice your onion. Dice your aubergines into small chunks. Finely\r\n        chop your garlic and parsley.<br></br>\r\n        Heat a saute pan over a medium heat with a little olive oil. Add your\r\n        sliced onion and cook until softened, about 10 mins.<br></br>\r\n        Drain your lentils, then tip them onto a baking tray. Bake for 15 mins\r\n        until they have dried out slightly. <br></br>\r\n        <br></br>\r\n        Add your aubergine chunks to the same pan as your onions with a pinch of\r\n        salt and a drizzle of olive oil. Fry for 5 mins until totally soft and\r\n        tender. Tip in half of your garlic and cook for another 2 mins. Allow\r\n        your aubergines and lentils to cool slightly.<br></br>\r\n        Add your bread to the food processor and whizz to crumbs, then remove\r\n        25g to save until later. Tip the aubergines and lentils into your food\r\n        processor, along with your onions, parmesan, all but a tbsp of your\r\n        parsley and salt and pepper. Whizz to a paste, then season to taste.\r\n        <br></br>\r\n        Roll your mixture into 12 equal sized balls. <br></br>\r\n        Place them on a parchment lined baking tray, then drizzle with a little\r\n        olive oil.<br></br>\r\n        Bake for 40 mins until crisp. <br></br>\r\n        <br></br>\r\n        Meanwhile, make your tomato sauce. Heat a little olive oil in a saute\r\n        pan over medium heat. Add your remaining garlic and chilli flakes, and\r\n        cook for 1 min. Tip in your tinned tomatoes and add a sprig of basil.\r\n        Simmer for 25 mins until reduced.<br></br>\r\n        Whizz up with a stick blender if you like it smoother, then season to\r\n        taste with salt and pepper. <br></br>\r\n        Heat your grill to high. <br></br>\r\n        Mix your remaining 25g of breadcrumbs with chopped parsley. <br></br>\r\n        Pour your sauce into a baking dish. Add your meatballs, then tears over\r\n        your mozzarella. Grate over a little parmesan and sprinkle on your\r\n        breadcrumbs, then grill for 5 mins. <br></br>\r\n        Top with basil leaves, then serve! <br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function BlackBeanBurgers() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Black Bean Burgers</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        1.5 red onions <br></br>\r\n        200g mixed mushrooms<br></br>\r\n        100g rye bread<br></br>\r\n        Ground coriander<br></br>\r\n        400g black beans<br></br>\r\n        Olive oil<br></br>\r\n        40g mature Cheddar cheese<br></br>4 soft rolls<br></br>\r\n        100g ripe cherry tomatoes<br></br>1 lime<br></br>\r\n        Chipotle tabasco sauce<br></br>1 ripe mango<br></br>1 ripe avocado\r\n        <br></br>4 tbsp natural yoghurt<br></br>4 sprigs fresh coriander\r\n        <br></br>\r\n        <br></br>\r\n      </Typography>\r\n      <Typography>\r\n        Preheat the overn to 200C.<br></br>\r\n        Pell 1 onion, plce in a food processor with the musrooms, rye bread, and\r\n        1 teaspoon of ground coriander, and whiz until fine. <br></br>\r\n        Drain and pulse in the black beans, season lightly with sea salt and\r\n        black pepper, then divide into 4 and shape into patties, roughly 2.5cm\r\n        thick.<br></br>\r\n        Rub all over with oil and dust with ground coriander, then place on a\r\n        oiled baking tray and roast for 25 minutes, or until dark and crisy,\r\n        topping with the Cheddar and warming the rolls for the last few minutes.\r\n        <br></br>\r\n        <br></br>\r\n        Meanwhile, peel and very finely chop the reaminaing onion with the\r\n        tomatoes and place in a bowl. <br></br>\r\n        Squeeze over the lime juice, add a few shakes of Tabasco and season to\r\n        taste.<br></br>\r\n        Destone, peel, and finely slice the mango and avocado.<br></br>\r\n        <br></br>\r\n        Halve the warm rolls and divide the yoghurt between the bases, followed\r\n        by half the salsa, the mango, avocado, and coriander leaves. <br></br>\r\n        Top with the burgers, remaining salsa and extra Tabasco, pop the lids on\r\n        and press down lightly.<br></br>\r\n        <br></br>\r\n        Always nice with oven-roasted, skin-on chips.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function ButternutSquashPasta() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Butternut Squash Pasta</Typography>\r\n      <Typography variant=\"h3\">Ingredients</Typography>\r\n      <Typography>\r\n        ½ butternut squash<br></br>1 Tbsp (15 mL) olive oil<br></br>⅛ tsp salt\r\n        <br></br>1 pinch ground black pepper<br></br>1 head garlic<br></br>\r\n        <b>Pasta</b>\r\n        <br></br>\r\n        14 oz (400 g) dry rigatoni<br></br>1 Tbsp (15 mL) olive oil<br></br>½\r\n        cup (23 g) sage leaves, sliced<br></br>1 cup (240 mL) soy cooking cream\r\n        <br></br>½ lemon, juiced<br></br>1 cup (20 g) arugula<br></br>\r\n      </Typography>\r\n      <Typography>\r\n        Preheat oven to 390°F (200°C) and line a baking tray. <br></br>\r\n        Carefully peel the outer skin of the squash, or keep it on for extra\r\n        fibre. <br></br>\r\n        Cut the butternut squash in half lengthwise. <br></br>\r\n        Use a spoon to scrape out the seeds and stringy bits and place these\r\n        into a bowl of water.<br></br>\r\n        <br></br>\r\n        Thinly slice the squash into ½ cm thick slices. <br></br>\r\n        Transfer to the baking tray, toss in oil, and sprinkle on some salt and\r\n        pepper.<br></br>\r\n        <br></br>\r\n        Cut the top ½ cm off a head of garlic to expose the cloves. <br></br>\r\n        Drizzle some oil on the garlic and place this on the baking tray as\r\n        well. <br></br>\r\n        Bake the garlic and squash for 20 minutes.<br></br>\r\n        <br></br>\r\n        Returning to the seeds in water, gently pick out the seeds and discard\r\n        the stringy bits. <br></br>\r\n        Then drain and rinse the seeds until clean. <br></br>\r\n        Toss the seeds in a bit of oil, together with a sprinkle of salt and\r\n        pepper to taste.<br></br>\r\n        <br></br>\r\n        Remove the baking tray from the oven. <br></br>\r\n        Remove the head of garlic from the tray, and add in its place the squash\r\n        seeds. <br></br>\r\n        Flip over the squash slices and return to the ovenfor another 10 - 15\r\n        minutes, or until the seeds are lightly golden, and the squash is\r\n        thoroughly cooked.<br></br>\r\n        <br></br>\r\n        Cook the pasta in a large pot of boiling salted water. <br></br>\r\n        Cook until tender but not quite done - about 1 minute away from being al\r\n        dente.<br></br>\r\n        <br></br>\r\n        Meanwhile, heat a large pan on medium-high heat and add the oil and\r\n        sage. <br></br>\r\n        Cook for 1 - 2 minutes, or until the sage shrivels. Add in the roasted\r\n        garlic cloves, and mash with the back of a wooden spatula to purée it.\r\n        <br></br>\r\n        <br></br>\r\n        Scoop out ¾ cup (180 mL) of the pasta cooking water and add it to the\r\n        pan. <br></br>\r\n        Then drain the pasta, and add this to the pan as well, along with the\r\n        cooking cream. <br></br>\r\n        Cook for a minute until heated through.<br></br>\r\n        <br></br>\r\n        Stir through the lemon juice, and plate while hot. <br></br>\r\n        Top with arugula, baked squash, and crispy squash seeds. Enjoy!<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function CreamyMushroomPasta() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Creamy Mushroom Pasta</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>2 tbsp olive oil\r\n        <br></br>1 tbsp butter<br></br>1 onion, finely chopped<br></br>\r\n        250g button chestnut mushroom, sliced<br></br>1 garlic clove, finely\r\n        grated<br></br>\r\n        100ml dry white wine<br></br>\r\n        200ml double cream<br></br>1 lemon, zest only<br></br>\r\n        200g parmesan (or vegetarian alternative), grated, plus extra to serve\r\n        <br></br>\r\n        300g tagliatelle or linguini<br></br>½ small bunch parsley, finely\r\n        chopped<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Heat the oil and butter in a medium saucepan. Fry the onion over a low\r\n        heat for 10 mins or until softened and translucent.<br></br>\r\n        <br></br>\r\n        Add the mushrooms and cook for 10 mins over a medium heat. Add the\r\n        garlic and cook for 2 mins. Add the wine and bring to a simmer, reduce\r\n        the liquid by half.<br></br>\r\n        <br></br>\r\n        Add the double cream and bring to a simmer, then add the lemon zest and\r\n        parmesan. Season with salt and plenty of black pepper.<br></br>\r\n        <br></br>\r\n        Meanwhile, cook the pasta following pack instructions. Reserve 100ml of\r\n        the pasta water. Toss the pasta in the pan with the creamy sauce and\r\n        enough of the reserved water to loosen. Stir through the parsley, divide\r\n        into bowls and top with extra cheese, if you like.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function DoubleBeanAndRoastedPepperChilli() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">\r\n        Double Bean And Roasted Pepper Chilli\r\n      </Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>2 onions, chopped{\" \"}\r\n        <br></br>2 celery sticks, finely chopped<br></br>2 yellow or orange\r\n        peppers, finely chopped<br></br>2 tbsp sunflower oil or rapeseed oil\r\n        <br></br>2 x 460g jars roasted red peppers<br></br>2 tsp chipotle paste\r\n        <br></br>2 tbsp red wine vinegar<br></br>1 tbsp cocoa powder<br></br>1\r\n        tbsp dried oregano<br></br>1 tbsp sweet smoked paprika<br></br>2 tbsp\r\n        ground cumin<br></br>1 tsp ground cinnamon<br></br>2 x 400g cans chopped\r\n        tomatoes<br></br>\r\n        400g can refried beans<br></br>3 x 400g cans kidney beans, drained and\r\n        rinsed<br></br>2 x 400g cans black beans, drained and rinsed<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Put the onions, celery and chopped peppers with the oil in your largest\r\n        flameproof casserole dish or heavy-based saucepan, and fry gently over a\r\n        low heat until soft but not coloured.<br></br>\r\n        Drain both jars of peppers over a bowl to catch the juices. Put a\r\n        quarter of the peppers into a food processor with the chipotle paste,\r\n        vinegar, cocoa, dried spices and herbs. Whizz to a purée, then stir into\r\n        the softened veg and cook for a few mins.<br></br>\r\n        Add the tomatoes and refried beans with 1 can water and the reserved\r\n        pepper juice. Simmer for 1 hr until thickened, smoky and the tomato\r\n        chunks have broken down to a smoother sauce.<br></br>\r\n        At this stage you can cool and chill the sauce if making ahead.\r\n        Otherwise add the kidney and black beans, and the remaining roasted\r\n        peppers, cut into bite-sized pieces, then reheat. (This makes a large\r\n        batch, so once the sauce is ready it might be easier to split it between\r\n        two pans when you add the beans and peppers.) Once bubbling and the\r\n        beans are hot, season to taste and serve.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function DutchBoerenKoolStamppot() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Dutch Boeren Kool Stamppot</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>3 lbs potatoes{\" \"}\r\n        <br></br>1 large white onion<br></br>1 bay leaf<br></br>1 lb curly kale\r\n        <br></br>1 teaspoon salt<br></br>1 pinch ground pepper<br></br>1 lb\r\n        smoked sausage<br></br>1 /2 cup milk<br></br>2 Tablespoons butter\r\n        <br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Peel and dice potatoes and onion.<br></br>\r\n        Clean, trim and slice kale.<br></br>\r\n        Add the potatoes, onion, kale, a bay leaf, a pinch of salt and just\r\n        enough water to cover all in a pan.<br></br>\r\n        Cover and boil gently for about 25 minutes.<br></br>\r\n        <br></br>\r\n        Meanwhile steam or grill the smoked sausage until done then slice into\r\n        bite size pieces.<br></br>\r\n        Remove the bay leaf, drain the vegetables, and mash them.<br></br>\r\n        Add milk and butter.<br></br>\r\n        Add in sliced smoked sausage.<br></br>\r\n        Add salt and pepper to taste and serve.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function Falafels() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Falafels</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        5000g dried chickpeas <br></br>1 brown onion<br></br>3 garlic cloves\r\n        <br></br>\r\n        Fresh Coriander<br></br>\r\n        Fresh parsley<br></br>\r\n        Plain flour<br></br>\r\n        Ground Cumin<br></br>\r\n        Cayenne pepper<br></br>\r\n        Olive oil<br></br>\r\n        <b>Salad</b>\r\n        <br></br>\r\n        4-6 tomatoes<br></br>1 cucumber<br></br>\r\n        Fresh mint<br></br>\r\n        Fresh parsley<br></br>1 lemon<br></br>\r\n        Olive oil<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Pour the dried chickpeas into a bowl, cover with warm water and soak\r\n        overnight<br></br>\r\n        <br></br>\r\n        Preheat the oven to 180C.<br></br>\r\n        Start with the falafel mix. Add the soaked, dried chickpeas, a chopped\r\n        brown onion, the garlic cloves, a large handful of coriander, a large\r\n        handful of parsley, 2 tbsp of flour, 2 tsp of cumin and 1 tsp of cayenne\r\n        pepper into a blender.<br></br>\r\n        Season with salt and pepper.<br></br>\r\n        <br></br>\r\n        Pulse the mixture in a blender. <br></br> You want the texture to be\r\n        rough so don't overdo it.<br></br>\r\n        Pulsing 3-4 times for 5 seconds each time should do the trick.<br></br>\r\n        Check teh falafel misture can stick in a ball. If it is too loose, just\r\n        a dd a bit more flour.<br></br>\r\n        <br></br>\r\n        Make little discs, around 4cm wide, and 3cm deep.<br></br>\r\n        Line them up on a sheet of baking paper, and put them in the fridge for\r\n        10 miuntes to firm up. <br></br>\r\n        The mixture should make about 20 discs.<br></br>\r\n        <br></br>\r\n        Salad time. Chop the tomatoes, peel the cucumber and chop it into\r\n        chunks, and add to a bowl.<br></br>\r\n        Add a handful of chopped mint, a handful of chopped parsley, the juice\r\n        of a lemon, salt, pepper, and a glug of olive oil.<br></br>\r\n        Mix.<br></br>\r\n        <br></br>\r\n        Falafel time. Line a baking sheet with baking paper, and place your\r\n        falafel on it.<br></br>\r\n        Drizzle lightly with olive oil on one side,and then turn over the\r\n        falafel and drizzle olive oil on the other side.<br></br>\r\n        Pat in the oil with your fingers, and then place in the hot oven for 30\r\n        minutes, flipping the falafel after 20 minutes.<br></br>\r\n        <br></br>\r\n        Serve with warm pitta bread and hummus.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function GreenRisotto() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Green Risotto</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>5 cups stock/broth\r\n        <br></br>1 10-ounce bag spinach, tough stems removed<br></br>1 cup fresh\r\n        basil leaves<br></br>2 tablespoons extra-virgin olive oil<br></br>1 cup\r\n        chopped shallots or onion<br></br>4 cloves garlic, minced<br></br>1 ½\r\n        cups arborio, carnaroli or other risotto rice<br></br>¼ teaspoon salt\r\n        <br></br>1 cup dry white wine(optional)<br></br>1 cup finely shredded\r\n        Parmigiano-Reggiano cheese, divided<br></br>\r\n        Freshly ground pepper to taste<br></br>\r\n        1/3 cup toasted pine nuts (see Tip)<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Bring broth to a simmer in a medium saucepan over medium-high heat.\r\n        <br></br>\r\n        Reduce the heat so the broth remains steaming, but is not simmering.\r\n        <br></br>\r\n        <br></br>\r\n        Rinse spinach thoroughly with cold water and place in a large\r\n        microwave-safe bowl.<br></br>\r\n        Cover with plastic wrap and punch several holes in it.<br></br>\r\n        Microwave on High until wilted, 2 to 3 minutes.<br></br>\r\n        Let cool, then squeeze out excess moisture.<br></br>\r\n        Transfer to a food processor or blender, add basil and puree until\r\n        smooth; set aside.<br></br>\r\n        <br></br>\r\n        Heat oil in a Dutch oven over medium-low heat.<br></br>\r\n        Add shallots (or onion) and cook, stirring occasionally, until softened,\r\n        about 2 minutes.<br></br>\r\n        Add garlic and cook, stirring, until fragrant, about 30 seconds.\r\n        <br></br>\r\n        Add rice and salt and stir to coat.<br></br>\r\n        <br></br>\r\n        Stir 1/2 cup of the hot broth and a generous splash of wine into the\r\n        rice.<br></br>\r\n        Cook, stirring frequently, until the liquid has been absorbed.<br></br>\r\n        Continue to cook on medium-low, adding broth in 1/2-cup increments\r\n        followed by a splash of wine, and stirring frequently after each\r\n        addition, until most of the liquid is absorbed.<br></br>\r\n        The risotto is done when you've used all the broth and wine and the rice\r\n        is creamy and just tender, 25 to 35 minutes total.<br></br>\r\n        Stir in the reserved spinach-basil puree.<br></br>\r\n        <br></br>\r\n        Remove from the heat; stir in 3/4 cup cheese and pepper.<br></br>\r\n        Serve sprinkled with pine nuts and the remaining 1/4 cup cheese.\r\n        <br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function HalloumiSpinachCurry() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Halloumi Spinach Curry</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>2 large sweet potatoes,\r\n        peeled and chopped<br></br>1 (14.5 ounce) can diced tomatoes<br></br>3\r\n        teaspoons curry powder<br></br>2 teaspoons chili powder<br></br>1\r\n        teaspoon ground cumin<br></br>1 (14 ounce) can coconut milk<br></br>1 (8\r\n        ounce) package fresh spinach<br></br>½ diced green chile pepper, or to\r\n        taste<br></br>1 cube vegetable bouillon<br></br>2 teaspoons chili jam\r\n        (Optional)<br></br>1 (8.8 ounce) package halloumi cheese, sliced\r\n        <br></br>1 (14 ounce) can chickpeas, drained<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Place sweet potatoes into a large pot and cover with water; bring to a\r\n        boil. <br></br>\r\n        Cook until tender, about 6 minutes. <br></br>\r\n        Drain.<br></br>\r\n        <br></br>\r\n        Combine sweet potatoes, tomatoes, curry powder, chili powder, and cumin\r\n        in a saucepan over medium heat and bring to a simmer. <br></br>\r\n        Add coconut milk, spinach, chile pepper, bouillon cube, and chili jam.{\" \"}\r\n        <br></br>\r\n        Simmer until curry starts to thicken and has cooked down a little, 15 to\r\n        20 minutes.<br></br>\r\n        <br></br>\r\n        Meanwhile, fry halloumi in a skillet over medium heat until browned, 4\r\n        to 6 minutes. <br></br>\r\n        Add cooked halloumi and chickpeas to curry and heat through, about 5\r\n        minutes.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function HarissaPasta() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Harissa Pasta</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        400g tomatoes <br></br>1 tbsp oliv oil <br></br>1 garlic clove, minced\r\n        <br></br>1 red pepper, roasted <br></br>1 pot hummus <br></br>\r\n        150ml pasta water <br></br>1 tbsp harissa paste <br></br>4 portions of\r\n        pasta <br></br>\r\n        15g fresh parsley <br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Get a pot of boiling water on th ehob, add a large pinch of salt along\r\n        with the pasta. <br></br>\r\n        Leave to boil for 10 minutes. <br></br>\r\n        <br></br>\r\n        Meanwhile roughly chop the garlic, add to a pan with the tomatoes and\r\n        red pepper. <br></br>\r\n        Fry for 6-7 minutes. <br></br>\r\n        <br></br>\r\n        Add the harissa paste along with the pasta water and hummus, then mix\r\n        together.<br></br>\r\n        <br></br>\r\n        Drain the pasta and mix with the rest of the ingredients.<br></br>\r\n        Top with parsley and serve.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function HeartyLentilStew() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Hearty Lentil Stew</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        40g dried porcini mushrooms, roughly chopped<br></br>\r\n        200g dried brown lentils<br></br>1 ½ tbsp chopped rosemary<br></br>3\r\n        tbsp rapeseed oil<br></br>2 large onions, roughly chopped<br></br>\r\n        150g chestnut baby button mushrooms<br></br>4 garlic cloves, finely\r\n        grated<br></br>2 tbsp vegetable bouillon powder<br></br>2 large carrots\r\n        (350g), cut into chunks<br></br>3 celery sticks (165g), chopped<br></br>\r\n        500g potatoes, cut into chunks<br></br>\r\n        200g cavolo nero, shredded<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Cover the mushrooms in boiling water and leave to soak for 10 mins. Boil\r\n        the lentils in a pan with plenty of water for 10 mins. Drain and rinse,\r\n        then tip into a pan with the dried mushrooms and soaking water (don’t\r\n        add the last bit of the liquid as it can contain some grit), rosemary\r\n        and 2 litres water. Season, cover and simmer for 20 mins.<br></br>\r\n        Meanwhile, heat the oil in a large pan and fry the onions for 5 mins.\r\n        Stir in the fresh mushrooms and garlic and fry for 5 mins more. Stir in\r\n        the lentil mixture and bouillon powder, then add the carrots, celery and\r\n        potatoes. Cover and cook for 20 mins, stirring often, until the veg and\r\n        lentils are tender, topping up the water level if needed.<br></br>\r\n        Remove any tough stalks from the cavolo nero, then add to the pan and\r\n        cover and cook for 5 mins more. If you're following our Healthy Diet\r\n        Plan, serve half in bowls, then chill the rest to eat another day. Will\r\n        keep in the fridge for two to three days. Reheat in a pan until hot.\r\n        <br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function JewelledMoutzentra() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Jewelled Moutzentra</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        250g dried green or brown lentils <br></br>\r\n        130g long grain rice <br></br>4 onions<br></br>3 garlic cloves<br></br>4\r\n        tbsp olive oil<br></br>1 tsp cumin seeds<br></br>\r\n        1/2 pomegranate<br></br>1 bunch flat leaf parsley<br></br>\r\n        50g toasted flaked almonds<br></br>\r\n        50g dried sour cherries <br></br>\r\n        1/2 lemon <br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Place a large pan of salted water on to boil. <br></br>\r\n        Thoroughly rinse the lentils in a sieve, picking out any stones, and\r\n        then cook in the boiling water for 20 minutes until almost cooked.{\" \"}\r\n        <br></br>\r\n        <br></br>\r\n        Meanwhile, rinse the rice in a sieve, then add to the pan for a further\r\n        12 minutes, until perfectly cooked.<br></br>\r\n        Drain the rice and lentils in a sieve or fine colander, and return to\r\n        the hot pan to steam dry and keep fluffy.<br></br>\r\n        <br></br>\r\n        While the lentils are cooking, peel and finely slice the onions and\r\n        garlic.<br></br>\r\n        Place a large frying pan on a medium heat and pour in the oil.<br></br>\r\n        Sauté the onions, garlic, cumin, and a good pinch of salt and pepper for\r\n        20 minutes until deep golden brown. <br></br>\r\n        Make sure to stir occasionally.<br></br>\r\n        <br></br>\r\n        Meanwhile, pick the pomegranate seeds. <br></br>\r\n        Pick and roughly chop the flat leaf parsley, and toss them with the\r\n        toasted flaked almonds, sour cherries, and pomegranate seeds.<br></br>\r\n        Squeeze over th juice from the lemon half, and toss it all together.\r\n        <br></br>\r\n        When the onions are ready, stir through the cooked lentils, check the\r\n        seasoning, and plate up. <br></br>\r\n        Garnish with the dressed fruits and nuts and serve.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function KungPaoCauliflower() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Kung Pao Cauliflower</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        <b>For the Baked Crispy Cauliflower</b>\r\n        <br></br>5 tbsp corn starch or other starch<br></br>6 tbsp bread crumbs\r\n        use gluten-free crumbs to make gf<br></br>5 tbsp or more water<br></br>\r\n        1/2 tsp cayenne use a 1/3 tsp for less heat<br></br>2 tsp soy sauce\r\n        <br></br>\r\n        1/4 tsp salt<br></br>\r\n        1/4 tsp roasted sesame oil<br></br>1 tsp oil<br></br>1 medium head of\r\n        cauliflower chopped into florets<br></br>\r\n        <br></br>\r\n        <b>For the Kung Pao sauce:</b>\r\n        <br></br>1 tsp oil<br></br>8 to 10 dried red chilies chinese red\r\n        chilies, or arbol or cayenne, or use california red for less heat\r\n        <br></br>\r\n        1/2 tsp coarsely crushed sichuan peppercorns or use a mix of coarsely\r\n        crushed black pepper and red pepper flakes<br></br>2 to 3 tbsp chopped\r\n        cashews or peanuts<br></br>4 to 5 cloves of garlic minced<br></br>1 inch\r\n        ginger minced<br></br>2 tbsp scallions chopped<br></br>\r\n        <b>Sauce mix</b>\r\n        <br></br>\r\n        2.5 tbsp low sodium soy sauce/tamari use certified gluten-free sauce to\r\n        make gf<br></br>\r\n        1.5 to 2 tbsp rice vinegar<br></br>1 tsp chinese rice wine optional\r\n        <br></br>1 tbsp sugar<br></br>\r\n        1/4 cup + 2 tbsp water use 1/2 cup for more sauce<br></br>1 tsp\r\n        cornstarch<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Chop up the cauliflower and keep aside. <br></br>\r\n        Preheat the oven to 425 degrees F / 220ºc. Mix the cornstarch\r\n        breadcrumbs, and the rest of the ingredients to make a batter. <br></br>\r\n        Let the batter sit for 10 seconds to thicken if it isn't thick. The\r\n        cornstarch continues to thicken the batter, so as soon as it is a good\r\n        not too watery consistency, start dipping the cauliflower in the batter,\r\n        tap to drop excess and place on parchment lined baking sheet. <br></br>\r\n        If the batter thickens too much while working, add a tsp or more water\r\n        and mix in and continue.<br></br>\r\n        <br></br>\r\n        Bake for 30 minutes or longer until the florets are cooked through.\r\n        Check with a toothpick/knife<br></br>\r\n        <br></br>\r\n        Meanwhile make the sauce. Heat oil in a skillet over medium high heat.{\" \"}\r\n        <br></br>\r\n        Add the red chilies and peppercorns and cook until the red chilies are\r\n        fragrant, but not overly brown, or someone starts sneezing. (For more\r\n        heat, break some of the chilies into half and add to the skillet.)\r\n        <br></br>\r\n        <br></br>\r\n        Add the nuts and mix for a few seconds. Add the ginger, garlic, reduce\r\n        heat to medium low and continue to cook until the garlic is golden. 4 to\r\n        5 minutes. Stir occasionally.<br></br>\r\n        Add in the scallions, and 2 to 3 tbsp finely chopped green peppers or\r\n        other veggies if using and mix in. Increase heat to medium. Cook for a\r\n        minute.<br></br>\r\n        Mix the sauce ingredients in a bowl and add to the skillet. Continue to\r\n        cook until the sauce comes to a boil and thickens slightly (~2 mins).{\" \"}\r\n        <br></br>\r\n        Carefully taste and adjust salt, sweet and spice. If the sauce is not\r\n        hot enough, break a few of the chilies open or add in red pepper flakes\r\n        to taste and mix in.<br></br>\r\n        <br></br>\r\n        Arrange the baked cauliflower in a shallow bowl in one layer. When ready\r\n        to serve, Drizzle the sauce over each floret. Serve.<br></br>\r\n        <br></br>\r\n        To store, store the baked cauliflower and sauce separately. Heat the\r\n        sauce, pour over the florets. To serve with rice/cooked grains, double\r\n        the sauce mix and bring to a boil to thicken, toss in the cauliflower\r\n        and serve immediately over rice.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function LentilShepherdsPie() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Lentil Shepherds Pie</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        <b>Lentil Filling</b>\r\n        <br></br>1 tablespoon olive oil<br></br>3 large yellow onions, diced\r\n        <br></br>8 cloves garlic minced (use less if you're not a huge fan of\r\n        garlic)<br></br>1 tablespoon fresh thyme leaves, roughly chopped\r\n        <br></br>2 teaspoons fresh rosemary leaves, roughly chopped<br></br>3\r\n        tablespoons tomato paste<br></br>\r\n        1/2 cup (120 mL) dry red wine<br></br>1 1/2 cups (10 ounces / 285g)\r\n        green lentils (or brown lentils)<br></br>3 3/4 cups (900 mL) vegetable\r\n        broth<br></br>2 bay leaves<br></br>1 1/2 teaspoons sweet or hot paprika\r\n        <br></br>\r\n        1/4 cup (56g) smooth tahini**<br></br>1 tablespoon tamari (or soy sauce)\r\n        <br></br>1 tablespoon good-quality balsamic vinegar<br></br>2 teaspoons\r\n        vegan Worcestershire sauce (optional)<br></br>\r\n        Plenty of kosher salt or sea salt (I used 1 1/2 - 2 teaspoons kosher\r\n        salt)<br></br>\r\n        Freshly cracked black pepper to taste<br></br>\r\n        <b>Mashed Potato Topping</b>\r\n        <br></br>\r\n        20 ounces (680g) Russet potatoes<br></br>\r\n        16 ounces (454g) cauliflower, cut into large florets<br></br>\r\n        <br></br>1 1/2 teaspoons kosher salt, plus more to taste<br></br>1\r\n        rosemary sprig (optional)<br></br>4 tablespoons vegan butter, softened\r\n        at room temperature (or olive oil)<br></br>\r\n        1/2 cup (120 mL) “lite” coconut milk<br></br>1 tablespoon nutritional\r\n        yeast<br></br>\r\n        Freshly cracked black pepper to taste<br></br>\r\n        <b>Optional finishes and garnishes</b>\r\n        <br></br>\r\n        Extra virgin oil for baking and finishing<br></br>\r\n        Flaky sea salt and black pepper<br></br>\r\n        Fresh thyme leaves<br></br>\r\n        Chopped flat-leaf parsley<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Make the Lentil Filling. <br></br>\r\n        Heat the olive oil in an ovenproof 12-inch skillet over medium to\r\n        medium-high heat until hot. <br></br>\r\n        If you don't have an ovenproof skillet, you'll need to transfer the\r\n        cooked lentil filling to a baking dish when it's time to bake.<br></br>\r\n        <br></br>\r\n        Add the onions with a couple pinches of salt and sauté for 8-10 minutes,\r\n        or until most of the onions are browned. <br></br>\r\n        Stir occasionally to prevent burning, but not too often so that they can\r\n        brown. <br></br>\r\n        Add the garlic, thyme and rosemary and cook for 2 minutes, stirring\r\n        frequently to prevent burning.<br></br>\r\n        <br></br>\r\n        Push the onions to the edges of the pan so there's an empty space in the\r\n        middle of the pan. <br></br>\r\n        Add the tomato paste into the empty space and stir for 2-3 minutes, or\r\n        until it darkens in color. <br></br>\r\n        Reduce the heat to medium, as needed.<br></br>\r\n        <br></br>\r\n        Pour in the red wine and deglaze the pan, stirring up any browned bits,\r\n        until the liquid has mostly evaporated and the smell of alcohol has\r\n        dissipated, about 3-4 minutes.<br></br>\r\n        <br></br>\r\n        Add the vegetable broth, along with the lentils, bay leaves, and\r\n        paprika. <br></br>\r\n        Stir to combine and increase the heat to bring to a boil. <br></br>\r\n        Once boiling, reduce heat to maintain a rapid simmer, and simmer until\r\n        the lentils are just tender and most of the liquid has been absorbed,\r\n        25-30 minutes.<br></br>\r\n        <br></br>\r\n        Turn the heat to low. <br></br>\r\n        Add the tahini, tamari, balsamic vinegar, and vegan Worcestershire sauce\r\n        (if using). <br></br>\r\n        Stir until well incorporated. Taste for seasonings, adding a generous\r\n        amount of salt (I used about 1 teaspoon kosher salt) and black pepper.{\" \"}\r\n        <br></br>\r\n        Set aside.<br></br>\r\n        <br></br>\r\n        Make the Mashed Potato Topping. <br></br>\r\n        Peel the Russet potatoes and then rinse them under cold water. <br></br>\r\n        Chop the potatoes into eighths.<br></br>\r\n        <br></br>\r\n        Place the potatoes and cauliflower florets in a large saucepan or Dutch\r\n        oven and add just enough water to cover. <br></br>\r\n        Add 1 1/2 teaspoons kosher salt and stir to combine. <br></br>\r\n        Place the rosemary sprig on top. <br></br>\r\n        Bring to a boil and cook until both potatoes and cauliflower are\r\n        fork-tender and are very soft when poked, about 15 minutes.<br></br>\r\n        <br></br>\r\n        Thoroughly drain the potatoes and cauliflower in a colander and discard\r\n        the rosemary sprig. <br></br>\r\n        For the potatoes, pat them dry with paper towels or a clean dish towel.{\" \"}\r\n        <br></br>\r\n        For the cauliflower, you'll need to squeeze out the excess water or\r\n        it'll be very watery.<br></br>\r\n        <br></br>\r\n        Return the vegetables to the saucepan or transfer them to a large bowl.{\" \"}\r\n        <br></br>\r\n        Add in the softened vegan butter, lite coconut milk, nutritional yeast,\r\n        along with salt and black pepper to taste. <br></br>\r\n        Mash together. <br></br>\r\n        Taste for seasonings, adding more salt as needed.<br></br>\r\n        <br></br>\r\n        Assemble the Shepherd's Pie. <br></br>\r\n        Preheat the oven to 375°F/190°C. <br></br>\r\n        If your skillet is ovenproof and has enough space, leave the Lentil\r\n        Filling in there. <br></br>\r\n        If not, transfer it to a large (3 quart/3 liter) baking dish. <br></br>\r\n        Smooth the Lentil Filling out. <br></br>\r\n        Then, spoon and carefully spread out the Mashed Potato Topping on top,\r\n        covering the whole surface. <br></br>\r\n        For more flavor, drizzle the top with extra virgin olive oil and some\r\n        extra pinches of salt, pepper, and fresh thyme leaves.<br></br>\r\n        <br></br>\r\n        Bake for 20 minutes, or until the lentil filling starts to bubble up.{\" \"}\r\n        <br></br>\r\n        Remove from the oven and turn on your oven's broiler. <br></br>\r\n        Place the pan under the broiler for a few minutes until the crust is\r\n        golden brown. <br></br>\r\n        To finish, drizzle with more olive oil and garnish with fresh parsley,\r\n        if desired.<br></br>\r\n        <br></br>\r\n        Note: if you want the pie to solidify more, allow it to rest for at\r\n        least 20 minutes in the pan.<br></br>\r\n        Store any leftovers in an airtight container in the fridge for up to 4\r\n        days.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function MapuTofu() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Mapu Tofu</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>8 ounces shiitake\r\n        mushrooms <br></br>2 cups water<br></br>\r\n        15 ounce block of soft tofu (not silken)<br></br>\r\n        Salt<br></br>3 tbsp olive oil<br></br>3 small dried hot red peppers\r\n        <br></br>1 tbsp femented black beans<br></br>1 tbsp fermented spicy\r\n        broad bean paste (doubanjiang)<br></br>2 tsp minced garlice<br></br>1\r\n        tbsp grated ginger<br></br>2 tsp soy sauce<br></br>1 tsp taoasted sesame\r\n        oil <br></br>1 tsp finel ground Sichuan pepper <br></br>1 tbsp\r\n        (corn/potato) starch, dissolved in 3 tbsp cold water<br></br>\r\n        1/2 cup slivered scallions (spring onions)<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Remove stems from mushrooms.<br></br>\r\n        Make a light mushroom broth by simmering stems in 2 cups water for 15\r\n        minutes, then strain and reserve broth (discard stems).<br></br>\r\n        Dice mushroom caps and set aside.<br></br>\r\n        <br></br>\r\n        Cut tofu into 1-inch cubes.<br></br>\r\n        Cover with boiling salted water, let steep for 15 minutes, then drain.\r\n        <br></br>\r\n        <br></br>\r\n        Put oil in a wok or wide skillet over medium heat.<br></br>\r\n        Add red peppers, balck beans, and bea paste and cook, stirring until\r\n        fragrant, about 1 minute.<br></br>\r\n        Add garlic and ginger and let sizzle, then add mushrooms, soy sauce,\r\n        sasame oil and Sichuan pepper.<br></br>\r\n        Add 1.5 cups mushroom broth and cook mixture gently for 2 minutes.\r\n        <br></br>\r\n        <br></br>\r\n        Carefully add tofu cubes.<br></br>\r\n        Shake pan to distribute sauce, using a wooden spoon to help.<br></br>\r\n        Try to avoid smashing tofu.<br></br>\r\n        Drizzle in cornstarch mixture, gently swirling pan to incorporate (sauce\r\n        will thicken) and simmer tofu in sauce for 2 minutes more.<br></br>\r\n        Thin with a little mushroom broth if necessary.<br></br>\r\n        Transfer to a low bowl or platter.<br></br>\r\n        Sprinkle with scallions.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function MinnestroneSoup() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Minnestrone Soup</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>3 large carrots,\r\n        roughly chopped<br></br>1 large onion, roughly chopped<br></br>4 celery\r\n        sticks, roughly chopped<br></br>1 tbsp olive oil<br></br>2 garlic\r\n        cloves, crushed<br></br>2 large potatoes, cut into small dice<br></br>2\r\n        tbsp tomato purée<br></br>\r\n        2l vegetable stock<br></br>\r\n        400g can chopped tomatoes<br></br>\r\n        400g can butter or cannellini beans<br></br>\r\n        140g spaghetti, snapped into short lengths<br></br>½ head Savoy cabbage,\r\n        shredded<br></br>\r\n        crusty bread, to serve<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        In a food processor, whizz the carrots, onion and celery into small\r\n        pieces. Heat the oil in a pan, add the processed vegetables, garlic and\r\n        potatoes, then cook over a high heat for 5 mins until softened.<br></br>\r\n        Stir in the tomato purée, stock and tomatoes. Bring to the boil, then\r\n        turn down the heat and simmer, covered, for 10 mins.<br></br>\r\n        Tip in the beans and pasta, then cook for a further 10 mins, adding the\r\n        cabbage for the final 2 mins. Season to taste and serve with crusty\r\n        bread.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function NamKhao() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Nam Khao</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        <b>Nam Khao</b>\r\n        <br></br>\r\n        2.5 cups cooked rice<br></br>2 tbsp Thai red curry paste<br></br>2\r\n        cloves garlic<br></br>1 shallot<br></br>3 lime leaves<br></br>3 tsp\r\n        sugar<br></br>3 tsp light soy sauce<br></br>1 Lettuce<br></br>\r\n        <b>Dressing</b>\r\n        <br></br>2 tbsp light soy sauce<br></br>1 chili<br></br>2 cloves garlic\r\n        <br></br>\r\n        1/2 lime juice<br></br>\r\n        2tbsp sugar<br></br>\r\n        1/4 cup water<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Mix the rice, curry paste, 2 cloves of garlic, shallot, lime leaves,\r\n        sugar, and soy sauce together into small balls.<br></br>\r\n        Shallow fry until crispy.<br></br>\r\n        <br></br>\r\n        Mix the remaining dressing ingredients together, and combine with the\r\n        rice.<br></br>\r\n        <br></br>\r\n        Serve in lettuce wraps.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function PastaBake() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Pasta Bake</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>1 red pepper, seeds\r\n        removed, cut into bite-size chunks<br></br>1 yellow pepper, seeds\r\n        removed, cut into bite-size chunks<br></br>1 aubergine, finely chopped\r\n        <br></br>1 courgette, finely chopped<br></br>1 red onion, sliced\r\n        <br></br>3 tbsp olive oil<br></br>\r\n        150g/5½oz cherry tomatoes, halved<br></br>\r\n        400g tin chopped tomatoes<br></br>2 garlic cloves, crushed<br></br>3\r\n        tbsp roughly chopped basil<br></br>\r\n        300g/10½oz pasta, such as gemelli or penne<br></br>\r\n        150g/5½oz ball mozzarella, drained and finely chopped<br></br>2 tbsp\r\n        pesto<br></br>\r\n        2-3 tbsp finely grated Parmesan, or a vegetarian hard cheese alternative\r\n        <br></br>\r\n        salt and freshly ground black pepper<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Preheat the oven to 190C/170C Fan/Gas 5.<br></br>\r\n        <br></br>\r\n        Put the peppers, aubergine, courgette and onion into a roasting tin or\r\n        deep baking dish and coat in the oil. <br></br>\r\n        Season with salt and pepper and cook for 45 minutes, turning twice,\r\n        until the vegetables are tender and golden brown.<br></br>\r\n        <br></br>\r\n        Add the cherry tomatoes, chopped tomatoes, garlic and basil and cook for\r\n        10-15 minutes.<br></br>\r\n        <br></br>\r\n        Meanwhile, cook the pasta in boiling salted water according to pack\r\n        instructions. <br></br>\r\n        Add 4-6 tablespoons of the pasta cooking water to the vegetables to\r\n        loosen the tomato sauce.<br></br>\r\n        <br></br>\r\n        Drain the pasta and stir into the roasted vegetables. <br></br>\r\n        Stir through the mozzarella and pesto, top with Parmesan and return to\r\n        the oven for another 10 minutes, until the cheese has melted.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function PotatoLentilSoup() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Potato Lentil Soup</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>2 tsp (10 mL) vegetable\r\n        oil<br></br>1 medium onion, diced<br></br>4 cups (960 mL) water<br></br>\r\n        1 vegetable bouillon cube, crushed<br></br>1 cup (192 g) dry red\r\n        lentils, rinsed<br></br>1 medium potato, diced into 1 cm cubes<br></br>1\r\n        Tbsp (7 g) paprika powder<br></br>2 tsp (5 g) onion powder<br></br>2 tsp\r\n        (6 g) garlic powder<br></br>2 tsp (10 mL) balsamic vinegar<br></br>⅛ tsp\r\n        ground black pepper, or more to taste<br></br>1 pinch salt, or more to\r\n        taste<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        To a large pot on medium-high heat, add the oil. When hot, add the onion\r\n        and sauté until golden, about 5 minutes.<br></br>\r\n        <br></br>\r\n        Add in the remaining ingredients. Bring to a boil and then reduce to a\r\n        simmer. <br></br>\r\n        Partially cover with a lid and cook for 15 minutes, or until the lentils\r\n        and potato are cooked through.<br></br>\r\n        <br></br>\r\n        Taste test, adding more salt and pepper if desired and add more water\r\n        depending on how you like the consistency of your soup.<br></br>\r\n        <br></br>\r\n        Serve with yogurt, bread, and any other desired toppings. Enjoy!\r\n        <br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function PuffPastryVegetableTart() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Puff Pastry Vegetable Tart</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>1 x 500 g block of\r\n        ready-made puff pastry<br></br>\r\n        plain flour , for dusting<br></br>4 teaspoons pesto<br></br>1 handful of\r\n        mixed, ripe cherry tomatoes<br></br>8 asparagus spears<br></br>4 baby\r\n        courgettes<br></br>\r\n        2-3 jarred roasted peppers<br></br>½ a bunch of fresh basil<br></br>\r\n        olive oil<br></br>8 black olives , optional<br></br>1 x 100 g ball\r\n        mozzarella<br></br>\r\n        20 g Parmesan cheese , optional<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Turn on the oven to 200ºC/gas 6. Carefully cut the pastry block in half\r\n        with a table knife. Wrap the other half and refrigerate or freeze for\r\n        later.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Dust some flour onto a clean work surface and, using a rolling pin, roll\r\n        out the pastry into a square, measuring 26cm x 26cm. Cut into 4 equal\r\n        squares.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Place the pastry squares on a baking tray, leaving a space between each.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Using the back of a spoon, spread the centre of each square with pesto,\r\n        but don't spread it onto the edges.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Squash the tomatoes into a large mixing bowl, then snap the asparagus\r\n        spears into 3cm pieces. Keep the lovely pointy tips and a little of the\r\n        stalk, but discard the end 3cm.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Using a speed peeler, carefully shred the courgettes into ribbons. Tear\r\n        the roasted peppers into strips and add to the bowl.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Pick the basil leaves, reserving the pretty ones for later. Place the\r\n        large ones in the mixing bowl.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Mix the vegetables together in the bowl, adding a splash of oil. Pile a\r\n        little of the mixture on each pesto-smeared tart and top with two olives\r\n        (if using).\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Break up the mozzarella and place little bits on top of each tart - this\r\n        will make it gooey like a pizza. Grate over some Parmesan (if using).\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Bake for 15 to 20 minutes, until the pastry is golden and the cheese is\r\n        all bubbly.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Once the tarts are ready, allow to cool slightly. Sprinkle with the\r\n        reserved basil leaves and serve with a nice salad for lunch.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function Quesadillas() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Quesadillas</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>1 tbsp sunflower oil\r\n        <br></br>1 onion, finely chopped<br></br>2 garlic cloves, finely chopped\r\n        <br></br>1 tsp cumin seeds<br></br>\r\n        400g can pinto or kidney beans, rinsed and drained<br></br>2 tsp smoked\r\n        paprika<br></br>8 flour tortillas<br></br>\r\n        100g cheddar or gruyère, coarsely grated<br></br>\r\n        Handful coriander leaves<br></br>\r\n        200g tub fresh tomato salsa, plus extra to serve<br></br>\r\n        Soured cream, to serve<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        STEP 1 <br></br>\r\n        Heat the oil in a large frying pan and cook the onion and garlic for 2\r\n        mins. <br></br>\r\n        Add the cumin and cook for 1 min more. <br></br>\r\n        Tip in the beans, paprika and a splash of water.<br></br>\r\n        Using a potato masher, break the beans down as they warm through to make\r\n        a rough purée. <br></br>\r\n        Season generously.<br></br>\r\n        <br></br>\r\n        STEP 2<br></br>\r\n        Spread the refried beans onto 4 of the tortillas and scatter over the\r\n        cheese and coriander.<br></br>\r\n        Spoon over the salsa, then top with the remaining tortillas to make 4\r\n        sandwiches. <br></br>\r\n        Wipe the frying pan with kitchen paper and return to the heat or heat a\r\n        griddle pan. <br></br>\r\n        Cook each sandwich for 1-2 mins on each side until the tortillas are\r\n        crisp and golden and the cheese is melting. <br></br>\r\n        Serve warm, cut into wedges, with extra salsa and soured cream for\r\n        dipping.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function RedKidneyBeanCurry() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Red Kidney Bean Curry</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        250g dried red kidney beans <br></br>1 tbsp butter <br></br>2 tbsps oil{\" \"}\r\n        <br></br>1 onion, chopped <br></br>\r\n        cinnamon <br></br>2 dried bay leaves <br></br>3 garlic cloves <br></br>2\r\n        tsps grated ginger <br></br>\r\n        1/2 tsp tumeric <br></br>1 tsp ground coriander <br></br>2 tsps ground\r\n        cumin <br></br>1 tsp garam masala <br></br>2 dried red chillies{\" \"}\r\n        <br></br>4 tbsp tomato purée <br></br>\r\n        salt and pepper <br></br>\r\n        yoghurt to drizzle (optional)<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Put the red kidney beans in a large saucepan, cover with cold water and\r\n        let soak overnight. <br></br>\r\n        Drain the soaked beans and return to the saucepan with double the amount\r\n        of water. Bring to the boil, then keep boiling for 15 minutes. <br></br>\r\n        <br></br>\r\n        Reduce the heat to medium/low and simmer gently for 1 hour, or until the\r\n        beans are tender. Drain, reserving the cooking liquid. <br></br>\r\n        Heat the butter and oil in a large, heavy-based saucepan and add the\r\n        onion, cinnamon, bay leaves, garlic, and ginger, and stri-fry for 4-5\r\n        minutes.<br></br>\r\n        Stir in the turmeric, ground coriander, garam masala, and chillies.{\" \"}\r\n        <br></br>\r\n        <br></br>\r\n        Add the beans, tomato purée and enough of the reserved cooking liquid to\r\n        make a thick sauce. Bring to the boil and cook for 4-5 minutes, stirring\r\n        often. <br></br>\r\n        Serve, with yoghurt if desired.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function WinterQuinoaSalad() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Winter Quinoa Salad</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>1 cup uncooked quinoa\r\n        <br></br>1 medium sized butternut squash, peeled, seeded and diced\r\n        <br></br>3 teaspoons olive oil<br></br>1 (15 oz) can chickpeas, or 1 1/2\r\n        cups<br></br>4 cups baby kale leaves<br></br>\r\n        1/2 cup dried cranberries or cherries<br></br>\r\n        1/2 cup toasted chopped walnuts<br></br>\r\n        Salt and pepper<br></br>\r\n        <b>Dressing:</b>\r\n        <br></br>\r\n        1/2 cup olive oil<br></br>3 tablespoons apple cider vinegar<br></br>\r\n        1/2 teaspoon dijon mustard<br></br>\r\n        1/2 teaspoon minced garlic<br></br>\r\n        1/2 teaspoon dried oregano<br></br>\r\n        1/2 teaspoon salt<br></br>\r\n        1/4 teaspoon pepper<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Cook quinoa according to package directions. <br></br>\r\n        Once finished cooking, fluff with a fork and add to a large bowl.\r\n        <br></br>\r\n        <br></br>\r\n        Pre-heat oven to 400 degrees F. <br></br>\r\n        On a large sheet pan, toss together the diced butternut squash, olive\r\n        oil and salt and pepper. <br></br>\r\n        Bake until fork tender, about 40 minutes, depending on how big they are.\r\n        <br></br>\r\n        <br></br>\r\n        Add the butternut squash, chickpeas, kale, dried cranberries and walnuts\r\n        to the bowl with quinoa and mix until combined.<br></br>\r\n        <br></br>\r\n        Add all dressing ingredients to a small bowl or jar and whisk until\r\n        combined.<br></br>\r\n        <br></br>\r\n        Pour desired amount of dressing over salad and toss. <br></br>\r\n        Season with salt and pepper to taste.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function VegetableJambalaya() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Vegetable Jambalaya</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        120g/4½oz dried kidney beans, soaked overnight or 400g tin kidney beans,\r\n        drained <br></br>\r\n        olive oil, for frying<br></br>1 onion, finely chopped<br></br>2 garlic\r\n        cloves, crushed<br></br>2 tsp smoked paprika<br></br>1 tsp dried oregano\r\n        <br></br>1 tsp dried thyme<br></br>1 tsp fennel seeds<br></br>\r\n        150g/5½oz brown basmati rice<br></br>1 bay leaf<br></br>\r\n        400g tin chopped tomatoes<br></br>2 vegetable stock cubes, crumbled\r\n        <br></br>\r\n        750ml/26fl oz boiling water<br></br>\r\n        500g/1lb 2oz mixed frozen vegetables<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        If you’re using dried kidney beans, drain the soaked beans in a\r\n        colander, rinse thoroughly, then tip into a saucepan and cover with\r\n        plenty of fresh cold water. Bring to the boil and cook at a rapid boil\r\n        for 10 minutes, then reduce the heat and simmer gently for 1-2 hours,\r\n        until soft. Drain, then set aside to cool.<br></br>\r\n        Heat a splash of oil in a wide casserole over a medium-low heat and fry\r\n        the onion and garlic gently for 5 minutes until soft. Add the smoked\r\n        paprika, herbs and fennel seeds, fry for 30 seconds more, then stir in\r\n        the rice.<br></br>\r\n        Add the bay leaf, cooked (or tinned) beans, chopped tomatoes, stock\r\n        cubes and boiling water and bring to a simmer. Cover with a lid and cook\r\n        for 25 minutes.<br></br>\r\n        Stir in the frozen vegetables, cover with a lid and remove from the\r\n        heat. Leave to stand for 5 minutes or until the vegetables are warmed\r\n        through.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function VegetableEnchiladas() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">VegetableEnchiladas</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>2 red or yellow peppers\r\n        <br></br>2 corn on the cob<br></br>\r\n        Olive oil<br></br>1 x 400g tin black beans<br></br>½ teaspoon ground\r\n        cumin<br></br>6 spring onions<br></br>1 fresh red chilli<br></br>1 bunch\r\n        of fresh coriander , (30g)<br></br>1 lime<br></br>2 cloves of garlic\r\n        <br></br>1 x 400g tin quality plum tomatoes<br></br>8 small corn\r\n        tortillas<br></br>\r\n        70 g mature Cheddar cheese<br></br>\r\n        40 g feta cheese<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Preheat the oven to 200°C/400°F/gas 6.<br></br>\r\n        Place a griddle pan over a high heat to get smoking hot.<br></br>\r\n        <br></br>\r\n        Halve and deseed the peppers, then add to the griddle with the corn.\r\n        <br></br>\r\n        Grill for 8 to 10 minutes, or until charred and bar-marked, turning\r\n        occasionally.<br></br>\r\n        Remove to a plate to cool.<br></br>\r\n        <br></br>\r\n        Heat 1 tablespoon of oil in a medium frying pan over a medium heat.\r\n        <br></br>\r\n        Drain and add the black beans, stir in the cumin and fry for 4 to 5\r\n        minutes, or until crisp, stirring occasionally.<br></br>\r\n        <br></br>\r\n        Once cooled, cut the corn kernels away from the cob and chop the peppers\r\n        into 1.5cm chunks. <br></br>\r\n        Reserving 1 tablespoon of the corn, add to a large bowl with the peppers\r\n        and black beans.<br></br>\r\n        <br></br>\r\n        Trim, finely slice and add the spring onions, reserving a small handful\r\n        to one side. <br></br>\r\n        Deseed, finely slice and add the chilli. <br></br>\r\n        Pick and add most of the coriander leaves, reserving the stalks.\r\n        <br></br>\r\n        <br></br>\r\n        Squeeze in the lime juice and season well with sea salt and black\r\n        pepper.<br></br>\r\n        <br></br>\r\n        Wipe the frying pan clean with kitchen paper, then return to a medium\r\n        heat with 1 tablespoon of oil.<br></br>\r\n        <br></br>\r\n        Peel and finely slice the garlic and finely slice the coriander stalks,\r\n        then add to the pan for 1 minute.<br></br>\r\n        <br></br>\r\n        Stir in the tomatoes and ½ a tin’s worth of hot water, breaking up the\r\n        tomatoes with the back of a wooden spoon. <br></br>\r\n        Bring to the boil, reduce the heat to medium-low and simmer for 5\r\n        minutes, or until thickened and reduced.<br></br>\r\n        <br></br>\r\n        Season to taste, carefully transfer to a liquidiser and blitz until\r\n        smooth.<br></br>\r\n        <br></br>\r\n        Divide the vegetable mixture between 8 corn tortillas and roll them up.{\" \"}\r\n        <br></br>\r\n        Line them up in a snug-fitting baking dish (roughly 20cm x 30cm), with\r\n        the scruffy ends tucked underneath.<br></br>\r\n        <br></br>\r\n        Pour over the tomato sauce, coarsely grate the Cheddar on top and\r\n        crumble over the feta.<br></br>\r\n        Drizzle with a little oil, then pop in the hot oven for 25 minutes, or\r\n        until bubbling and golden.<br></br>\r\n        <br></br>\r\n        Serve scattered with the reserved corn, spring onion and coriander\r\n        leaves. <br></br>\r\n        Delicious with a crisp green salad.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function SweetPotatoTortilla() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Falafels</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>3 sweet potatoes\r\n        <br></br>2 tbsp olive oil<br></br>\r\n        100g baby spinach<br></br>6 large eggs<br></br>\r\n        100g feta, crumbled<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Pierce the potatoes a few times on each side. Microwave on high for 5-8\r\n        mins until soft, then set aside to cool a little.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Heat the oil in a 20cm ovenproof frying pan and wilt the spinach for a\r\n        minute or two (you might have to do this in batches). Cut each potato in\r\n        half lengthways and use a spoon to scoop out the flesh, keeping it in\r\n        big chunks. Whisk the eggs.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Add the sweet potato to the pan and stir to combine with the spinach -\r\n        don't break it up too much. Pour in the egg and swirl around so it fills\r\n        any gaps in the pan. Scatter over the feta and cook for 4-5 mins over a\r\n        low heat until the bottom and sides are set.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Place under the grill for 1-2 mins to cook the top - poke a knife into\r\n        the centre to ensure it's cooked through. Cool before slicing into\r\n        wedges. Will keep chilled for up to a day.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function SweetPotatoChilli() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Sweet Potato Chilli</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>6 Sweet Potatoes{\" \"}\r\n        <br></br>1 tsp cumin seeds <br></br>\r\n        95g jar Chipotle chilli paste<br></br>\r\n        500g chopped mixed veg <br></br>\r\n        3x400g tins black beans<br></br>\r\n        3x400g tins plum tomatoes<br></br>\r\n        60g feta cheese<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Preheat the oven to 180C. Put a large deep casserole pan on a medium\r\n        high heat.<br></br>\r\n        Peel the sweet potatoes, placing them in the pan as you go. add 1tbsp of\r\n        oil and fry for 5 minutes, turning occasionally, until starting to get\r\n        golden.<br></br>\r\n        Push to one side, add the cumin, let it sizzle, then spoon in the jar of\r\n        chipotle chilli paste and add 2 jars' worth of water.<br></br>\r\n        Tip in the chopped mix veg.<br></br>\r\n        Bake for one hour<br></br>\r\n        <br></br>\r\n        Remove from the oven and add the beans, juice and all, then the\r\n        tomatoes, scrunching them in through clean hands, along with 1 tin's\r\n        worth of water.<br></br>\r\n        Stir well, the roast for another hour, or until the sweet potatoes are\r\n        tender.<br></br>\r\n        Season to perfection, then crumble over the feta to serve.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function VeganKofta() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Vegan Kofta</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        <b>Kofta</b>\r\n        <br></br>\r\n        16 Ounces Vegan ground beef <br></br>\r\n        1/2 a Red onion, grated<br></br>4 Cloves Garlic, grated<br></br>1\r\n        Tablespoon Fresh dill, chopped<br></br>1 Tablespoon Fresh mint, chopped\r\n        <br></br>1 teaspoon Cumin<br></br>1 teaspoon Oregano<br></br>\r\n        1/2 teaspoon Cinnamon<br></br>\r\n        1/2 teaspoon Salt<br></br>\r\n        1/4 teaspoon Black pepper<br></br>6 Wooden skewers, soaked<br></br>\r\n        <br></br>\r\n        <b>Tzatziki Sauce</b>\r\n        <br></br>1 Cup Vegan Greek style yogurt<br></br>1 Cup Grated cucumber\r\n        <br></br>1 Tablespoons Fresh dill<br></br>1 Tablespoons Fresh Mint\r\n        <br></br>2 Cloves Garlic, grated<br></br>1 Tablespoon Lemon juice\r\n        <br></br>\r\n        1/2 teaspoon Lemon zest<br></br>\r\n        1/2 teaspoon Salt<br></br>\r\n        1/4 teaspoon Black pepper<br></br>1 teaspoon Za'atar seasoning(optional)\r\n        <br></br>\r\n        <br></br>\r\n        <b>For Serving</b>\r\n        <br></br>\r\n        Flatbread<br></br>\r\n        Lettuce<br></br>\r\n        Tomato<br></br>\r\n        Hummus<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Preheat the oven to 400 degrees(F).<br></br>\r\n        In a large mixing bowl, add the vegan ground beef, grated onion and\r\n        garlic, the fresh herbs and all the spices.<br></br>\r\n        Mix everything together, so it is completely combined.<br></br>\r\n        <br></br>\r\n        Divide the kofta mixture into 6 equal portions.<br></br>\r\n        Take one portion and wrap it around one of the skewers that you soaked.\r\n        <br></br>\r\n        Pressing around evenly so that is a cylinder up the skewer.<br></br>\r\n        Place on a baking sheet lined with parchment paper or sprayed with\r\n        non-stick spray.<br></br>\r\n        <br></br>\r\n        Repeat with the remaining kofta mixture, placing all the skewers on the\r\n        sheet pan.<br></br>\r\n        Bake for 10-12 minutes or until they are nice and firm.<br></br>\r\n        <br></br>\r\n        While the kofta bakes, make the tzatziki. Add all the tzatziki\r\n        ingredients to a medium sized mixing bowl and whisk to combine. Set in\r\n        the fridge until ready to use.<br></br>\r\n        Once the kofta has baked, remove from the oven and grill either on a\r\n        grill pan or a grill for 1-2 minutes on each side, just to brown up. Or\r\n        you can serve them as is, if you don't have a grill or grill pan.\r\n        <br></br>\r\n        Serve immediately with the tzatziki sauce, flatbread and veggies if\r\n        desired.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function SweetTofu() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Sweet Tofu</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        <b>Serves 4</b>\r\n        <br></br>2 cups vegetable oil for frying <br></br>\r\n        14 ounces to 1 pound firm or medium firm tofu, cut into bite size pieces\r\n        <br></br>¼ cup potato starch <br></br>1 tablespoon pumpkin seeds\r\n        (optional) <br></br>\r\n        <br></br>\r\n        <b>For seasoning sauce</b> <br></br>¼ cup ketchup <br></br>¼ cup rice\r\n        syrup <br></br>3 tablespoons gochujang (Korean hot pepper paste)\r\n        <br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Combine all the seasoning sauce ingredients in a skillet. Heat over\r\n        medium high heat, stirring for about 1 to 2 minutes until bubbling.\r\n        Remove from the heat and set the skillet aside. We'll reheat this just\r\n        before serving. <br></br>\r\n        <br></br>\r\n        <b>Coat the tofu</b> <br></br>\r\n        Cut the tofu into 1 x 1½ inch bite sized pieces. Pat dry with kitchen\r\n        towel or paper towel. <br></br>\r\n        Gently put the tofu into a plastic bag and add the potato starch. Seal\r\n        the bag and gently turn it over until the tofu is well and evenly coated\r\n        with the starch. <br></br>\r\n        Remove each piece from the bag individually and transfer to a large\r\n        plate or a cutting board lined with plastic wrap, leaving some space\r\n        between the pieces.<br></br>\r\n        <br></br>\r\n        <b>Fry the tofu </b>\r\n        <br></br>\r\n        Heat the oil in a skillet for 5 minutes, until it reaches 330-340°F.\r\n        Carefully add the tofu pieces one at a time to the hot oil. Turn the\r\n        heat down to medium and let the tofu cook for about about 2 to 3\r\n        minutes, until the bottom turns light brown and the surface is a little\r\n        crispy .<br></br>\r\n        Turn the tofu pieces with tongs or a slotted spoon—they should be firm\r\n        enough to turn without breaking—and fry for another 2 to 3 minutes,\r\n        occasionally turning so that all sides turn light brown and crispy.\r\n        Remove from the skillet and set in a wire mesh strainer set over a bowl.\r\n        <br></br>\r\n        <br></br>\r\n        <b>… and then time to double-fry!</b>\r\n        <br></br>\r\n        Reheat the oil for 1 minute over medium-high heat and fry all the tofu\r\n        again for 3 to 4 minutes, rotating and turning them over with tongs or\r\n        long wooden chopsticks, until all sides are golden brown and crunchy.\r\n        <br></br>\r\n        <br></br>\r\n        <b>Handle pumpkin seeds</b>\r\n        <br></br>\r\n        Transfer the tofu to the strainer set over a bowl to drain the excess\r\n        oil.<br></br>\r\n        If you use pumpkin seeds, put them into a slotted spoon and dip them\r\n        into the hot oil to fry them for just 10 seconds or so. Transfer the\r\n        seeds to a small bowl and turn off the heat.<br></br>\r\n        <br></br>\r\n        <b>Coat and serve</b>\r\n        <br></br>\r\n        Reheat the sauce in the skillet until bubbling. Add the fried tofu and\r\n        gently mix all together until they are well coated.<br></br>\r\n        Transfer to a plate and sprinkle the pumpkin seeds over top. Serve as a\r\n        side dish for rice.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function SpringPilau() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Spring Pilau</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        350g basmati rice <br></br>\r\n        600ml vegan vegetable stock<br></br>3 tbsp olive oil<br></br>2 red\r\n        onions<br></br>4 cloves of garlic<br></br>2 green finger chillies\r\n        <br></br>1 medium fennel bulb<br></br>\r\n        250g asparagus<br></br>\r\n        200g (frozen) mixed peas and broad beans<br></br>\r\n        1.5 tsp ground cumin<br></br>\r\n        1.5 tsp garam masala<br></br>\r\n        3/4 tsp salt<br></br>\r\n        Handful fresh mint<br></br>\r\n        Handful fresh dill<br></br>1 lemon<br></br>\r\n        <br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Wash the rice in a few changes of cold water until it runs clear, then\r\n        leave to soak in cold water for 20 minutes. <br></br>\r\n        Drain the rice, put into a large lidded saucepan and pour over the\r\n        stock. <br></br>\r\n        Bring to the boil, then cover the pan, turn the heat down to a whisper\r\n        and leave to cook for 10 to 12 minutes.<br></br>\r\n        Take off the heat and leave the rice, still covered, to steam through\r\n        until needed.<br></br>\r\n        <br></br>\r\n        Meanwhile, heat the oil in a large, lidded pan on a medium flame.\r\n        <br></br>\r\n        Once hot, add the onions and cook for 6 to 8 minutes, until translucent\r\n        and softening but not yet coloured.<br></br>\r\n        Add the garlic and chillies, cook for another 2 minutes, then stir in\r\n        the fennel and a couple of tablespoons of water, and ccover the pan.\r\n        <br></br>\r\n        Leave to cook for 8 minutes, until soft, then add the asparagus, peas,\r\n        broad beans, cumin, garam masala, and salt.<br></br>\r\n        Stir, c over again, cook for 3 to 5 minutes more, then take off the\r\n        heat.<br></br>\r\n        <br></br>\r\n        Finely chop the herbs and fold them and the rice into the vegetable\r\n        mixture - you might need to break up any clumps of rice delicately with\r\n        your hands - then transfer to a serving dish and serve with wedges of\r\n        lemon on the side.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function SpinachPaneerPulao() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Spinach Paneer Pulao</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>2 tbsp oil<br></br>\r\n        220g pack paneer, cut into 1.5cm slices<br></br>1 onion, thinly sliced\r\n        <br></br>2 garlic cloves, crushed<br></br>\r\n        Thumb-size piece ginger, grated<br></br>1 tsp cumin seeds<br></br>1 tsp\r\n        turmeric<br></br>1 tsp garam masala<br></br>1 tsp chilli flakes<br></br>\r\n        2 large tomatoes, chopped<br></br>\r\n        250g spinach<br></br>\r\n        250g basmati rice<br></br>\r\n        600ml vegetable stock<br></br>1 tbsp chopped coriander<br></br>\r\n        Yogurt and mango chutney to serve<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Heat the oil in a large, lidded, non-stick frying pan or shallow\r\n        casserole over a medium heat.<br></br>\r\n        Add the paneer and fry for 2-3 minutes until a deep golden brown. Set\r\n        aside.<br></br>\r\n        Add the onion and a pinch of salt and fry for 5 minutes.<br></br>\r\n        Add the garlic, ginger, cumin, turmeric, garam masala and chilli flakes,\r\n        then cook for 1 minute.<br></br>\r\n        Stir in the tomatoes and spinach, then cook for 5 minutes.<br></br>\r\n        <br></br>\r\n        Rinse the rice in a sieve in cold water, changing the water 2-3 times.\r\n        <br></br>\r\n        Add the rice to the pan, stir well, then pour in the stock.<br></br>\r\n        Cover with a lid and cook over a low-medium heat for 20 minutes or until\r\n        the rice is cooked.<br></br>\r\n        Top with the paneer, sprinkle with coriander and serve with yogurt and\r\n        mango chutney.<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function SausagePotatoKaleSoup() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Sausage Potato Kale Soup</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>2 tablespoons Extra\r\n        Virgin Olive Oil<br></br>4 Italian sausages (spicy, medium or mild),\r\n        casings removed and discarded<br></br>2 celery stalks diced<br></br>2\r\n        carrots diced<br></br>1 leek thinly sliced, substitute 1 yellow onion\r\n        <br></br>2 cloves garlic thinly sliced<br></br>\r\n        1.5 teaspoon sweet Spanish paprika<br></br>1 teaspoon dried chili flakes\r\n        optional<br></br>\r\n        1.5 quart chicken stock<br></br>5 small red potatoes cubed<br></br>2 bay\r\n        leaves<br></br>1 tablespoon fresh thyme leaves<br></br>1 head kale\r\n        roughly chopped into ribbons<br></br>2 tablespoons roughly chopped fresh\r\n        parsley<br></br>\r\n        Kosher salt and black pepper to taste<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        Preheat a large stock pot or Dutch oven over medium heat. <br></br>\r\n        Using a paring knife, make a shallow incision along the length of the\r\n        sausage. <br></br>\r\n        Peel back the casings and discard them.<br></br>\r\n        <br></br>\r\n        Add the olive oil to the pot and heat until shimmering. <br></br>\r\n        Add the sausage and break it apart into 1\" pieces with a wooden spoon.{\" \"}\r\n        <br></br>\r\n        Cook, stirring occasionally, until browned all over, around 8 minutes.{\" \"}\r\n        <br></br>\r\n        Reserve the fat in the pan, transfer the sausage to a bowl and set\r\n        aside.<br></br>\r\n        <br></br>\r\n        Add the celery, carrots and leeks and season with a pinch of salt.{\" \"}\r\n        <br></br>\r\n        Cook, stirring, until the vegetables are soft and translucent, 10-12\r\n        minutes. <br></br>\r\n        Add the garlic and cook, stirring, 60 seconds. <br></br>\r\n        Add the paprika and chile flakes, if using, and cook, stirring, 60\r\n        seconds.<br></br>\r\n        <br></br>\r\n        Add the stock, potatoes, browned sausage, bay leaves and thyme and stir\r\n        to combine. <br></br>\r\n        Bring the soup to a simmer, cover with a lid, reduce the heat to medium\r\n        and cook until the potatoes are fork-tender, 12 to 14 minutes.<br></br>\r\n        <br></br>\r\n        Add the kale and cook 3-4 minutes or until wilted to desired texture.{\" \"}\r\n        <br></br>\r\n        Taste the soup for seasoning and adjust with salt and pepper as desired.{\" \"}\r\n        <br></br>\r\n        If the soup is too salty or thick, add ½ cup of water at a time until\r\n        you reach your desired consistency and taste.<br></br>\r\n        <br></br>\r\n        Add the parsley and stir to combine. Ladle the soup into individual\r\n        serving bowls and enjoy!<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function Samosas() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Samosas</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>2 cups (250 g)\r\n        all-purpose flour<br></br>1 tsp salt<br></br>⅓ cup (100 ml) + 1 tbsp\r\n        cold water<br></br>4 tbsp vegetable oil<br></br>\r\n        <b>Filling:</b>\r\n        <br></br>\r\n        10.5 oz (300 g) russet potatoes peeled and diced<br></br>1 tbsp oil for\r\n        frying<br></br>1 onion chopped<br></br>2 garlic cloves minced<br></br>2\r\n        tsp ginger grated<br></br>1 tbsp curry powder I used garam masala\r\n        <br></br>1 tsp cumin ground<br></br>1 tsp paprika powder or chili powder\r\n        to taste<br></br>1 tsp turmeric optional<br></br>½ cup (80 g) peas\r\n        frozen and thawed<br></br>½ (80 g) red bell pepper or green peppers,\r\n        finely chopped<br></br>1 tsp salt or to taste<br></br>\r\n        black pepper to taste<br></br>\r\n        <b>For frying (or bake them, *see notes)</b>\r\n        <br></br>2 cups (480 ml) of vegetable oil<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        <b>Dough:</b>\r\n        <br></br>\r\n        Whisk the flour and salt together in a bowl.<br></br>\r\n        Pour in the cold water and oil, then mix with chopsticks until the flour\r\n        has absorbed the liquid.<br></br>\r\n        Mix the dough bits together with your hands, then transfer to a working\r\n        surface.<br></br>\r\n        Knead for 3-4 minutes until a smooth and soft dough forms (but avoid\r\n        overworking).<br></br>\r\n        Finally, form the dough into two balls, wrap each tightly in cling film\r\n        and refrigerate for one hour.<br></br>\r\n        <br></br>\r\n        <b>Filling:</b>\r\n        <br></br>\r\n        In the meantime, place the diced potatoes in a pot of salted water.{\" \"}\r\n        <br></br>\r\n        Drain and allow excess moisture to evaporate, then place in a bowl, and\r\n        mash thoroughly with a potato masher or fork. <br></br>\r\n        Bring to a boil and cook for about 10 minutes, or until fork-tender.{\" \"}\r\n        <br></br>\r\n        Set aside to cool completely.<br></br>\r\n        <br></br>\r\n        In a large pan, heat one tbsp of oil. Add the onions and sauté for 2-3\r\n        minutes until lightly browned.\r\n        <br></br>Add the garlic, ginger, curry powder, cumin, paprika powder,\r\n        and turmeric.\r\n        <br></br>Sauté for another 30 seconds to develop flavors. Set aside.\r\n        <br></br>\r\n        <br></br>\r\n        Once the potatoes have cooled to room temperature, add in the onion\r\n        mixture, chopped bell peppers, and thawed peas. <br></br>\r\n        Sprinkle salt and pepper to taste, stir to combine, and set aside.\r\n        <br></br>\r\n        <br></br>\r\n        <b>Fold samosas:</b>\r\n        <br></br>\r\n        After the chill time, remove one portion of the dough from the fridge.{\" \"}\r\n        <br></br>\r\n        Divide it into 8 pieces and form each piece into a ball. <br></br>\r\n        Work with one small dough ball at a time and cover the rest with a damp\r\n        cloth to prevent it from drying out.<br></br>\r\n        <br></br>\r\n        On a lightly floured work surface, roll out one small dough ball to a\r\n        6-inch (15 cm) circle. Cut it in half to form two half-moon shapes.\r\n        <br></br>\r\n        Take approx. 2 tbsp of the filling and press it together into a triangle\r\n        shape. <br></br>\r\n        Then place it onto the half-moon dough shaped dough you just cut (see\r\n        step-by-step photos above). <br></br>\r\n        Brush the outer edges with water, then fold one side of the dough over\r\n        and around the filling to create a triangle/cone shape. <br></br>\r\n        Pinch the edges together, make sure your samosas are well sealed. Place\r\n        on a wooden board (be sure to leave enough space between each samosa to\r\n        prevent them from sticking together) while you prepare the rest.\r\n        <br></br>\r\n        When all balls are wrapped into samosas, remove the second portion of\r\n        the dough from the refrigerator, and continue this process to make more\r\n        samosas.<br></br>\r\n        <br></br>\r\n        <b>Cook samosas:</b>\r\n        <br></br>\r\n        Now you can fry or bake them. To fry, heat around 2 cups of oil in a\r\n        deep pot or pan to 320-338°F (160-170°C). <br></br>\r\n        Once hot, carefully drop the samosas and fry in batches until the\r\n        samosas are golden-browned and crispy, turning occasionally (make sure\r\n        not to overcrowd the pot.)<br></br>\r\n        Remove from the pot and transfer them to a plate lined with paper towels\r\n        (this will get rid of excess oil).<br></br>\r\n        Finally, sprinkle the samosa with sesame seeds and serve with vegan\r\n        raita, guacamole, or any dip of your choice. Enjoy!<br></br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport function RedLentilCurry() {\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h1\">Red Lentil Curry</Typography>\r\n\r\n      <Typography>\r\n        <Typography variant=\"h3\">Ingredients</Typography>\r\n        <b>For the Red Lentil Curry:</b>\r\n        <br></br>2 tablespoons coconut oil (or olive oil)<br></br>1 large onion,\r\n        peeled and chopped<br></br>2 cups diced carrots<br></br>\r\n        3-4 cloves garlic, minced<br></br>2 tablespoons fresh grated ginger\r\n        <br></br>\r\n        2+ tablespoons thai red curry paste<br></br>2 teaspoons ground cumin\r\n        <br></br>1 teaspoon salt<br></br>\r\n        16 ounce dried red lentils<br></br>6 cups vegetable broth<br></br>\r\n        15 ounce can crushed tomatoes<br></br>\r\n        14 ounce can unsweetened coconut milk<br></br>\r\n        <b>For the Pickled Onions:</b>\r\n        <br></br>\r\n        1/2 red onion, sliced<br></br>\r\n        1/2 cup water<br></br>\r\n        1/4 cup apple cider vinegar<br></br>1 tablespoon palm sugar (or your\r\n        preferred sweetener)<br></br>\r\n        1/2 teaspoon salt<br></br>\r\n        <b>Additional Garnishes:</b>\r\n        <br></br>1 cup cashews<br></br>1 cup cilantro<br></br>\r\n      </Typography>\r\n\r\n      <Typography>\r\n        For the Pickled Onions: In a small microwave-safe bowl mix the water,\r\n        vinegar, sugar, and salt. Microwave for 60-90 seconds to dissolve the\r\n        sugar. Slice the onions thin. Then mix them into the pickling water.\r\n        Allow them to soak as you make the lentil curry.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        For the Red Lentil Curry: Chop the onions, carrots, garlic and grate the\r\n        ginger. Set a large 6-8 quart pot over medium heat. Add the oil.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Once hot, add the onions, carrots, garlic, ginger, 2-5 tablespoons curry\r\n        paste, cumin, and salt. Saute until the onions are soft and tender. *If\r\n        your curry paste tastes/smells very spicy, add only 2 tablespoons. You\r\n        can always add more later.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Pour in the dried red lentils, chicken broth, crushed tomatoes, and\r\n        coconut milk. Stir well. Simmer for 20 minutes, stirring every 3-5\r\n        minutes, so the lentils don't stick to the bottom of the pot.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        If the liquid seems to absorb before the lentils are fully cooked, add\r\n        some water to loosen up the mixture. After 20 minutes, the lentil curry\r\n        should be soft and thick.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n        Drain the pickled onions. Serve the lentil curry warm, on its own, with\r\n        rice, or with baby spinach. Top with pickled onions, cashews, and\r\n        cilantro leaves.\r\n        <br>\r\n          <br></br>\r\n        </br>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\n\nimport \"./App.css\";\nimport {\n  AppBar,\n  Box,\n  Collapse,\n  CssBaseline,\n  Drawer,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  ThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\n\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { CommanderDecklistsPage } from \"./Components/Magic/CommanderDecklistsPage\";\nimport { RecipePage } from \"./Components/RecipePage\";\nimport { Link } from \"react-router-dom\";\nimport { ModernDecklistsPage } from \"./Components/Magic/ModernDecklistsPage\";\nimport { MainPage } from \"./Components/MainPage\";\nimport { HistoryPage } from \"./Components/Santryl/HistoryPage\";\nimport { DndRulesPage } from \"./Components/Dnd/DndRules\";\nimport { theme } from \"./Components/theme\";\nimport { FaithPage } from \"./Components/Santryl/Faith\";\nimport { BtvRulesPage } from \"./Components/Btv/BtvRules\";\nimport { AubergineMeatballs } from \"./Components/Recipes/AubergineMeatballs\";\nimport { BlackBeanBurgers } from \"./Components/Recipes/BlackBeanBurgers\";\nimport { ButternutSquashPasta } from \"./Components/Recipes/ButternutSquashPasta\";\nimport { CreamyMushroomPasta } from \"./Components/Recipes/CreamyMushroomPasta\";\nimport { DoubleBeanAndRoastedPepperChilli } from \"./Components/Recipes/DoubleBeanAndRoastedPepperChilli\";\nimport { DutchBoerenKoolStamppot } from \"./Components/Recipes/DutchBoerenKoolStamppot\";\nimport { Falafels } from \"./Components/Recipes/Falafels\";\nimport { GreenRisotto } from \"./Components/Recipes/GreenRisotto\";\nimport { HalloumiSpinachCurry } from \"./Components/Recipes/HalloumiSpinachCurry\";\nimport { HarissaPasta } from \"./Components/Recipes/HarissaPasta\";\nimport { HeartyLentilStew } from \"./Components/Recipes/HeartyLentilStew\";\nimport { JewelledMoutzentra } from \"./Components/Recipes/JewelledMoutzentra\";\nimport { KungPaoCauliflower } from \"./Components/Recipes/KungPaoCauliflower\";\nimport { LentilShepherdsPie } from \"./Components/Recipes/LentilShepherdsPie\";\nimport { MapuTofu } from \"./Components/Recipes/MapuTofu\";\nimport { MinnestroneSoup } from \"./Components/Recipes/MinnestroneSoup\";\nimport { NamKhao } from \"./Components/Recipes/NamKhao\";\nimport { PastaBake } from \"./Components/Recipes/PastaBake\";\nimport { PotatoLentilSoup } from \"./Components/Recipes/PotatoLentilSoup\";\nimport { PuffPastryVegetableTart } from \"./Components/Recipes/PuffPastryVegetableTart\";\nimport { Quesadillas } from \"./Components/Recipes/Quesadillas\";\nimport { RedKidneyBeanCurry } from \"./Components/Recipes/RedKidneyBeanCurry\";\nimport { WinterQuinoaSalad } from \"./Components/Recipes/WinterQuinoaSalad\";\nimport { VegetableJambalaya } from \"./Components/Recipes/VegetableJambalaya\";\nimport { VegetableEnchiladas } from \"./Components/Recipes/VegetableEnchiladas\";\nimport { SweetPotatoTortilla } from \"./Components/Recipes/SweetPotatoTortilla\";\nimport { SweetPotatoChilli } from \"./Components/Recipes/SweetPotatoChilli\";\nimport { VeganKofta } from \"./Components/Recipes/VeganKofta\";\nimport { SweetTofu } from \"./Components/Recipes/SweetTofu\";\nimport { SpringPilau } from \"./Components/Recipes/SpringPilau\";\nimport { SpinachPaneerPulao } from \"./Components/Recipes/SpinachPaneerPulao\";\nimport { SausagePotatoKaleSoup } from \"./Components/Recipes/SausagePotatoKaleSoup\";\nimport { Samosas } from \"./Components/Recipes/Samosas\";\nimport { RedLentilCurry } from \"./Components/Recipes/RedLentilCurry\";\n\nfunction App() {\n  const [openGames, setOpenGames] = React.useState(false);\n  const [openMagic, setMagic] = React.useState(false);\n  const [openTTRPG, setTTRPG] = React.useState(false);\n  const [openDnd, setDnd] = React.useState(false);\n  const [openBtv, setBtv] = React.useState(false);\n  const [openSantryl, setSantryl] = React.useState(false);\n\n  const changeBtv = () => {\n    setBtv(!openBtv);\n  };\n\n  const changeDnd = () => {\n    setDnd(!openDnd);\n  };\n\n  const changeSantryl = () => {\n    setSantryl(!openSantryl);\n  };\n\n  const changeTTRPG = () => {\n    setTTRPG(!openTTRPG);\n  };\n\n  const changeOpenGames = () => {\n    setOpenGames(!openGames);\n  };\n\n  const changeOpenMagic = () => {\n    setMagic(!openMagic);\n  };\n  useEffect(() => {\n    document.title = \"Morx's Stuff :)\";\n  }, []);\n  return (\n    <BrowserRouter>\n      <Box display={\"flex\"}>\n        <CssBaseline />\n\n        <ThemeProvider theme={theme}>\n          <AppBar\n            position=\"fixed\"\n            sx={{\n              width: `calc(100% - ${20}vw)`,\n              ml: `${20}vw`,\n            }}\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                This is always here wow\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            sx={{\n              width: \"20vw\",\n              flexShrink: 0,\n              \"& .MuiDrawer-paper\": {\n                width: \"20vw\",\n                minHeight: \"100vh\",\n                boxSizing: \"border-box\",\n              },\n            }}\n            variant=\"permanent\"\n            anchor=\"left\"\n          >\n            <Toolbar>\n              <Typography\n                sx={{ paddingLeft: \"10%\" }}\n                variant=\"h6\"\n                noWrap\n                component=\"div\"\n              >\n                What we doin' now?\n              </Typography>\n            </Toolbar>\n            <List sx={{ paddingLeft: \"4%\" }}>\n              {/* Recipes */}\n              <ListItemButton to={\"/Recipes\"} component={Link}>\n                <Typography>Recipes</Typography>\n              </ListItemButton>\n\n              {/* Games */}\n              <ListItemButton onClick={changeOpenGames}>\n                <Typography>Games</Typography>\n                {openGames ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openGames}>\n                <List>\n                  {[\"Forty Frogs\", \"Shapez\"].map((text, index) => (\n                    <ListItem key={text} disablePadding>\n                      <ListItemButton>\n                        <ListItemIcon></ListItemIcon>\n                        <ListItemText>\n                          <Typography>{text}</Typography>\n                        </ListItemText>\n                      </ListItemButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </Collapse>\n\n              {/* TTRPG */}\n              <ListItemButton onClick={changeTTRPG}>\n                <Typography>TTRPG Info </Typography>\n                {openTTRPG ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openTTRPG}>\n                <List>\n                  <ListItem sx={{ paddingLeft: \"1vw\" }}>\n                    <ListItemButton onClick={changeSantryl}>\n                      <Typography>Santryl</Typography>\n                      {openSantryl ? <ExpandLess /> : <ExpandMore />}\n                    </ListItemButton>\n                  </ListItem>\n                  <Collapse in={openSantryl}>\n                    <List>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton\n                          to={\"/Santryl/History\"}\n                          component={Link}\n                        >\n                          <Typography>History</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Santryl/Faith\"} component={Link}>\n                          <Typography> Faith and Religion</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Santryl/Gallia\"} component={Link}>\n                          <Typography>Gallia</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton\n                          to={\"/Santryl/UnvariantEmpire\"}\n                          component={Link}\n                        >\n                          <Typography>Unvariant Empire</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton\n                          to={\"/Santryl/CroakingConclave\"}\n                          component={Link}\n                        >\n                          <Typography>Croaking Conclave</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton\n                          to={\"/Santryl/HighMount\"}\n                          component={Link}\n                        >\n                          <Typography>High Mount</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton\n                          to={\"/Santryl/TheGoblins\"}\n                          component={Link}\n                        >\n                          <Typography>The Goblins</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                    </List>\n                  </Collapse>\n\n                  <ListItem sx={{ paddingLeft: \"1vw\" }} onClick={changeDnd}>\n                    <ListItemButton>\n                      <Typography>D&D 5e Homebrew</Typography>\n                      {openDnd ? <ExpandLess /> : <ExpandMore />}\n                    </ListItemButton>\n                  </ListItem>\n                  <Collapse in={openDnd}>\n                    <List>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Dnd/Rules\"} component={Link}>\n                          <Typography>Rule Differences</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton\n                          to={\"/Dnd/Backgrounds\"}\n                          component={Link}\n                        >\n                          <Typography>Backgrounds</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Dnd/Race\"} component={Link}>\n                          <Typography>Race</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Dnd/Feats\"} component={Link}>\n                          <Typography>Feats</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Dnd/Classes\"} component={Link}>\n                          <Typography>Classes</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Dnd/Spells\"} component={Link}>\n                          <Typography>Spells</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Dnd/Factions\"} component={Link}>\n                          <Typography>Factions</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Dnd/Treasure\"} component={Link}>\n                          <Typography>Treasure</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Dnd/Bestiary\"} component={Link}>\n                          <Typography>Bestiary</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                    </List>\n                  </Collapse>\n\n                  <ListItem sx={{ paddingLeft: \"1vw\" }} onClick={changeBtv}>\n                    <ListItemButton>\n                      <Typography>Beyond The Veil</Typography>\n                      {openBtv ? <ExpandLess /> : <ExpandMore />}\n                    </ListItemButton>\n                  </ListItem>\n                  <Collapse in={openBtv}>\n                    <List>\n                      <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                        <ListItemButton to={\"/Btv/Rules\"} component={Link}>\n                          <Typography>Basic Rules</Typography>\n                        </ListItemButton>\n                      </ListItem>\n                    </List>\n                  </Collapse>\n                </List>\n              </Collapse>\n\n              {/* Magic */}\n              <ListItemButton onClick={changeOpenMagic}>\n                <Typography>Magic Decks</Typography>\n                {openMagic ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openMagic}>\n                <List>\n                  <ListItem sx={{ paddingLeft: \"1vw\" }}>\n                    <ListItemButton to={\"/Magic/Commander\"} component={Link}>\n                      <Typography>Commander</Typography>\n                    </ListItemButton>\n                  </ListItem>\n\n                  <ListItem sx={{ paddingLeft: \"1vw\" }}>\n                    <ListItemButton to={\"/Magic/Modern\"} component={Link}>\n                      <Typography>Modern</Typography>\n                    </ListItemButton>\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Drawer>\n          <Box component=\"main\" sx={{ flexGrow: 1, p: 2 }}>\n            <Toolbar />\n            <Routes>\n              <Route path=\"/\" element={<MainPage />} />\n\n              <Route\n                path=\"/Magic/Commander\"\n                element={<CommanderDecklistsPage />}\n              />\n              <Route path=\"/Magic/Modern\" element={<ModernDecklistsPage />} />\n\n              <Route path=\"/Santryl/History\" element={<HistoryPage />} />\n              <Route path=\"/Santryl/Faith\" element={<FaithPage />} />\n\n              <Route path=\"/Dnd/Rules\" element={<DndRulesPage />} />\n\n              <Route path=\"/Btv/Rules\" element={<BtvRulesPage />} />\n\n              <Route path=\"/Recipes\" element={<RecipePage />} />\n              <Route\n                path=\"/Recipes/AubergineMeatballs\"\n                element={<AubergineMeatballs />}\n              />\n              <Route\n                path=\"/Recipes/BlackBeanBurgers\"\n                element={<BlackBeanBurgers />}\n              />\n              <Route\n                path=\"/Recipes/ButternutSquashPasta\"\n                element={<ButternutSquashPasta />}\n              />\n              <Route\n                path=\"/Recipes/CreamyMushroomPasta\"\n                element={<CreamyMushroomPasta />}\n              />\n              <Route\n                path=\"/Recipes/DoubleBeanAndRoastedPepperChilli\"\n                element={<DoubleBeanAndRoastedPepperChilli />}\n              />\n              <Route\n                path=\"/Recipes/DutchBoerenKoolStamppot\"\n                element={<DutchBoerenKoolStamppot />}\n              />\n              <Route path=\"/Recipes/Falafels\" element={<Falafels />} />\n              <Route path=\"/Recipes/GreenRisotto\" element={<GreenRisotto />} />\n              <Route\n                path=\"/Recipes/HalloumiSpinachCurry\"\n                element={<HalloumiSpinachCurry />}\n              />\n              <Route path=\"/Recipes/HarissaPasta\" element={<HarissaPasta />} />\n              <Route\n                path=\"/Recipes/HeartyLentilStew\"\n                element={<HeartyLentilStew />}\n              />\n              <Route\n                path=\"/Recipes/JewelledMoutzentra\"\n                element={<JewelledMoutzentra />}\n              />\n              <Route\n                path=\"/Recipes/KungPaoCauliflower\"\n                element={<KungPaoCauliflower />}\n              />\n              <Route\n                path=\"/Recipes/LentilShepherdsPie\"\n                element={<LentilShepherdsPie />}\n              />\n              <Route path=\"/Recipes/MapuTofu\" element={<MapuTofu />} />\n              <Route\n                path=\"/Recipes/MinnestroneSoup\"\n                element={<MinnestroneSoup />}\n              />\n              <Route path=\"/Recipes/NamKhao\" element={<NamKhao />} />\n              <Route path=\"/Recipes/PastaBake\" element={<PastaBake />} />\n              <Route\n                path=\"/Recipes/PotatoLentilSoup\"\n                element={<PotatoLentilSoup />}\n              />\n              <Route\n                path=\"/Recipes/PuffPastryVegetableTart\"\n                element={<PuffPastryVegetableTart />}\n              />\n              <Route path=\"/Recipes/Quesadillas\" element={<Quesadillas />} />\n              <Route\n                path=\"/Recipes/RedKidneyBeanCurry\"\n                element={<RedKidneyBeanCurry />}\n              />\n              <Route\n                path=\"/Recipes/RedLentilCurry\"\n                element={<RedLentilCurry />}\n              />\n              <Route path=\"/Recipes/Samosas\" element={<Samosas />} />\n              <Route\n                path=\"/Recipes/SausagePotatoKaleSoup\"\n                element={<SausagePotatoKaleSoup />}\n              />\n              <Route\n                path=\"/Recipes/SpinachPaneerPulao\"\n                element={<SpinachPaneerPulao />}\n              />\n              <Route path=\"/Recipes/SpringPilau\" element={<SpringPilau />} />\n              <Route\n                path=\"/Recipes/SweetPotatoChilli\"\n                element={<SweetPotatoChilli />}\n              />\n              <Route\n                path=\"/Recipes/SweetPotatoTortilla\"\n                element={<SweetPotatoTortilla />}\n              />\n              <Route path=\"/Recipes/SweetTofu\" element={<SweetTofu />} />\n              <Route path=\"/Recipes/VeganKofta\" element={<VeganKofta />} />\n              <Route\n                path=\"/Recipes/VegetableEnchiladas\"\n                element={<VegetableEnchiladas />}\n              />\n              <Route\n                path=\"/Recipes/VegetableJambalaya\"\n                element={<VegetableJambalaya />}\n              />\n              <Route\n                path=\"/Recipes/WinterQuinoaSalad\"\n                element={<WinterQuinoaSalad />}\n              />\n            </Routes>\n          </Box>\n        </ThemeProvider>\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}