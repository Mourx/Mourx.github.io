{"version":3,"sources":["Components/MagicDeckPreviewCard.tsx","Components/CommanderDecklistsPage.tsx","Components/RecipePage.tsx","Components/ModernDecklistsPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MagicDeckPreviewCard","props","arguments","length","undefined","deckname","previewCard","description","_useState","useState","_useState2","_slicedToArray","previewUrl","setPreviewUrl","http","XMLHttpRequest","onreadystatechange","this","readyState","status","txt","responseText","obj","JSON","parse","hasOwnProperty","image_uris","normal","card_faces","open","send","React","createElement","Card","CardContent","Typography","sx","fontSize","color","gutterBottom","CardMedia","component","image","alt","textAlign","CardActions","CommanderDecklistsPage","Grid","container","item","xs","display","gridTemplateColumns","md","RecipePage","Box","ModernDecklistsPage","theme","createTheme","palette","mode","App","_React$useState","_React$useState2","openGames","setOpenGames","_React$useState3","_React$useState4","openMagic","setMagic","BrowserRouter","CssBaseline","ThemeProvider","AppBar","position","width","concat","ml","Toolbar","variant","noWrap","Drawer","flexShrink","& .MuiDrawer-paper","minHeight","boxSizing","anchor","List","ListItemButton","to","Link","onClick","ExpandLess","ExpandMore","Collapse","in","map","text","index","ListItem","key","disablePadding","ListItemIcon","ListItemText","primary","paddingLeft","flexGrow","p","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.aca1321e.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface decklistProps {\r\n  deckname: string;\r\n  previewCard: string;\r\n  description: string;\r\n}\r\n\r\nexport function MagicDeckPreviewCard(\r\n  props: decklistProps = {\r\n    deckname: \"oof\",\r\n    previewCard: \"Gone Missing\",\r\n    description: \"Damn I forgot to describe this one\",\r\n  }\r\n) {\r\n  const [previewUrl, setPreviewUrl] = useState(\"\");\r\n  var http = new XMLHttpRequest();\r\n  http.onreadystatechange = function () {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      var txt = this.responseText;\r\n      var obj = JSON.parse(txt);\r\n      if (obj.hasOwnProperty(\"image_uris\")) {\r\n        setPreviewUrl(obj.image_uris.normal);\r\n      } else {\r\n        setPreviewUrl(obj.card_faces[0].image_uris.normal);\r\n      }\r\n    }\r\n  };\r\n\r\n  http.open(\r\n    \"GET\",\r\n    \"https://api.scryfall.com/cards/named?fuzzy=\" + props.previewCard,\r\n    true\r\n  );\r\n  http.send();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 24 }} color=\"text.secondary\" gutterBottom>\r\n          {props.deckname}\r\n        </Typography>\r\n        <CardMedia component=\"img\" image={previewUrl} alt={props.deckname} />\r\n        <Typography sx={{ textAlign: \"center\", fontSize: 18 }} component=\"div\">\r\n          {props.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>View Decklist</CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import { Box, Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React from \"react\";\r\n\r\nexport function CommanderDecklistsPage() {\r\n  return (\r\n    <Grid container>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr 1fr\" } }}\r\n      >\r\n        <MagicDeckPreviewCard\r\n          deckname=\"White Hatebears\"\r\n          previewCard=\"Thalia Guardian of Thraben\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Blue Tappers\"}\r\n          previewCard=\"Aboshan, Cephalid Emperor\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Black Instants\"}\r\n          previewCard=\"Toshiro Umezawa\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Red Devils\"}\r\n          previewCard=\"Zurzoth\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Green Stompy\"}\r\n          previewCard=\"Selvala, heart of the wilds\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WU Control\"}\r\n          previewCard=\"Kwain\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UB Mischief\"}\r\n          previewCard=\"Yuriko\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BR Group Slug\"}\r\n          previewCard=\"Tor Wauki, the younger\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"RG Artifacts\"}\r\n          previewCard=\"Meria, Scholar\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"GW 1/1s\"}\r\n          previewCard=\"Bess\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WB Lifegain\"}\r\n          previewCard=\"Karlov of the ghost\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UR Wizards\"}\r\n          previewCard=\"Adeliz\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BG Squirrels\"}\r\n          previewCard=\"Chatterfang\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"RW Gold Golems\"}\r\n          previewCard=\"General Ferrous\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"GU Frog Self-Mill\"}\r\n          previewCard=\"Grolnok\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Bant Flicker\"}\r\n          previewCard=\"Lagrella\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Esper Zombies\"}\r\n          previewCard=\"Varina\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Grixis 40k Precon\"}\r\n          previewCard=\"Abbadon the despoiler\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Jund Midrange Value\"}\r\n          previewCard=\"Slimefoot and squee\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Naya Go-Wide\"}\r\n          previewCard=\"Kitt Kanto\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Mardu Legends\"}\r\n          previewCard=\"Dihada, Bender of wills\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Temur Card Snakes\"}\r\n          previewCard=\"Xyris\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Abzan Keyword Tribal\"}\r\n          previewCard=\"Kathril\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Jeskai Voltron Eggs\"}\r\n          previewCard=\"Elsha of the infinite\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Sultai Recursion\"}\r\n          previewCard=\"Muldrotha the gravetide\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"5 Colour Legends\"}\r\n          previewCard=\"Sisay, weatherlight\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WUBR Artifacts\"}\r\n          previewCard=\"Breya, etherium shaper\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Colourless Kozi\"}\r\n          previewCard=\"Kozilek the great distortion\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Black Reanimator\"}\r\n          previewCard=\"Junji\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Naya Land Destruction\"}\r\n          previewCard=\"Hazezon, shaper of sand\"\r\n        ></MagicDeckPreviewCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport function RecipePage() {\r\n  return <Box>Recipes</Box>;\r\n}\r\n","import { Box, Grid } from \"@mui/material\";\r\nimport { MagicDeckPreviewCard } from \"./MagicDeckPreviewCard\";\r\nimport React from \"react\";\r\n\r\nexport function ModernDecklistsPage() {\r\n  return (\r\n    <Grid container>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        display=\"grid\"\r\n        sx={{ gridTemplateColumns: { md: \"1fr 1fr 1fr 1fr\" } }}\r\n      >\r\n        <MagicDeckPreviewCard\r\n          deckname=\"Goblins\"\r\n          previewCard=\"Goblin Bushwacker\"\r\n          description=\"Use low cost Goblins to quickly overwhelm your opponent.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Izzet Delver\"}\r\n          previewCard=\"Delver of Secrets\"\r\n          description=\"Flip Delver of Secrets into an early flying threat, then follow up with burn spells.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BR Vampires\"}\r\n          previewCard=\"Stromkirk Captain\"\r\n          description=\"Play a steady stream of vampires, that only get stronger in number.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Elfball\"}\r\n          previewCard=\"Elvish Mystic\"\r\n          description=\"Play an elf, make some mana. Play another elf, make some more mana.\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"BG Saprolings\"}\r\n          previewCard=\"Slimefoot the stowaway\"\r\n          description=\"Sticky saprolings are hard to wipe off the board. Follow up with a Mycoloth to end the game.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"UG Frogs\"}\r\n          previewCard=\"Grolnok\"\r\n          description=\"Attack with frogs, and gain massive card advantage from the croak counters.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WG Cats\"}\r\n          previewCard=\"Kaheera\"\r\n          description=\"Cute cats <3\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Mardu Allies\"}\r\n          previewCard=\"Kalastria Healer\"\r\n          description=\"Rally abilities strengthen your position with each ally played. Play March From the Tomb for up to 16 damage.\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WU Control\"}\r\n          previewCard=\"Approach of the second sun\"\r\n          description=\"Stall until you can cast Approach twice.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"B Tron\"}\r\n          previewCard=\"Urza's Tower\"\r\n          description=\"Get those Urza lands out fast, and play a big spell like Torment of Hailfire or Sheoldred.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"WR Control\"}\r\n          previewCard=\"Nahiri, harbinger\"\r\n          description=\"Kill all their creatures until you can turn a token into Emrakul with Indomitable Creativity.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Temur Titan's Nest\"}\r\n          previewCard=\"Titan's Nest\"\r\n          description=\"All your cards effectively gain delve. Cheat mana costs and keep playing more cards than your opponent.\"\r\n        ></MagicDeckPreviewCard>\r\n\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Combo: Electrobalance\"}\r\n          previewCard=\"Restore Balance\"\r\n          description=\"Combo into casting Restore Balance and leave your opponent with nothing, and yourself with a 9/7.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Combo: Aetherflux Storm\"}\r\n          previewCard=\"Aetherflux Reservoir\"\r\n          description=\"Make your artifacts cost nothing, then cast them to draw another one. With Aetherflux out, reach 50 life and blast your opponent.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Combo: Scapeshift\"}\r\n          previewCard=\"Valakut, the molten pinnacle\"\r\n          description=\"Cast Scapeshift and bring in 6-7 Mountains and Valakut for 18-21 damage. Another Valakut means double damage.\"\r\n        ></MagicDeckPreviewCard>\r\n        <MagicDeckPreviewCard\r\n          deckname={\"Combo: Enduring Renewal\"}\r\n          previewCard=\"Enduring Renewal\"\r\n          description=\"With Enduring Renewal out, cast a 0/0 or self-sacrificing goblin for a huge storm count, then Grapeshot to end.\"\r\n        ></MagicDeckPreviewCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport {\n  AppBar,\n  Box,\n  Collapse,\n  CssBaseline,\n  Drawer,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  ThemeProvider,\n  Toolbar,\n  Typography,\n  createTheme,\n} from \"@mui/material\";\n\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { CommanderDecklistsPage } from \"./Components/CommanderDecklistsPage\";\nimport { RecipePage } from \"./Components/RecipePage\";\nimport { Link } from \"react-router-dom\";\nimport { ModernDecklistsPage } from \"./Components/ModernDecklistsPage\";\n\nconst theme = createTheme({ palette: { mode: \"light\" } });\n\nfunction App() {\n  const [openGames, setOpenGames] = React.useState(false);\n  const [openMagic, setMagic] = React.useState(false);\n  const changeOpenGames = () => {\n    setOpenGames(!openGames);\n  };\n\n  const changeOpenMagic = () => {\n    setMagic(!openMagic);\n  };\n\n  return (\n    <BrowserRouter>\n      <Box display={\"flex\"}>\n        <CssBaseline />\n\n        <ThemeProvider theme={theme}>\n          <AppBar\n            position=\"fixed\"\n            sx={{\n              width: `calc(100% - ${240}px)`,\n              ml: `${240}px`,\n            }}\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                This is always here wow\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            sx={{\n              width: 240,\n              flexShrink: 0,\n              \"& .MuiDrawer-paper\": {\n                width: 240,\n                minHeight: \"100vh\",\n                boxSizing: \"border-box\",\n              },\n            }}\n            variant=\"permanent\"\n            anchor=\"left\"\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                Where Go?\n              </Typography>\n            </Toolbar>\n            <List>\n              <ListItemButton to={\"/Recipes\"} component={Link}>\n                Recipes\n              </ListItemButton>\n              <ListItemButton onClick={changeOpenGames}>\n                Games\n                {openGames ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openGames}>\n                <List>\n                  {[\"Forty Frogs\", \"Shapez\"].map((text, index) => (\n                    <ListItem key={text} disablePadding>\n                      <ListItemButton>\n                        <ListItemIcon></ListItemIcon>\n                        <ListItemText primary={text} />\n                      </ListItemButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </Collapse>\n              <ListItemButton onClick={changeOpenMagic}>\n                Magic Decks\n                {openMagic ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={openMagic}>\n                <List>\n                  <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                    <ListItemButton to={\"/Commander\"} component={Link}>\n                      Commander\n                    </ListItemButton>\n                  </ListItem>\n\n                  <ListItem sx={{ paddingLeft: \"2vw\" }}>\n                    <ListItemButton to={\"/Modern\"} component={Link}>\n                      Modern\n                    </ListItemButton>\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Drawer>\n          <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n            <Toolbar />\n            <Routes>\n              <Route path=\"/\" element={<CommanderDecklistsPage />} />\n              <Route path=\"/Commander\" element={<CommanderDecklistsPage />} />\n              <Route path=\"/Modern\" element={<ModernDecklistsPage />} />\n              <Route path=\"/Recipes\" element={<RecipePage />} />\n            </Routes>\n          </Box>\n        </ThemeProvider>\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}